<?xml version="1.0"?>
<doc>
    <assembly>
        <name>DevComponents.DotNetBar</name>
    </assembly>
    <members>
        <member name="M:DevComponents.DotNetBar.AutoHidePanel.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
        </member>
        <member name="M:DevComponents.DotNetBar.AutoHidePanel.SetBarPosition(DevComponents.DotNetBar.Bar,System.Int32)">
            <summary>
            Sets bars position on the auto-hide panel.
            </summary>
            <param name="bar">Bar for which position should be changed.</param>
            <param name="iIndex">New indexed position of the bar.</param>
        </member>
        <member name="P:DevComponents.DotNetBar.AutoHidePanel.AutoHideShowTimeout">
            <summary>
            Gets or sets the timeout in milliseconds for auto hide/show action.
            When timeout has elapsed and mouse has left the bar the bar will be automatically hidden.
            If mouse is hovering over the collapsed bar and timeout has elapsed the bar will be displayed.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.AutoHidePanel.EnableHoverExpand">
            <summary>
                Gets or sets whether bars on auto-hide panel are displayed when mouse hovers over the tab.
            </summary>
        </member>
        <member name="T:DevComponents.DotNetBar.eTipPosition">
            <summary>
            Indicates the Balloon tip position.
            </summary>
        </member>
        <member name="F:DevComponents.DotNetBar.eTipPosition.Top">
            <summary>
            Tip is on the top.
            </summary>
        </member>
        <member name="F:DevComponents.DotNetBar.eTipPosition.Left">
            <summary>
            Tip is on the left side.
            </summary>
        </member>
        <member name="F:DevComponents.DotNetBar.eTipPosition.Right">
            <summary>
            Tip is on the right side.
            </summary>
        </member>
        <member name="F:DevComponents.DotNetBar.eTipPosition.Bottom">
            <summary>
            Tip is on the bottom.
            </summary>
        </member>
        <member name="T:DevComponents.DotNetBar.eBallonStyle">
            <summary>
            Indicates the style of the balloon.
            </summary>
        </member>
        <member name="T:DevComponents.DotNetBar.eAlertAnimation">
            <summary>
            Indicates type of Alert animation performed when alert is displayed.
            </summary>
        </member>
        <member name="F:DevComponents.DotNetBar.eAlertAnimation.None">
            <summary>
            No animation take place when alert is displayed.
            </summary>
        </member>
        <member name="F:DevComponents.DotNetBar.eAlertAnimation.BottomToTop">
            <summary>
            Alert is animated from bottom to top. (Default)
            </summary>
        </member>
        <member name="F:DevComponents.DotNetBar.eAlertAnimation.TopToBottom">
            <summary>
            Alert is animated from top to bottom.
            </summary>
        </member>
        <member name="F:DevComponents.DotNetBar.eAlertAnimation.LeftToRight">
            <summary>
            Alert is animated from left to right.
            </summary>
        </member>
        <member name="F:DevComponents.DotNetBar.eAlertAnimation.RightToLeft">
            <summary>
            Alert is animated from right to left.
            </summary>
        </member>
        <member name="T:DevComponents.DotNetBar.CustomPaintEventHandler">
            <summary>
            Delegate for custom paint event handler.
            </summary>
        </member>
        <member name="T:DevComponents.DotNetBar.Balloon">
            <summary>
            Summary description for Balloon.
            </summary>
        </member>
        <member name="M:DevComponents.DotNetBar.Balloon.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
        </member>
        <member name="M:DevComponents.DotNetBar.Balloon.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="M:DevComponents.DotNetBar.Balloon.AutoResize">
            <summary>
            Auto resize balloon to the content. Balloon width is calculated so image and caption text can fit in single line.
            </summary>
        </member>
        <member name="M:DevComponents.DotNetBar.Balloon.RecalcLayout">
            <summary>
            Recalculates layout of the balloon.
            </summary>
        </member>
        <member name="M:DevComponents.DotNetBar.Balloon.Show(System.Windows.Forms.Control)">
            <summary>
            Displays balloon using control to automatically calculate balloon location. Method is usually used display balloon that is showing information for the certain control.
            </summary>
            <param name="referenceControl">Control used for balloon positioning.</param>
        </member>
        <member name="M:DevComponents.DotNetBar.Balloon.Show(System.Windows.Forms.Control,System.Boolean)">
            <summary>
            Displays balloon using control to automatically calculate balloon location. Method is usually used display balloon that is showing information for the certain control.
            </summary>
            <param name="referenceControl">Control used for balloon positioning.</param>
            <param name="balloonFocus">Indicates whether balloon receives input focus.</param>
        </member>
        <member name="M:DevComponents.DotNetBar.Balloon.Show(System.Drawing.Rectangle,System.Boolean)">
            <summary>
            Displays balloon using rectangle to automatically calculate balloon location. Method is usually used display balloon that is showing information for the certain screen region.
            </summary>
            <param name="referenceScreenRect">Rectangle in screen coordinates used for balloon positioning.</param>
            <param name="balloonFocus">Indicates whether balloon receives input focus.</param>
        </member>
        <member name="M:DevComponents.DotNetBar.Balloon.Show(DevComponents.DotNetBar.BaseItem,System.Boolean)">
            <summary>
            Displays balloon using item to automatically calculate balloon location. Method is usually used display balloon that is showing information for the certain item.
            </summary>
            <param name="item">Item used for balloon positioning.</param>
            <param name="balloonFocus">Indicates whether balloon receives input focus.</param>
        </member>
        <member name="M:DevComponents.DotNetBar.Balloon.Show(System.Boolean)">
            <summary>
            Display balloon.
            </summary>
            <param name="balloonFocus">Indicates whether balloon receives input focus.</param>
        </member>
        <member name="M:DevComponents.DotNetBar.Balloon.Show">
            <summary>
            Displays balloon.
            </summary>
        </member>
        <member name="M:DevComponents.DotNetBar.Balloon.Hide">
            <summary>
            Hides balloon.
            </summary>
        </member>
        <member name="E:DevComponents.DotNetBar.Balloon.PaintBackground">
            <summary>
            Occurs when background is redrawn.
            </summary>
        </member>
        <member name="E:DevComponents.DotNetBar.Balloon.PaintCaptionImage">
            <summary>
            Occurs when caption image is redrawn.
            </summary>
        </member>
        <member name="E:DevComponents.DotNetBar.Balloon.PaintCaptionText">
            <summary>
            Occurs when caption text is redrawn.
            </summary>
        </member>
        <member name="E:DevComponents.DotNetBar.Balloon.PaintText">
            <summary>
            Occurs when text is redrawn.
            </summary>
        </member>
        <member name="E:DevComponents.DotNetBar.Balloon.CloseButtonClick">
            <summary>
            Occurs when close button is clicked.
            </summary>
        </member>
        <member name="E:DevComponents.DotNetBar.Balloon.TipPositionChanged">
            <summary>
            Occurs when TipPosition property has changed.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Balloon.BackColor2">
            <summary>
            Gets or sets the target gradient background color.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Balloon.BackColorGradientAngle">
            <summary>
            Gets or sets gradient fill angle.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Balloon.BackgroundImageAlpha">
            <summary>
            Specifies the transparency of background image.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Balloon.BackgroundImagePosition">
            <summary>
            Specifies background image position when container is larger than image.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Balloon.BorderColor">
            <summary>
            Gets or sets the border color..
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Balloon.Style">
            <summary>
            Specifies balloon style.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Balloon.ShowCloseButton">
            <summary>
            Gets or sets whether the Close button is displayed.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Balloon.AlertAnimation">
            <summary>
            Gets or sets the animation type used to display Alert type balloon.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Balloon.AlertAnimationDuration">
            <summary>
            Gets or sets the total time in milliseconds alert animation takes.
            Default value is 200.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Balloon.AutoClose">
            <summary>
            Gets or sets whether balloon will close automatically when user click the close button.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Balloon.AutoCloseTimeOut">
            <summary>
            Gets or sets time period in seconds after balloon closes automatically.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Balloon.CloseButtonNormal">
            <summary>
            Gets or sets the custom image for Close Button.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Balloon.CloseButtonHot">
            <summary>
            Gets or sets the custom image for Close Button when mouse is over the button.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Balloon.CloseButtonPressed">
            <summary>
            Gets or sets the custom image for Close Button when button is pressed.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Balloon.CaptionImage">
            <summary>
            Gets or sets the Caption image.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Balloon.CaptionIcon">
            <summary>
            Gets or sets the Caption icon. Icon is used to provide support for alpha-blended images in caption.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Balloon.CaptionFont">
            <summary>
            Gets or sets the Caption font.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Balloon.CaptionText">
            <summary>
            Gets or sets text displayed in caption.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Balloon.CaptionColor">
            <summary>
            Gets or sets color of caption text.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Balloon.TipPosition">
            <summary>
            Gets or set position of the balloon tip.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Balloon.TipOffset">
            <summary>
            Gets or sets tip distance from the edge of the balloon.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Balloon.TipLength">
            <summary>
            Returns length of the tip.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Balloon.Visible">
            <summary>
            Gets/Sets whether Balloon is visible.
            </summary>
        </member>
        <member name="T:DevComponents.DotNetBar.BalloonTip">
            <summary>
            Represents a balloon style pop-up window that displays a brief description of a control's purpose when the mouse hovers over the control or when controls receives input focus.
            </summary>
        </member>
        <member name="M:DevComponents.DotNetBar.BalloonTip.#ctor">
            <summary>
            Initializes a new instance of the BalloonTip class.
            </summary>
        </member>
        <member name="M:DevComponents.DotNetBar.BalloonTip.Dispose(System.Boolean)">
            <summary>
               Clean up any resources being used.
            </summary>
        </member>
        <member name="M:DevComponents.DotNetBar.BalloonTip.GetBalloonCaption(System.Windows.Forms.Control)">
            <summary>
            Retrieves the Balloon Caption text associated with the specified control.
            </summary>
        </member>
        <member name="M:DevComponents.DotNetBar.BalloonTip.SetBalloonCaption(System.Windows.Forms.Control,System.String)">
            <summary>
            Associates Balloon Caption text with the specified control.
            </summary>
            <param name="control">The Control to associate the Balloon Caption text with.</param>
            <param name="value">The Balloon Caption text to display on the Balloon.</param>
        </member>
        <member name="M:DevComponents.DotNetBar.BalloonTip.GetBalloonText(System.Windows.Forms.Control)">
            <summary>
            Retrieves the Balloon text associated with the specified control.
            </summary>
        </member>
        <member name="M:DevComponents.DotNetBar.BalloonTip.SetBalloonText(System.Windows.Forms.Control,System.String)">
            <summary>
            Associates Balloon text with the specified control.
            </summary>
            <param name="control">The Control to associate the Balloon text with.</param>
            <param name="value">The Balloon text to display on the Balloon.</param>
        </member>
        <member name="M:DevComponents.DotNetBar.BalloonTip.RemoveAll">
            <summary>
            Removes all Balloon texts currently associated with the BalloonTip control.
            </summary>
        </member>
        <member name="M:DevComponents.DotNetBar.BalloonTip.Remove(System.Windows.Forms.Control)">
            <summary>
            Removes specific Balloon texts currently associated with the BalloonTip control.
            </summary>
            <param name="control">Control that has Balloon texts associated.</param>
        </member>
        <member name="M:DevComponents.DotNetBar.BalloonTip.ShowBalloon(System.Windows.Forms.Control)">
            <summary>
            Shows Balloon for specific control. Control must have Balloon already assigned to it.
            </summary>
            <param name="control">Control that has Balloon already assigned.</param>
        </member>
        <member name="M:DevComponents.DotNetBar.BalloonTip.CloseBalloon">
            <summary>
            Closes Balloon control if visible.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.BalloonTip.Enabled">
            <summary>
            Gets or sets a value indicating whether the BalloonTip is currently active.
            true if the BalloonTip is currently active; otherwise, false. The default is true.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.BalloonTip.BalloonTriggerControl">
            <summary>
            Returns reference to the control that triggered balloon.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.BalloonTip.BalloonFocus">
            <summary>
            Gets or sets a value indicating whether Balloon receives input focus when displayed.
            Default value is false.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.BalloonTip.InitialDelay">
            <summary>
            Gets or sets the time (in milliseconds) that passes before the BalloonTip appears.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.BalloonTip.ShowAlways">
            <summary>
            Gets or sets a value indicating whether a Balloon window is displayed even when its parent form is not active. Default value is false.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.BalloonTip.BalloonControl">
            <summary>
            Gets or sets the internal Balloon control that is used to display Balloon.
            This property will have valid value only during time Balloon is actually
            displayed on the screen. Value will also be valid during BallonDisplaying event.
            You can use this property to further customize Balloon control before it is
            displayed to the user. You can also set it to your own instance of the Balloon
            control (or the control that is inheriting it) for ultimate customization options.
            Note that new instance of Balloon control is created each time Balloon needs to be displayed.
            Once Balloon is closed control is disposed.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.BalloonTip.Style">
            <summary>
            Specifies balloon style.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.BalloonTip.AlertAnimation">
            <summary>
            Gets or sets the animation type used to display Alert type balloon.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.BalloonTip.AlertAnimationDuration">
            <summary>
            Gets or sets the total time in milliseconds alert animation takes.
            Default value is 200.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.BalloonTip.AutoClose">
            <summary>
            Gets or sets whether balloon will close automatically when user click the close button.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.BalloonTip.AutoCloseTimeOut">
            <summary>
            Gets or sets time period in seconds after balloon closes automatically.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.BalloonTip.ShowBalloonOnFocus">
            <summary>
            Gets or sets whether Balloon is shown after control receives input focus. Default value is false. When set to true Balloon will not be displayed on mouse hover.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.BalloonTip.ShowCloseButton">
            <summary>
            Gets or sets whether the Balloon Close button is displayed.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.BalloonTip.CaptionImage">
            <summary>
            Gets or sets the Balloon Caption image.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.BalloonTip.CaptionIcon">
            <summary>
            Gets or sets the Balloon Caption icon. Icon is used to provide support for alpha-blended images in caption.
            </summary>
        </member>
        <member name="T:DevComponents.DotNetBar.Bar">
            <summary>
             Represents bar control.
            </summary>
        </member>
        <member name="T:DevComponents.DotNetBar.IDockInfo">
            <summary>
            Interface used for docking support.
            </summary>
        </member>
        <member name="M:DevComponents.DotNetBar.IDockInfo.MinimumSize(DevComponents.DotNetBar.eOrientation)">
            <summary>
            Returns Minimum docked size of the control.
            </summary>
        </member>
        <member name="M:DevComponents.DotNetBar.IDockInfo.PreferredSize(DevComponents.DotNetBar.eOrientation)">
            <summary>
            Returns Preferrred size of the docked control.
            </summary>
        </member>
        <member name="M:DevComponents.DotNetBar.IDockInfo.SetDockLine(System.Int32)">
            <summary>
            Sets the dock line for the control. Used internaly by dock manager.
            </summary>
            <param name="iLine">New Dock line.</param>
        </member>
        <member name="P:DevComponents.DotNetBar.IDockInfo.CanDockTop">
            <summary>
            Indicated whether control can be docked on top dock site.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.IDockInfo.CanDockBottom">
            <summary>
             Indicated whether control can be docked on bottom dock site.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.IDockInfo.CanDockLeft">
            <summary>
             Indicated whether control can be docked on left dock site.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.IDockInfo.CanDockRight">
            <summary>
             Indicated whether control can be docked on right dock site.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.IDockInfo.Stretch">
            <summary>
             Indicated whether control can be stretched to fill dock site.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.IDockInfo.DockOffset">
            <summary>
            Holds the left position (dock offset) of the control.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.IDockInfo.DockLine">
            <summary>
            Specifies the dock line for the control.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.IDockInfo.DockOrientation">
            <summary>
            Specifies current dock orientation.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.IDockInfo.Docked">
            <summary>
            Gets whether control is docked.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.IDockInfo.DockedSite">
            <summary>
            Returns the dock site of the control.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.IDockInfo.DockSide">
            <summary>
            Gets or sets the control dock side.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.IDockInfo.LockDockPosition">
            <summary>
            Gets or sets whether bar is locked to prevent docking below it.
            </summary>
        </member>
        <member name="M:DevComponents.DotNetBar.Bar.#ctor">
            <summary>
            Initializes a new instance of the Bar class.
            </summary>
        </member>
        <member name="M:DevComponents.DotNetBar.Bar.#ctor(System.String)">
            <summary>
            Initializes a new instance of the Control class.
            </summary>
            <param name="BarCaption">Bar Caption</param>
        </member>
        <member name="M:DevComponents.DotNetBar.Bar.RecalcLayout">
            <summary>
            Recalculates the layout of the Bar, resizes the Bar if necessary and repaints it.
            </summary>
        </member>
        <member name="M:DevComponents.DotNetBar.Bar.RecalcSize">
            <summary>
            Recalculates the layout of the Bar and repaints it. This will not change the size of the Bar it will only force the recalculation of the size for each contained item and it will repaint the bar. To ensure that Bar is resized if necessary as well call RecalcLayout method.
            </summary>
        </member>
        <member name="M:DevComponents.DotNetBar.Bar.SaveDefinition(System.String)">
            <summary>
            Saves the Bar definition to file.
            </summary>
            <param name="FileName">Definition file name.</param>
        </member>
        <member name="M:DevComponents.DotNetBar.Bar.LoadDefinition(System.String)">
            <summary>
            Loads the Bar definition from file.
            </summary>
            <param name="FileName">Definition file name.</param>
        </member>
        <member name="M:DevComponents.DotNetBar.Bar.SaveLayout(System.String)">
            <summary>
            Saves the Bar layout to file.
            </summary>
            <param name="FileName">Definition file name.</param>
        </member>
        <member name="M:DevComponents.DotNetBar.Bar.LoadLayout(System.String)">
            <summary>
            Loads the Bar definition from file.
            </summary>
            <param name="FileName">Definition file name.</param>
        </member>
        <member name="M:DevComponents.DotNetBar.Bar.Show">
            <summary>
            Makes the Bar display by setting the visible property to true.
            </summary>
        </member>
        <member name="M:DevComponents.DotNetBar.Bar.Hide">
            <summary>
            Hides the Bar.
            </summary>
        </member>
        <member name="M:DevComponents.DotNetBar.Bar.GetItem(System.String)">
            <summary>
            Returns the first child item with specified name regardless of it's hierarchy.
            </summary>
            <param name="name">Item name.</param>
            <returns></returns>
        </member>
        <member name="M:DevComponents.DotNetBar.Bar.GetItems(System.String)">
            <summary>
            Returns the collection of items with the specified name.
            </summary>
            <param name="ItemName">Item name to look for.</param>
            <returns></returns>
        </member>
        <member name="M:DevComponents.DotNetBar.Bar.GetItems(System.String,System.Type)">
            <summary>
            Returns the collection of items with the specified name and type.
            </summary>
            <param name="ItemName">Item name to look for.</param>
            <param name="itemType">Item type to look for.</param>
            <returns></returns>
        </member>
        <member name="M:DevComponents.DotNetBar.Bar.GetAutoHidePanel">
            <summary>
            Returns AutoHidePanel that bar is on if in auto-hide state otherwise returns null.
            </summary>
            <returns>AutoHidePanel object or null if bar is not in auto-hide state.</returns>
        </member>
        <member name="M:DevComponents.DotNetBar.Bar.HideToolTip">
            <summary>
            Destroys tooltip window.
            </summary>
        </member>
        <member name="M:DevComponents.DotNetBar.Bar.ShowToolTip(System.String)">
            <summary>
            Shows tooltip for this item.
            </summary>
        </member>
        <member name="M:DevComponents.DotNetBar.Bar.MinimumSize(DevComponents.DotNetBar.eOrientation)">
            <summary>
            Returns the Minimum Size for specified orientation.
            </summary>
            <param name="dockOrientation">Orientation to return minimum size for.</param>
            <returns></returns>
        </member>
        <member name="M:DevComponents.DotNetBar.Bar.PreferredSize(DevComponents.DotNetBar.eOrientation)">
            <summary>
            Returns the preferred size of the Bar when docked.
            </summary>
            <param name="dockOrientation">Orientation to return preferred size for.</param>
            <returns></returns>
        </member>
        <member name="M:DevComponents.DotNetBar.Bar.SetDockLine(System.Int32)">
            <summary>
            Sets the dock line but it does not forces the Bar to change position. The position will be changed on next layout request or when dock site needs to recalculate the layout of the bat. Used internally only.
            </summary>
        </member>
        <member name="E:DevComponents.DotNetBar.Bar.BarDock">
            <summary>
            Occurs after Bar is docked.
            </summary>
        </member>
        <member name="E:DevComponents.DotNetBar.Bar.BarUndock">
            <summary>
            Occurs after Bar is undocked.
            </summary>
        </member>
        <member name="E:DevComponents.DotNetBar.Bar.DefinitionLoaded">
            <summary>
            Occurs after Bar definition is loaded.
            </summary>
        </member>
        <member name="E:DevComponents.DotNetBar.Bar.DockTabChange">
            <summary>
            Occurs when current Dock tab has changed.
            </summary>
        </member>
        <member name="E:DevComponents.DotNetBar.Bar.UserVisibleChanged">
            <summary>
            Occurs when bar visibility has changed as a result of user action.
            </summary>
        </member>
        <member name="E:DevComponents.DotNetBar.Bar.AutoHideChanged">
            <summary>
            Occurs when bar auto hide state has changed.
            </summary>
        </member>
        <member name="E:DevComponents.DotNetBar.Bar.Closing">
            <summary>
            Occurs when Bar is about to be closed as a result of user clicking the Close button on the bar.
            </summary>
        </member>
        <member name="E:DevComponents.DotNetBar.Bar.AutoHideDisplay">
            <summary>
            Occurs when Bar in auto-hide state is about to be displayed.
            </summary>
        </member>
        <member name="E:DevComponents.DotNetBar.Bar.PopupClose">
            <summary>
            Occurs when popup item is closing. Event is fired only when Bar is used independently of DotNetBarManager.
            </summary>
        </member>
        <member name="E:DevComponents.DotNetBar.Bar.PopupContainerLoad">
            <summary>
            Occurs when popup of type container is loading. Event is fired only when Bar is used independently of DotNetBarManager.
            </summary>
        </member>
        <member name="E:DevComponents.DotNetBar.Bar.PopupContainerUnload">
            <summary>
            Occurs when popup of type container is unloading. Event is fired only when Bar is used independently of DotNetBarManager.
            </summary>
        </member>
        <member name="E:DevComponents.DotNetBar.Bar.PopupOpen">
            <summary>
            Occurs when popup item is about to open.  Event is fired only when Bar is used independently of DotNetBarManager.
            </summary>
        </member>
        <member name="E:DevComponents.DotNetBar.Bar.PopupShowing">
            <summary>
            Occurs just before popup window is shown. Event is fired only when Bar is used independently of DotNetBarManager.
            </summary>
        </member>
        <member name="E:DevComponents.DotNetBar.Bar.BeforeDockTabDisplayed">
            <summary>
            Occurs before dock tab is displayed.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Bar.Owner">
            <summary>
            Gets/Sets the owner of the Bar object.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Bar.LastFocusControl">
            <summary>
            Returns the reference to the control that last had input focus. This property should be used to
            determine which control had input focus before bar gained the focus. Use it to apply
            the menu command to active control.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Bar.ParentItem">
            <summary>
            Gets/Sets the parent item of the Bar. The parents item sub-items are displayed on the bar.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Bar.PopupAnimation">
            <summary>
            Gets/Sets the popup animation that will be applied when popup is shown.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Bar.Definition">
            <summary>
            Gets/Sets Bar definition as XML string.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Bar.LayoutDefinition">
            <summary>
            Gets/Sets Bar layout as XML string.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Bar.BackgroundImagePosition">
            <summary>
            Specifies background image position when container is larger than image.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Bar.BackgroundImageAlpha">
            <summary>
            Specifies the transparency of background image.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Bar.SideBar">
            <summary>
            Sets/Gets the side bar image structure.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Bar.Text">
            <summary>
            Gets/Sets the caption of the Bar. This text is displayed in title of the Bar when Bar is floating.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Bar.ThemeAware">
            <summary>
            Specifies whether Bar is drawn using Themes when running on OS that supports themes like Windows XP.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Bar.BarState">
            <summary>
            Returns current Bar state.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Bar.Items">
            <summary>
            Returns the collection of sub-items hosted on the Bar.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Bar.ItemsContainer">
            <summary>
            Returns the reference to the container that containing the sub-items.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Bar.DisplayMoreItemsOnMenu">
            <summary>
            Gets/Sets whether the items that could not be displayed on the non-wrap Bar are displayed on popup menu or popup Bar.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Bar.ItemSpacing">
            <summary>
            Gets/Sets the spacing in pixels between the sub-items.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Bar.PaddingTop">
            <summary>
            Gets/Sets the padding in pixels. This represents the spacing between the top edge of the bar and the top of the item.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Bar.PaddingBottom">
            <summary>
            Gets/Sets the padding in pixels. This represents the spacing between the bottom edge of the bar and the bottom of the item.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Bar.PaddingLeft">
            <summary>
            Gets/Sets the padding in pixels. This represents the spacing between the left edge of the bar and the left side of the first item.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Bar.PaddingRight">
            <summary>
            Gets/Sets the padding in pixels. This represents the spacing between the right edge of the bar and the right side of the last item.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Bar.MenuBar">
            <summary>
            Sets/Gets whether bar is menu bar. Menu bar will show system icons
            for Maximized forms in MDI Applications. Only one bar can be a Menu bar in an application.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Bar.ColorScheme">
            <summary>
            Gets or sets Bar Color Scheme.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Bar.CaptionBackColor">
            <summary>
            Gets or sets Caption (Title bar) background color.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Bar.CaptionForeColor">
            <summary>
            Gets or sets Caption (Title bar) text color.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Bar.Style">
            <summary>
            Gets/Sets the visual style of the Bar.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Bar.WrapItems">
            <summary>
            Gets/Sets whether the items will be wrapped into next line when Bar is full. Applies to both docked and floating Bar states.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Bar.WrapItemsDock">
            <summary>
            Gets/Sets whether the items will be wrapped into next line when Bar is full. Applies only to Bars that are docked.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Bar.WrapItemsFloat">
            <summary>
            Gets/Sets whether the items will be wrapped into next line when Bar is full. Applies only to Bars that are floating.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Bar.GrabHandleStyle">
            <summary>
            Gets/Sets the grab handle style of the docked Bars.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Bar.GrabHandleRect">
            <summary>
            Gets the grab handle client rectangle.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Bar.CanHide">
            <summary>
            Gets/Sets whether the Bar can be hidden by end-user.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Bar.DockedBorderStyle">
            <summary>
            Gets/Sets border style when Bar is docked.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Bar.HideFloatingInactive">
            <summary>
            Gets/Sets whether floating bar is hidden when application loses focus.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Bar.TabNavigation">
            <summary>
            Gets/Sets whether tab navigation buttons are shown for tabbed dockable bars.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Bar.SingleLineColor">
            <summary>
            Gets or sets the border line color when docked border is a single line.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Bar.Visible">
            <summary>
            Gets/Sets whether Bar is visible or not.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Bar.AcceptDropItems">
            <summary>
            Gets or sets whether bar is valid drop target for end-user bar customization.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Bar.CanCustomize">
            <summary>
            Gets or sets whether items on the Bar can be customized.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Bar.CustomBar">
            <summary>
            Specifies whether Bar was created by user using Customize dialog.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Bar.Name">
            <summary>
            Gets/Sets the Bar name used to identify Bar from code.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Bar.ImageSize">
            <summary>
            Gets/Sets the Image size for all sub-items on the Bar.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Bar.LayoutType">
            <summary>
            Gets or sets the layout type.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Bar.EqualButtonSize">
            <summary>
            Gets or sets whether all buttons are automatically resized to the largest button in collection.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Bar.BackColor">
            <summary>
            Gets or sets the Bar back color.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Bar.CustomizeMenu">
            <summary>
            Gets or sets the Bar customize menu (Applies to the bars with LayoutType set to DockWindow only).
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Bar.AutoHideSide">
            <summary>
            Indicates the auto-hide side of the parent form where bar is positioned.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Bar.AutoHide">
            <summary>
            Indicates whether Bar is in auto-hide state.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Bar.AutoHideVisible">
            <summary>
            Gets or sets the visibility of the bar when bar is in auto-hide state.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Bar.CanAutoHide">
            <summary>
            Indicates whether Bar can be auto hidden.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Bar.AutoHideAnimationTime">
            <summary>
            Gets or sets how long it takes to play the auto-hide animation, in milliseconds. Maximum value is 2000, 0 disables animation.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Bar.ToolTipVisible">
            <summary>
            Gets whether tooltip is visible or not.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Bar.DockTabControl">
            <summary>
            Returns the reference to internal TabStrip control used to display contained DockContainerItems.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Bar.SelectedDockTab">
            <summary>
            Gets or sets the tab (DockContainerItem) index for Bars with LayoutType set to eLayoutType.DockContainer. Index corresponds to the index of the DockContainerItem in Bar.Items collection.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Bar.BackgroundImage">
            <summary>
            Indicates Bar background image.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Bar.CanUndock">
            <summary>
            Specifies whether Bar can be undocked.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Bar.CanTearOffTabs">
            <summary>
            Specifes whether end-user can tear-off (deattach) the tabs on dockable window.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Bar.CanReorderTabs">
            <summary>
            Specifes whether end-user can reorder the tabs on dockable window.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Bar.CanDockTop">
            <summary>
            Specifes whether Bar can be docked on Top dock site or not.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Bar.CanDockBottom">
            <summary>
            Specifes whether Bar can be docked on Bottom dock site or not.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Bar.CanDockLeft">
            <summary>
            Specifes whether Bar can be docked on Left dock site or not.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Bar.CanDockRight">
            <summary>
            Specifes whether Bar can be docked on Right dock site or not.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Bar.Stretch">
            <summary>
            Specifies whether Bar will stretch to always fill the space in dock site.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Bar.DockOffset">
            <summary>
            Gets/Sets the distance from the far left/top side of the docking site.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Bar.DockLine">
            <summary>
            Gets/Sets the dock line.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Bar.DockTabAlignment">
            <summary>
            Gets or sets the dock tab alignment.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Bar.AlwaysDisplayDockTab">
            <summary>
            Gets or sets whether tab that shows all dock containers on the bar is visible all the time. By default
            tab is hidden when there is only one item displayed.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Bar.LockDockPosition">
            <summary>
            Gets or sets whether bar is locked to prevent docking below it. Applies to undockable bars only.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Bar.DockOrientation">
            <summary>
            Gets/Sets the orientation of the Bar.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Bar.Docked">
            <summary>
            Returns whether Bar is docked or not.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Bar.DockedSite">
            <summary>
            Returns the Bars dock site.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Bar.DockSide">
            <summary>
            Gets/Sets the dock side for the Bar.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Bar.InitalFloatLocation">
            <summary>
            Gets or sets the inital floating location. This location will be used when DockSide is set to None.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Bar.ShowToolTips">
            <summary>
            Indicates whether Tooltips are shown on Bars and menus.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Bar.AlwaysDisplayKeyAccelerators">
            <summary>
            Gets or sets whether accelerator letters for menu or toolbar commands are underlined regardless of
            current Windows settings. Accelerator keys allow easy access to menu commands by using
            Alt + choosen key (letter). Default value is false which indicates that system setting is used
            to determine whether accelerator letters are underlined. Setting this property to true
            will always display accelerator letter underlined.
            </summary>
        </member>
        <member name="T:DevComponents.DotNetBar.BarBaseControl">
            <summary>
            Represents base control for bars.
            </summary>
        </member>
        <member name="T:DevComponents.DotNetBar.IOwnerLocalize">
            <summary>
            Provides support for custom localization.
            </summary>
        </member>
        <member name="M:DevComponents.DotNetBar.BarBaseControl.GetItems(System.String)">
            <summary>
            Returns the collection of items with the specified name.
            </summary>
            <param name="ItemName">Item name to look for.</param>
            <returns></returns>
        </member>
        <member name="M:DevComponents.DotNetBar.BarBaseControl.GetItems(System.String,System.Type)">
            <summary>
            Returns the collection of items with the specified name and type.
            </summary>
            <param name="ItemName">Item name to look for.</param>
            <param name="itemType">Item type to look for.</param>
            <returns></returns>
        </member>
        <member name="M:DevComponents.DotNetBar.BarBaseControl.GetItem(System.String)">
            <summary>
            Returns the first item that matches specified name.
            </summary>
            <param name="ItemName">Item name to look for.</param>
            <returns></returns>
        </member>
        <member name="M:DevComponents.DotNetBar.BarBaseControl.DevComponents#DotNetBar#IOwner#Customize">
            <summary>
            Invokes the DotNetBar Customize dialog.
            </summary>
        </member>
        <member name="M:DevComponents.DotNetBar.BarBaseControl.Dispose(System.Boolean)">
            <summary> 
            Clean up any resources being used.
            </summary>
        </member>
        <member name="M:DevComponents.DotNetBar.BarBaseControl.SetDesignTimeDefaults">
            <summary>
            Applies design-time defaults to control.
            </summary>
        </member>
        <member name="M:DevComponents.DotNetBar.BarBaseControl.RecalcLayout">
            <summary>
            Applies any layout changes and repaint the control.
            </summary>
        </member>
        <member name="E:DevComponents.DotNetBar.BarBaseControl.ItemClick">
            <summary>
            Occurs when Item is clicked.
            </summary>
        </member>
        <member name="E:DevComponents.DotNetBar.BarBaseControl.PopupContainerLoad">
            <summary>
            Occurs when popup of type container is loading.
            </summary>
        </member>
        <member name="E:DevComponents.DotNetBar.BarBaseControl.PopupContainerUnload">
            <summary>
            Occurs when popup of type container is unloading.
            </summary>
        </member>
        <member name="E:DevComponents.DotNetBar.BarBaseControl.PopupOpen">
            <summary>
            Occurs when popup item is about to open.
            </summary>
        </member>
        <member name="E:DevComponents.DotNetBar.BarBaseControl.PopupClose">
            <summary>
            Occurs when popup item is closing.
            </summary>
        </member>
        <member name="E:DevComponents.DotNetBar.BarBaseControl.PopupShowing">
            <summary>
            Occurs just before popup window is shown.
            </summary>
        </member>
        <member name="E:DevComponents.DotNetBar.BarBaseControl.ExpandedChange">
            <summary>
            Occurs when Item Expanded property has changed.
            </summary>
        </member>
        <member name="E:DevComponents.DotNetBar.BarBaseControl.MouseDown">
            <summary>
            Occurs when mouse button is pressed.
            </summary>
        </member>
        <member name="E:DevComponents.DotNetBar.BarBaseControl.MouseUp">
            <summary>
            Occurs when mouse button is released.
            </summary>
        </member>
        <member name="E:DevComponents.DotNetBar.BarBaseControl.MouseEnter">
            <summary>
            Occurs when mouse enters the item.
            </summary>
        </member>
        <member name="E:DevComponents.DotNetBar.BarBaseControl.MouseLeave">
            <summary>
            Occurs when mouse leaves the item.
            </summary>
        </member>
        <member name="E:DevComponents.DotNetBar.BarBaseControl.MouseMove">
            <summary>
            Occurs when mouse moves over the item.
            </summary>
        </member>
        <member name="E:DevComponents.DotNetBar.BarBaseControl.MouseHover">
            <summary>
            Occurs when mouse remains still inside an item for an amount of time.
            </summary>
        </member>
        <member name="E:DevComponents.DotNetBar.BarBaseControl.LostFocus">
            <summary>
            Occurs when item loses input focus.
            </summary>
        </member>
        <member name="E:DevComponents.DotNetBar.BarBaseControl.GotFocus">
            <summary>
            Occurs when item receives input focus.
            </summary>
        </member>
        <member name="E:DevComponents.DotNetBar.BarBaseControl.UserCustomize">
            <summary>
            Occurs when user changes the item position, removes the item, adds new item or creates new bar.
            </summary>
        </member>
        <member name="E:DevComponents.DotNetBar.BarBaseControl.ItemRemoved">
            <summary>
            Occurs after an Item is removed from SubItemsCollection.
            </summary>
        </member>
        <member name="E:DevComponents.DotNetBar.BarBaseControl.ItemAdded">
            <summary>
            Occurs after an Item has been added to the SubItemsCollection.
            </summary>
        </member>
        <member name="E:DevComponents.DotNetBar.BarBaseControl.ContainerLoadControl">
            <summary>
            Occurs when ControlContainerControl is created and contained control is needed.
            </summary>
        </member>
        <member name="E:DevComponents.DotNetBar.BarBaseControl.ItemTextChanged">
            <summary>
            Occurs when Text property of an Item has changed.
            </summary>
        </member>
        <member name="E:DevComponents.DotNetBar.BarBaseControl.ContainerControlSerialize">
            <summary>
            Use this event if you want to serialize the hosted control state directly into the DotNetBar definition file.
            </summary>
        </member>
        <member name="E:DevComponents.DotNetBar.BarBaseControl.ContainerControlDeserialize">
            <summary>
            Use this event if you want to deserialize the hosted control state directly from the DotNetBar definition file.
            </summary>
        </member>
        <member name="E:DevComponents.DotNetBar.BarBaseControl.DefinitionLoaded">
            <summary>
            Occurs after DotNetBar definition is loaded.
            </summary>
        </member>
        <member name="E:DevComponents.DotNetBar.BarBaseControl.LocalizeString">
            <summary>
            Occurs when DotNetBar is looking for translated text for one of the internal text that are
            displayed on menus, toolbars and customize forms. You need to set Handled=true if you want
            your custom text to be used instead of the built-in system value.
            </summary>
        </member>
        <member name="E:DevComponents.DotNetBar.BarBaseControl.OptionGroupChanging">
            <summary>
            Occurs before an item in option group is checked and provides opportunity to cancel that.
            </summary>
        </member>
        <member name="E:DevComponents.DotNetBar.BarBaseControl.ToolTipShowing">
            <summary>
            Occurs before tooltip for an item is shown. Sender could be the BaseItem or derived class for which tooltip is being displayed or it could be a ToolTip object itself it tooltip is not displayed for any item in particular.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.BarBaseControl.DevComponents#DotNetBar#IOwner#ParentForm">
            <summary>
            Gets or sets the form SideBar is attached to.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.BarBaseControl.DevComponents#DotNetBar#IOwner#ShowResetButton">
            <summary>
            Indicates whether Reset buttons is shown that allows end-user to reset the toolbar state.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.BarBaseControl.Images">
            <summary>
            ImageList for images used on Items. Images specified here will always be used on menu-items and are by default used on all Bars.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.BarBaseControl.ImagesMedium">
            <summary>
            ImageList for medium-sized images used on Items.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.BarBaseControl.ImagesLarge">
            <summary>
            ImageList for large-sized images used on Items.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.BarBaseControl.ShowToolTips">
            <summary>
            Indicates whether Tooltips are shown on Bars and menus.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.BarBaseControl.ShowShortcutKeysInToolTips">
            <summary>
            Indicates whether item shortcut is displayed in Tooltips.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.BarBaseControl.BackgroundStyle">
            <summary>
            Specifies the background style of the Explorer Bar.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.BarBaseControl.DispatchShortcuts">
            <summary>
            Indicates whether shortucts handled by items are dispatched to the next handler or control.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.BarBaseControl.ColorScheme">
            <summary>
            Gets or sets Bar Color Scheme.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.BarBaseControl.ThemeAware">
            <summary>
            Specifies whether SideBar is drawn using Themes when running on OS that supports themes like Windows XP.
            </summary>
        </member>
        <member name="T:DevComponents.DotNetBar.BarBaseControl.ItemRemovedEventHandler">
            <summary>
            Represents the method that will handle the ItemRemoved event.
            </summary>
        </member>
        <member name="T:DevComponents.DotNetBar.BarBaseControlDesigner">
            <summary>
            Summary description for BarBaseControlDesigner.
            </summary>
        </member>
        <member name="M:DevComponents.DotNetBar.BarBaseControlDesigner.DesignTimeSelectionChanged(System.ComponentModel.Design.ISelectionService)">
            <summary>
            Support for popup menu closing.
            </summary>
        </member>
        <member name="M:DevComponents.DotNetBar.BarBaseControlDesigner.ThisComponentRemoving(System.Object,System.ComponentModel.Design.ComponentEventArgs)">
            <summary>
            Removes all subitems from container.
            </summary>
        </member>
        <member name="M:DevComponents.DotNetBar.BarBaseControlDesigner.OtherComponentRemoving(System.Object,System.ComponentModel.Design.ComponentEventArgs)">
            <summary>
            Triggered when some other component on the form is removed.
            </summary>
        </member>
        <member name="F:DevComponents.DotNetBar.BarBaseControlDesigner.m_SelectItem">
            <summary>
            Selection support for items on container.
            </summary>
        </member>
        <member name="T:DevComponents.DotNetBar.BarDesigner">
            <summary>
            Summary description for BarDesigner.
            </summary>
        </member>
        <!-- Badly formed XML comment ignored for member "M:DevComponents.DotNetBar.BarSerializer.Deserialize(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object)" -->
        <member name="T:DevComponents.DotNetBar.BarFunctions">
            <summary>
            Summary description for BarFunctions.
            </summary>
        </member>
        <member name="M:DevComponents.DotNetBar.BarFunctions.DeserializeImage(System.Xml.XmlElement)">
            <summary>
            XML element is expected to be something like <image>Image data Base64 encoded</image>
            </summary>
            <param name="xml">Image data</param>
            <returns></returns>
        </member>
        <member name="T:DevComponents.DotNetBar.Bars">
            <summary>
            Collection of Bar objects.
            </summary>
        </member>
        <member name="M:DevComponents.DotNetBar.Bars.Dispose">
            <summary>
            Releases the resources used by the Component.
            </summary>
        </member>
        <member name="M:DevComponents.DotNetBar.Bars.Add(DevComponents.DotNetBar.Bar)">
            <summary>
            Adds an Bar to the end of Bars collection.
            </summary>
            <param name="bar">The Bar to be added to the end of the Bars collection.</param>
        </member>
        <member name="M:DevComponents.DotNetBar.Bars.Remove(DevComponents.DotNetBar.Bar)">
            <summary>
            Removes specified bar from collection.
            </summary>
            <param name="bar">Bar to remove</param>
        </member>
        <member name="M:DevComponents.DotNetBar.Bars.Contains(DevComponents.DotNetBar.Bar)">
            <summary>
            Determines whether an Bar is in the collection.
            </summary>
            <param name="bar">The Bar to locate in the collection.</param>
            <returns><b>true</b> if item is found in the collection; otherwise, <b>false</b>.</returns>
        </member>
        <member name="M:DevComponents.DotNetBar.Bars.IndexOf(DevComponents.DotNetBar.Bar)">
            <summary>
            Returns the zero-based index of the Bar in the collection.
            </summary>
            <param name="bar">Bar to locate.</param>
            <returns></returns>
        </member>
        <member name="P:DevComponents.DotNetBar.Bars.Item(System.Int32)">
            <summary>
            Gets the Bar at the specified index.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Bars.Item(System.String)">
            <summary>
            Gets the Bar with the specified name.
            </summary>
        </member>
        <member name="T:DevComponents.DotNetBar.BaseItem">
            <summary>
            Defines the base class for items that are used by DotNetBar.
            </summary>
        </member>
        <member name="M:DevComponents.DotNetBar.BaseItem.#ctor">
            <summary>
            Creates new instance of BaseItem.
            </summary>
        </member>
        <member name="M:DevComponents.DotNetBar.BaseItem.#ctor(System.String)">
            <summary>
            Creates new instance of BaseItem and assigns item name.
            </summary>
            <param name="sItemName">Item name.</param>
        </member>
        <member name="M:DevComponents.DotNetBar.BaseItem.#ctor(System.String,System.String)">
            <summary>
            Creates new instance of BaseItem and assigns item name and item text.
            </summary>
            <param name="sItemName">Item Name</param>
            <param name="ItemText">Item Text</param>
        </member>
        <member name="M:DevComponents.DotNetBar.BaseItem.Serialize(System.Xml.XmlElement)">
            <summary>
            Serializes the item and all sub-items into the XmlElement.
            </summary>
            <param name="ThisItem">XmlElement to serialize the item to.</param>
        </member>
        <member name="M:DevComponents.DotNetBar.BaseItem.Deserialize(System.Xml.XmlElement)">
            <summary>
            Deserializes the Item from the XmlElement.
            </summary>
            <param name="ItemXmlSource">Source XmlElement.</param>
        </member>
        <member name="M:DevComponents.DotNetBar.BaseItem.OnContainerChanged(System.Object)">
            <summary>
            Called when item container has changed. If you override this method you must call the base implementation to allow default processing to occur.
            </summary>
            <param name="objOldContainer">Previous container of the item.</param>
        </member>
        <member name="M:DevComponents.DotNetBar.BaseItem.OnExternalSizeChange">
            <summary>
            Called when size of the item is changed externaly.
            </summary>
        </member>
        <member name="M:DevComponents.DotNetBar.BaseItem.OnVisibleChanged(System.Boolean)">
            <summary>
            Called when Visibility of the items has changed.
            </summary>
            <param name="newValue">New Visible state.</param>
        </member>
        <member name="M:DevComponents.DotNetBar.BaseItem.OnDisplayedChanged">
            <summary>
            Called when item Display state has changed.
            </summary>
        </member>
        <member name="M:DevComponents.DotNetBar.BaseItem.OnOwnerChanged">
            <summary>
            Called when item owner has changed.
            </summary>
        </member>
        <member name="M:DevComponents.DotNetBar.BaseItem.OnItemAdded(DevComponents.DotNetBar.BaseItem)">
            <summary>
            Occurs after an item has been added to the container. This procedure is called on both item being added and the parent of the item. To distinguish between those two states check the item parameter.
            </summary>
            <param name="item">When occurring on the parent this will hold the reference to the item that has been added. When occurring on the item being added this will be null (Nothing).</param>
        </member>
        <member name="M:DevComponents.DotNetBar.BaseItem.OnAfterItemRemoved(DevComponents.DotNetBar.BaseItem)">
            <summary>
            Occurs after an item has been removed.
            </summary>
            <param name="item">Item being removed.</param>
        </member>
        <member name="M:DevComponents.DotNetBar.BaseItem.OnClick">
            <summary>
            Occurs just before Click event is fired.
            </summary>
        </member>
        <member name="M:DevComponents.DotNetBar.BaseItem.OnSubItemsClear">
            <summary>
            Occurs after SubItems Collection has been cleared.
            </summary>
        </member>
        <member name="M:DevComponents.DotNetBar.BaseItem.OnBeforeItemRemoved(DevComponents.DotNetBar.BaseItem)">
            <summary>
            Occurs before an item is removed.
            </summary>
            <param name="item">Item being removed.</param>
        </member>
        <member name="M:DevComponents.DotNetBar.BaseItem.OnIsOnCustomizeMenuChanged">
            <summary>
            Occurs when IsOnCustomizeMenu property has changed.
            </summary>
        </member>
        <member name="M:DevComponents.DotNetBar.BaseItem.OnIsOnCustomizeDialogChanged">
            <summary>
            Occurs when IsOnCustomizeDialogChanged property has changed.
            </summary>
        </member>
        <member name="M:DevComponents.DotNetBar.BaseItem.OnDesignModeChanged">
            <summary>
            Occurs when item enter or exists the design mode.
            </summary>
        </member>
        <member name="M:DevComponents.DotNetBar.BaseItem.OnTooltip(System.Boolean)">
            <summary>
            Occurs when tooltip is about to be shown or hidden.
            </summary>
            <param name="bShow">Specifies whether tooltip is shown or hidden.</param>
        </member>
        <member name="M:DevComponents.DotNetBar.BaseItem.OnSubItemGotFocus(DevComponents.DotNetBar.BaseItem)">
            <summary>
            Occurs after item has received the input focus.
            </summary>
            <param name="item">Item that received the focus.</param>
        </member>
        <member name="M:DevComponents.DotNetBar.BaseItem.OnSubItemLostFocus(DevComponents.DotNetBar.BaseItem)">
            <summary>
            Occurs after item has lost the input focus.
            </summary>
            <param name="item">Item that lost the input focus.</param>
        </member>
        <member name="M:DevComponents.DotNetBar.BaseItem.OnEnabledChanged">
            <summary>
            Indicates whether the item enabled property has changed.
            </summary>
        </member>
        <member name="M:DevComponents.DotNetBar.BaseItem.OnTopLocationChanged(System.Int32)">
            <summary>
            Indicated whether TopInternal property has changed.
            </summary>
        </member>
        <member name="M:DevComponents.DotNetBar.BaseItem.InternalMouseEnter">
            <summary>
            Occurs when the mouse pointer enters the item. This is used by internal implementation only.
            </summary>
        </member>
        <member name="M:DevComponents.DotNetBar.BaseItem.InternalMouseHover">
            <summary>
            Occurs when the mouse pointer hovers the item. This is used by internal implementation only.
            </summary>
        </member>
        <member name="M:DevComponents.DotNetBar.BaseItem.InternalMouseLeave">
            <summary>
            Occurs when the mouse pointer leaves the item. This is used by internal implementation only.
            </summary>
        </member>
        <member name="M:DevComponents.DotNetBar.BaseItem.InternalMouseDown(System.Windows.Forms.MouseEventArgs)">
            <summary>
            Occurs when the mouse pointer is over the item and a mouse button is pressed. This is used by internal implementation only.
            </summary>
        </member>
        <member name="M:DevComponents.DotNetBar.BaseItem.InternalMouseUp(System.Windows.Forms.MouseEventArgs)">
            <summary>
            Occurs when the mouse pointer is over the item and a mouse button is released. This is used by internal implementation only.
            </summary>
        </member>
        <member name="M:DevComponents.DotNetBar.BaseItem.InternalKeyDown(System.Windows.Forms.KeyEventArgs)">
            <summary>
            Occurs when a key is pressed down while the item has focus. This is used by internal implementation only.
            </summary>
        </member>
        <member name="M:DevComponents.DotNetBar.BaseItem.InternalMouseMove(System.Windows.Forms.MouseEventArgs)">
            <summary>
            Occurs when the mouse pointer is moved over the item. This is used by internal implementation only.
            </summary>
        </member>
        <member name="M:DevComponents.DotNetBar.BaseItem.InternalClick(System.Windows.Forms.MouseButtons,System.Drawing.Point)">
            <summary>
            Occurs when the item is clicked. This is used by internal implementation only.
            </summary>
        </member>
        <member name="M:DevComponents.DotNetBar.BaseItem.RaiseClick">
            <summary>
            Raises the Click event.
            </summary>
        </member>
        <member name="M:DevComponents.DotNetBar.BaseItem.InternalDoubleClick(System.Windows.Forms.MouseButtons,System.Drawing.Point)">
            <summary>
            Occurs when the item is double clicked. This is used by internal implementation only.
            </summary>
        </member>
        <member name="M:DevComponents.DotNetBar.BaseItem.OnGotFocus">
            <summary>
            Occurs when the item receives focus. If overridden base implementation must be called so default processing can occur.
            </summary>
        </member>
        <member name="M:DevComponents.DotNetBar.BaseItem.OnLostFocus">
            <summary>
            Occurs when the item has lost the focus. If overridden base implementation must be called so default processing can occur.
            </summary>
        </member>
        <member name="M:DevComponents.DotNetBar.BaseItem.Focus">
            <summary>
            Sets the input focus to the item. If overridden base implementation must be called so default processing can occur.
            </summary>
        </member>
        <member name="M:DevComponents.DotNetBar.BaseItem.ReleaseFocus">
            <summary>
            Releases the input focus. If overridden base implementation must be called so default processing can occur.
            </summary>
        </member>
        <member name="M:DevComponents.DotNetBar.BaseItem.ContainerLostFocus">
            <summary>
            Occurs when item container has lost the input focus. If overridden base implementation must be called so default processing can occur.
            </summary>
        </member>
        <member name="M:DevComponents.DotNetBar.BaseItem.ContainerGotFocus">
            <summary>
            Occurs when item container receives the input focus. If overridden base implementation must be called so default processing can occur.
            </summary>
        </member>
        <member name="M:DevComponents.DotNetBar.BaseItem.SubItemSizeChanged(DevComponents.DotNetBar.BaseItem)">
            <summary>
            Indicates that item size has changed. It must be called by child item to let the parent know that its size
            has been changed.
            </summary>
        </member>
        <member name="M:DevComponents.DotNetBar.BaseItem.ItemAtLocation(System.Int32,System.Int32)">
            <summary>
            Return Sub Item at specified location
            </summary>
        </member>
        <member name="M:DevComponents.DotNetBar.BaseItem.ExpandedItem">
            <summary>
            Gets the current expanded subitem.
            </summary>
            <returns></returns>
        </member>
        <member name="M:DevComponents.DotNetBar.BaseItem.FocusedItem">
            <summary>
            Gets the item that has input focus.
            </summary>
            <returns>Item that has focus or Null (Nothing) if none of the subitems have focus.</returns>
        </member>
        <member name="M:DevComponents.DotNetBar.BaseItem.GetOwner">
            <summary>
            Gets the owner of the item.
            </summary>
            <returns>DotNetBarManager that owns the item.</returns>
        </member>
        <member name="M:DevComponents.DotNetBar.BaseItem.RecalcSize">
            <summary>
            Recalculate the size of the item. If overridden base implementation must be called so default processing can occur.
            </summary>
        </member>
        <member name="M:DevComponents.DotNetBar.BaseItem.Paint(DevComponents.DotNetBar.ItemPaintArgs)">
            <summary>
            Must be overriden by class that is inheriting to provide the painting for the item.
            </summary>
        </member>
        <member name="M:DevComponents.DotNetBar.BaseItem.Copy">
            <summary>
            Must be overriden by class that is inheriting to provide the method to
            return copy of an item. 
            </summary>
        </member>
        <member name="M:DevComponents.DotNetBar.BaseItem.CopyToItem(DevComponents.DotNetBar.BaseItem)">
            <summary>
            Internal Copy implementation.
            </summary>
            <param name="objCopy">Item to copy to.</param>
        </member>
        <member name="M:DevComponents.DotNetBar.BaseItem.Clone">
            <summary>
            Returns copy of the item.
            </summary>
            <returns>Copy of the item.</returns>
        </member>
        <member name="M:DevComponents.DotNetBar.BaseItem.Refresh">
            <summary>
            Forces the repaint the item.
            </summary>
        </member>
        <member name="M:DevComponents.DotNetBar.BaseItem.OnExpandChange">
            <summary>
            Occurs when Expanded state changes. If overridden base implementation must be called so default processing can occur.
            </summary>
        </member>
        <member name="M:DevComponents.DotNetBar.BaseItem.OnSubItemExpandChange(DevComponents.DotNetBar.BaseItem)">
            <summary>
            Occurs when sub item expanded state has changed.
            </summary>
            <param name="item">Sub item affected.</param>
        </member>
        <member name="M:DevComponents.DotNetBar.BaseItem.Dispose">
            <summary>
            Releases all resurces used in this control. After calling Dispose()
            object is not in valid state and cannot be recovered to the valid state.
            Recreation of the object is required.
            </summary>
        </member>
        <member name="M:DevComponents.DotNetBar.BaseItem.OnStyleChanged">
            <summary>
            Occurs after item visual style has changed.
            </summary>
        </member>
        <member name="M:DevComponents.DotNetBar.BaseItem.OnTextChanged">
            <summary>
            Occurs after text has changed.
            </summary>
        </member>
        <member name="M:DevComponents.DotNetBar.BaseItem.IsHandleValid(System.Windows.Forms.Control)">
            <summary>
            Returns if passed control is valid.
            </summary>
            <param name="objCtrl">Control to test.</param>
            <returns></returns>
        </member>
        <member name="M:DevComponents.DotNetBar.BaseItem.ResetHover">
            <summary>
            Resets Hoover timer.
            </summary>
        </member>
        <member name="M:DevComponents.DotNetBar.BaseItem.IsAnyOnHandle(System.Int32)">
            <summary>
            Returns true if any subitem is contained on the control with a given handle.
            </summary>
            <param name="iHandle">Container handle to test.</param>
            <returns></returns>
        </member>
        <member name="M:DevComponents.DotNetBar.BaseItem.OnTooltipChanged">
            <summary>
            Occurs after Tooltip text has changed.
            </summary>
        </member>
        <member name="M:DevComponents.DotNetBar.BaseItem.HideToolTip">
            <summary>
            Destroys tooltip window.
            </summary>
        </member>
        <member name="M:DevComponents.DotNetBar.BaseItem.ShowToolTip">
            <summary>
            Shows tooltip for this item.
            </summary>
        </member>
        <member name="M:DevComponents.DotNetBar.BaseItem.CollapseSubItems(DevComponents.DotNetBar.BaseItem)">
            <summary>
            Collapses all sub items y setting their Expanded property to false.
            </summary>
            <param name="item">Item to collapse.</param>
        </member>
        <member name="M:DevComponents.DotNetBar.BaseItem.CollapseAll(DevComponents.DotNetBar.BaseItem)">
            <summary>
            Collapses whole tree for the item starting with its parent.
            </summary>
            <param name="objItem">Item to collapse.</param>
        </member>
        <member name="M:DevComponents.DotNetBar.BaseItem.IsOnPopup(DevComponents.DotNetBar.BaseItem)">
            <summary>
            Returns whether item is hosted on popup menu or bar.
            </summary>
            <param name="item">Item to get information for.</param>
            <returns></returns>
        </member>
        <member name="M:DevComponents.DotNetBar.BaseItem.GetHashCode">
            <summary>
            Serves as a hash function for a particular type, suitable for use in hashing algorithms and data structures like a hash table.
            </summary>
            <returns>Hash code.</returns>
        </member>
        <member name="E:DevComponents.DotNetBar.BaseItem.Click">
            <summary>
            Occurs when Item is clicked.
            </summary>
        </member>
        <member name="E:DevComponents.DotNetBar.BaseItem.ExpandChange">
            <summary>
            Occurs when Item Expanded property has changed.
            </summary>
        </member>
        <member name="E:DevComponents.DotNetBar.BaseItem.LostFocus">
            <summary>
            Occurs when item loses input focus.
            </summary>
        </member>
        <member name="E:DevComponents.DotNetBar.BaseItem.GotFocus">
            <summary>
            Occurs when item receives input focus.
            </summary>
        </member>
        <member name="E:DevComponents.DotNetBar.BaseItem.MouseDown">
            <summary>
            Occurs when mouse button is pressed.
            </summary>
        </member>
        <member name="E:DevComponents.DotNetBar.BaseItem.MouseUp">
            <summary>
            Occurs when mouse button is released.
            </summary>
        </member>
        <member name="E:DevComponents.DotNetBar.BaseItem.MouseEnter">
            <summary>
            Occurs when mouse enters the item.
            </summary>
        </member>
        <member name="E:DevComponents.DotNetBar.BaseItem.MouseLeave">
            <summary>
            Occurs when mouse leaves the item.
            </summary>
        </member>
        <member name="E:DevComponents.DotNetBar.BaseItem.MouseMove">
            <summary>
            Occurs when mouse moves over the item.
            </summary>
        </member>
        <member name="E:DevComponents.DotNetBar.BaseItem.MouseHover">
            <summary>
            Occurs when mouse remains still inside an item for an amount of time.
            </summary>
        </member>
        <member name="E:DevComponents.DotNetBar.BaseItem.ItemCopied">
            <summary>
            Occurs when copy of the item is made.
            </summary>
        </member>
        <member name="E:DevComponents.DotNetBar.BaseItem.TextChanged">
            <summary>
            Occurs when Text property of an Item has changed.
            </summary>
        </member>
        <member name="E:DevComponents.DotNetBar.BaseItem.VisibleChanged">
            <summary>
            Occurs when Visible property of an Item has changed.
            </summary>
        </member>
        <member name="E:DevComponents.DotNetBar.BaseItem.EnabledChanged">
            <summary>
            Occurs when Enabled property of an Item has changed.
            </summary>
        </member>
        <member name="E:DevComponents.DotNetBar.BaseItem.Disposed">
            <summary>
            Occurs when component is Disposed.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.BaseItem.ContainerControl">
            <summary>
            Control Container (System.Windows.Forms.Control or its descendant)
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.BaseItem.Parent">
            <summary>
            Returns the Parent of the item.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.BaseItem.Enabled">
            <summary>
            Gets or sets a value indicating whether the item is enabled.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.BaseItem.BeginGroup">
            <summary>
            Gets or sets whether item separator is shown before this item.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.BaseItem.LeftInternal">
            <summary>
            Gets or sets Left position of this item
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.BaseItem.TopInternal">
            <summary>
            Gets or sets Top position of this item
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.BaseItem.WidthInternal">
            <summary>
            Gets or sets Width of this item
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.BaseItem.HeightInternal">
            <summary>
            Gets or sets Height of this item
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.BaseItem.Visible">
            <summary>
            Gets or sets a value indicating whether the item is visible.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.BaseItem.Expanded">
            <summary>
            Gets or sets a value indicating whether the item is expanded or not. For Popup items this would indicate whether the item is popped up or not.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.BaseItem.AutoCollapseOnClick">
            <summary>
            Indicates whether the item will auto-collapse (fold) when clicked. 
            When item is on popup menu and this property is set to false, menu will not
            close when item is clicked.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.BaseItem.AutoExpand">
            <summary>
            Gets or sets whether item will auto expand when mouse is over the item or not.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.BaseItem.DisplayRectangle">
            <summary>
            Gets the rectangle that represents the display area of the item.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.BaseItem.Size">
            <summary>
            Gets or sets the size of the item.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.BaseItem.IsContainer">
            <summary>
            Specifies whether this item is visual container or not. For example
            Tool Menu is not container since it drops-down its items and they are
            not "visualy" contained. Also, the pop-up menus, drop-down Bars etc. are not containers.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.BaseItem.Displayed">
            <summary>
            Returns true if this item is currently displayed. This property should not be set directly since it is managed by system and container of the item.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.BaseItem.Focused">
            <summary>
            Gets whether item has input focus.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.BaseItem.IsRecalculatingSize">
            <summary>
            Indicates that item is recalculating its size.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.BaseItem.SuspendLayout">
            <summary>
            Suspends all layout for the item including painting. Use this property carefully and only to improve performace.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.BaseItem.SubItems">
            <summary>
            Returns the collection of sub items.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.BaseItem.Id">
            <summary>
            Unique ID that indentifies the item.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.BaseItem.Tag">
            <summary>
            Allows the user to associate custom user data with the item.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.BaseItem.Style">
            <summary>
            Applies new visual style to this the item and all of its sub-items.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.BaseItem.ShowSubItems">
            <summary>
            Gets or sets whether item will display sub items.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.BaseItem.ItemAlignment">
            <summary>
            Gets or sets item alignment inside the container.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.BaseItem.Description">
            <summary>
            Gets or sets item description. This description is displayed in
            Customize dialog to describe the item function in an application.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.BaseItem.Stretch">
            <summary>
            Gets or sets whether the item expands automatically to fill out the remaining space inside the container. Applies to Items on stretchable, no-wrap Bars only.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.BaseItem.Tooltip">
            <summary>
            Gets/Sets infromational text (tooltip) for the item.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.BaseItem.Category">
            <summary>
            Returns category for this item. If item cannot be customzied using the
            customize dialog category is empty string.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.BaseItem.Name">
            <summary>
            Returns name of the item that can be used to identify item from the code.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.BaseItem.SupportedOrientation">
            <summary>
            Gets orientation within container that is supported by this item. If item does not support certain orientation the container automatically hides it when container switches into that orientation.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.BaseItem.GlobalItem">
            <summary>
            Gets or sets whether item is global or not.
            This flag is used to propagate property changes to all items with the same name.
            Setting for example Visible property on the item that has GlobalItem set to true will
            set visible property to the same value on all items with the same name.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.BaseItem.Orientation">
            <summary>
            Gets or sets orientation inside the container. Do not change the value of this property. It is managed by system only.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.BaseItem.ToolTipVisible">
            <summary>
            Gets whether tooltip is visible or not.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.BaseItem.ToolTipControl">
            <summary>
            Gets reference to the tooltip control if tooltip is displayed for this item.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.BaseItem.Text">
            <summary>
            Gets or sets the text associated with this item.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.BaseItem.CanCustomize">
            <summary>
            Gets or sets whether item can be customized by end user.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.BaseItem.IsOnCustomizeMenu">
            <summary>
            Returns whether item is hosted on Customize menu.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.BaseItem.IsOnCustomizeDialog">
            <summary>
            Returns whether item is hosted on Customize Dialog.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.BaseItem.IsOnMenu">
            <summary>
            Returns whether item is hosted on menu or not.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.BaseItem.IsOnMenuBar">
            <summary>
            Returns whether item is hosted on menu bar or not.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.BaseItem.IsOnBar">
            <summary>
            Returns whether item is hosted on bar or not.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.BaseItem.DesignMode">
            <summary>
            Returns whether item is in design mode or not.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.BaseItem.SystemItem">
            <summary>
            Returns whether item is System item.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.BaseItem.AccessKey">
            <summary>
            Return Access key for the item.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.BaseItem.Shortcuts">
            <summary>
            Gets or sets the collection of shortcut keys associated with the item.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.BaseItem.ShortcutString">
            <summary>
            Returns text representation of shortcut for this item.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.BaseItem.ClickAutoRepeat">
            <summary>
            Gets or sets whether Click event will be auto repeated when mouse button is kept pressed over the item.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.BaseItem.ClickRepeatInterval">
            <summary>
            Gets or sets the auto-repeat interval for the click event when mouse button is kept pressed over the item.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.BaseItem.Cursor">
            <summary>
            Specifes the mouse cursor displayed when mouse is over the item.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.BaseItem.ShouldSerialize">
            <summary>
            Indicates whether item will be Serialized.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.BaseItem.ThemeAware">
            <summary>
            Specifies whether item is drawn using Themes when running on OS that supports themes like Windows XP.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.BaseItem.AccessibleObject">
            <summary>
            Gets the AccessibleObject assigned to the item.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.BaseItem.AccessibleDefaultActionDescription">
            <summary>
            Gets or sets the default action description of the control for use by accessibility client applications.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.BaseItem.AccessibleDescription">
            <summary>
            Gets or sets the description of the control used by accessibility client applications.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.BaseItem.AccessibleName">
            <summary>
            Gets or sets the name of the control used by accessibility client applications.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.BaseItem.AccessibleRole">
            <summary>
            Gets or sets the accessible role of the item.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.BaseItem.IsAccessible">
            <summary>
            Gets or sets a value indicating whether the item is visible to accessibility applications.
            </summary>
        </member>
        <member name="T:DevComponents.DotNetBar.SideBarImage">
            <summary>
            Stores all information for side bar images that are used by Bar or Popup menu.
            </summary>
        </member>
        <member name="F:DevComponents.DotNetBar.SideBarImage.Picture">
            <summary>
            Gets or sets the side bar image.
            </summary>
        </member>
        <member name="F:DevComponents.DotNetBar.SideBarImage.BackColor">
            <summary>
            Gets or sets the side bar back color.
            </summary>
        </member>
        <member name="F:DevComponents.DotNetBar.SideBarImage.GradientColor1">
            <summary>
            Gets or sets the gradient staring color.
            </summary>
        </member>
        <member name="F:DevComponents.DotNetBar.SideBarImage.GradientColor2">
            <summary>
            Gets or sets the gradient ending color.
            </summary>
        </member>
        <member name="F:DevComponents.DotNetBar.SideBarImage.GradientAngle">
            <summary>
            Gets or sets the gradient angle.
            </summary>
        </member>
        <member name="F:DevComponents.DotNetBar.SideBarImage.Alignment">
            <summary>
            Gets or sets the gradient staring color.
            </summary>
        </member>
        <member name="F:DevComponents.DotNetBar.SideBarImage.StretchPicture">
            <summary>
            Gets or sets whether image is stretched so it fills the side bar or not if image is smaller than current side bar size.
            </summary>
        </member>
        <member name="T:DevComponents.DotNetBar.OptionGroupChangingEventHandler">
            <summary>
            Delegate for OptionGroupChanging event.
            </summary>
        </member>
        <member name="T:DevComponents.DotNetBar.ButtonItem">
            <summary>
               Summary description for ButtonItem.
            </summary>
        </member>
        <member name="T:DevComponents.DotNetBar.PopupItem">
            <summary>
            	PopupItem Class can pop-up it's subitems on either the popup Bar
            	or menu.
            </summary>
        </member>
        <member name="T:DevComponents.DotNetBar.ImageItem">
            <summary>
            Adds neccessary functions to base item so it supports images properly.
            If your item implements images you should derive from this class instead of BaseItem
            </summary>
        </member>
        <member name="M:DevComponents.DotNetBar.ImageItem.#ctor">
            <summary>
            Create new instance of ImageItem.
            </summary>
        </member>
        <member name="M:DevComponents.DotNetBar.ImageItem.#ctor(System.String)">
            <summary>
            Create new instance of ImageItem and assigns the item name.
            </summary>
            <param name="sName">Item name.</param>
        </member>
        <member name="M:DevComponents.DotNetBar.ImageItem.#ctor(System.String,System.String)">
            <summary>
            Create new instance of ImageItem and assigns the item name and text.
            </summary>
            <param name="sName">Item name.</param>
            <param name="ItemText">Item text.</param>
        </member>
        <member name="M:DevComponents.DotNetBar.ImageItem.OnSubItemImageSizeChanged(DevComponents.DotNetBar.BaseItem)">
            <summary>
            Must be called by any sub item that implements the image when image has changed
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.ImageItem.SubItemsImageSize">
            <summary>
            When parent items does recalc size for its sub-items it should query
            image size and store biggest image size into this property.
            </summary>
        </member>
        <member name="T:DevComponents.DotNetBar.IDesignTimeProvider">
            <summary>
            Provides design-time support for DotNetBar items.
            </summary>
        </member>
        <member name="M:DevComponents.DotNetBar.PopupItem.#ctor">
            <summary>
            Creates new instance of PopupItem.
            </summary>
        </member>
        <member name="M:DevComponents.DotNetBar.PopupItem.#ctor(System.String)">
            <summary>
            Creates new instance of PopupItem and assigns the name to it.
            </summary>
            <param name="sName">Item name</param>
        </member>
        <member name="M:DevComponents.DotNetBar.PopupItem.#ctor(System.String,System.String)">
            <summary>
            Creates new instance of PopupItem and assigns the name and text to it.
            </summary>
            <param name="sName">Item name.</param>
            <param name="ItemText">Item text.</param>
        </member>
        <member name="M:DevComponents.DotNetBar.PopupItem.CopyToItem(DevComponents.DotNetBar.BaseItem)">
            <summary>
            Copies the PopupItem specific properties to new instance of the item.
            </summary>
            <param name="copy">New ButtonItem instance.</param>
        </member>
        <member name="M:DevComponents.DotNetBar.PopupItem.InternalMouseMove(System.Windows.Forms.MouseEventArgs)">
            <summary>
            Occurs when the mouse pointer is moved over the item. This is used by internal implementation only.
            </summary>
        </member>
        <member name="M:DevComponents.DotNetBar.PopupItem.InternalMouseUp(System.Windows.Forms.MouseEventArgs)">
            <summary>
            Occurs when the mouse pointer is over the item and a mouse button is released. This is used by internal implementation only.
            </summary>
        </member>
        <member name="M:DevComponents.DotNetBar.PopupItem.PopupMenu(System.Drawing.Point)">
            <summary>
            Displays the sub-items on popup menu.
            </summary>
            <param name="p">Popup location.</param>
        </member>
        <member name="M:DevComponents.DotNetBar.PopupItem.PopupMenu(System.Int32,System.Int32)">
            <summary>
            Displays the sub-items on popup menu.
            </summary>
            <param name="x">Horizontal coordinate in pixels of the upper left corner of a popup.</param>
            <param name="y">Vertical coordinate in pixels of the upper left corner of a popup.</param>
        </member>
        <member name="M:DevComponents.DotNetBar.PopupItem.PopupBar(System.Drawing.Point)">
            <summary>
            Displays the sub-items on popup toolbar.
            </summary>
            <param name="p">Popup location.</param>
        </member>
        <member name="M:DevComponents.DotNetBar.PopupItem.PopupBar(System.Int32,System.Int32)">
            <summary>
            Displays the sub-items on popup toolbar.
            </summary>
            <param name="x">Horizontal coordinate in pixels of the upper left corner of a popup.</param>
            <param name="y">Vertical coordinate in pixels of the upper left corner of a popup.</param>
        </member>
        <member name="M:DevComponents.DotNetBar.PopupItem.PopupContainer(System.Drawing.Point)">
            <summary>
            Displays popup container.
            </summary>
            <param name="p">Popup location.</param>
        </member>
        <member name="M:DevComponents.DotNetBar.PopupItem.PopupContainer(System.Int32,System.Int32)">
            <summary>
            Displays popup container.
            </summary>
            <param name="x">Horizontal coordinate in pixels of the upper left corner of a popup.</param>
            <param name="y">Vertical coordinate in pixels of the upper left corner of a popup.</param>
        </member>
        <member name="M:DevComponents.DotNetBar.PopupItem.Popup(System.Drawing.Point)">
            <summary>
            Displays the sub-items on popup specified by PopupType.
            </summary>
            <param name="p">Popup location.</param>
        </member>
        <member name="M:DevComponents.DotNetBar.PopupItem.Popup(System.Int32,System.Int32)">
            <summary>
            Displays the sub-items on popup specified by PopupType.
            </summary>
            <param name="x">Horizontal coordinate in pixels of the upper left corner of a popup.</param>
            <param name="y">Vertical coordinate in pixels of the upper left corner of a popup.</param>
        </member>
        <member name="M:DevComponents.DotNetBar.PopupItem.ClosePopup">
            <summary>
            Closes the currently open popup.
            </summary>
        </member>
        <member name="E:DevComponents.DotNetBar.PopupItem.PopupContainerLoad">
            <summary>
            Occurs when popup container is loading. Use this event to assign control to the popup container.
            </summary>
        </member>
        <member name="E:DevComponents.DotNetBar.PopupItem.PopupContainerUnload">
            <summary>
            Occurs when popup container is unloading. Use this event to save any state associated with the control that was contained by the container.
            </summary>
        </member>
        <member name="E:DevComponents.DotNetBar.PopupItem.PopupOpen">
            <summary>
            Occurs when popup item is about to open.
            </summary>
        </member>
        <member name="E:DevComponents.DotNetBar.PopupItem.PopupClose">
            <summary>
            Occurs when popup item is closing.
            </summary>
        </member>
        <member name="E:DevComponents.DotNetBar.PopupItem.PopupShowing">
            <summary>
            Occurs just before popup window is shown.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.PopupItem.PopupSize">
            <summary>
            Gets the size of the popup before it is displayed.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.PopupItem.PopupType">
            <summary>
            Indicates whether sub-items are shown on popup Bar or popup menu.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.PopupItem.PopupFont">
            <summary>
            Indicates the font that will be used on the popup window.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.PopupItem.PopUpSideBar">
            <summary>
            Indicates side bar for pop-up window.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.PopupItem.PopupSide">
            <summary>
            Gets or sets popup display location in relation to it's parent.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.PopupItem.PopupLocation">
            <summary>
            Gets or sets the popup location.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.PopupItem.PersonalizedMenus">
            <summary>
            Indicates when menu items are displayed when MenuVisiblity is set to VisibleIfRecentlyUsed and RecentlyUsed is true.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.PopupItem.PopupAnimation">
            <summary>
            Indicates Animation type for Popups.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.PopupItem.PopupWidth">
            <summary>
            Specifies the inital width for the Bar that hosts pop-up items. Applies to PopupType.Toolbar only.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.PopupItem.SourceControl">
            <summary>
            Gets the control that is displaying the context menu.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.PopupItem.PopupContainerControl">
            <summary>
            Gets the reference to the internal host PopupContainerControl control.
            </summary>
        </member>
        <member name="T:DevComponents.DotNetBar.IPersonalizedMenuItem">
            <summary>
            Provides support for personilized menu items.
            </summary>
        </member>
        <member name="M:DevComponents.DotNetBar.ButtonItem.#ctor">
            <summary>
            Creates new instance of ButtonItem.
            </summary>
        </member>
        <member name="M:DevComponents.DotNetBar.ButtonItem.#ctor(System.String)">
            <summary>
            Creates new instance of ButtonItem and assigns the name to it.
            </summary>
            <param name="sItemName">Item name.</param>
        </member>
        <member name="M:DevComponents.DotNetBar.ButtonItem.#ctor(System.String,System.String)">
            <summary>
            Creates new instance of ButtonItem and assigns the name and text to it.
            </summary>
            <param name="sItemName">Item name.</param>
            <param name="ItemText">item text.</param>
        </member>
        <member name="M:DevComponents.DotNetBar.ButtonItem.Copy">
            <summary>
            Returns copy of the item.
            </summary>
        </member>
        <member name="M:DevComponents.DotNetBar.ButtonItem.CopyToItem(DevComponents.DotNetBar.BaseItem)">
            <summary>
            Copies the ButtonItem specific properties to new instance of the item.
            </summary>
            <param name="copy">New ButtonItem instance.</param>
        </member>
        <member name="M:DevComponents.DotNetBar.ButtonItem.Serialize(System.Xml.XmlElement)">
            <summary>
            Overloaded. Serializes the item and all sub-items into the XmlElement.
            </summary>
            <param name="ThisItem">XmlElement to serialize the item to.</param>
        </member>
        <member name="M:DevComponents.DotNetBar.ButtonItem.Deserialize(System.Xml.XmlElement)">
            <summary>
            Overloaded. Deserializes the Item from the XmlElement.
            </summary>
            <param name="ItemXmlSource">Source XmlElement.</param>
        </member>
        <member name="M:DevComponents.DotNetBar.ButtonItem.OnImageChanged">
            <summary>
            Called when button image has changed.
            </summary>
        </member>
        <member name="M:DevComponents.DotNetBar.ButtonItem.OnContainerChanged(System.Object)">
            <summary>
            Called when container of the item has changed.
            </summary>
            <param name="objOldContainer">Previous item container.</param>
        </member>
        <member name="M:DevComponents.DotNetBar.ButtonItem.Paint(DevComponents.DotNetBar.ItemPaintArgs)">
            <summary>
            Overriden. Draws the item.
            </summary>
            <param name="g">Target Graphics object.</param>
        </member>
        <member name="M:DevComponents.DotNetBar.ButtonItem.RecalcSize">
            <summary>
            Overriden. Recalculates the size of the item.
            </summary>
        </member>
        <member name="M:DevComponents.DotNetBar.ButtonItem.OnExternalSizeChange">
            <summary>
            Overloaded. Called when size of the item is changed externaly.
            </summary>
        </member>
        <member name="M:DevComponents.DotNetBar.ButtonItem.InternalDoubleClick(System.Windows.Forms.MouseButtons,System.Drawing.Point)">
            <summary>
            Occurs when the item is double clicked. This is used by internal implementation only.
            </summary>
        </member>
        <member name="M:DevComponents.DotNetBar.ButtonItem.GetFont(DevComponents.DotNetBar.ItemPaintArgs)">
            <summary>
            Returns the Font object to be used for drawing the item text.
            </summary>
            <returns>Font object.</returns>
        </member>
        <member name="M:DevComponents.DotNetBar.ButtonItem.OnCheckedChanged">
            <summary>
            Called after Checked property has changed.
            </summary>
        </member>
        <member name="M:DevComponents.DotNetBar.ButtonItem.OnVisibleChanged(System.Boolean)">
            <summary>
            Called when Visibility of the items has changed.
            </summary>
            <param name="newValue">New Visible state.</param>
        </member>
        <member name="M:DevComponents.DotNetBar.ButtonItem.SetChecked(System.Boolean)">
            <summary>
            Sets Checked property without firing any events or performing any built-in logic.
            </summary>
        </member>
        <member name="M:DevComponents.DotNetBar.ButtonItem.InvokeCheckedChanged">
            <summary>
            Fires CheckedChanged event.
            </summary>
        </member>
        <member name="M:DevComponents.DotNetBar.ButtonItem.InvokeOptionGroupChanging(DevComponents.DotNetBar.OptionGroupChangingEventArgs)">
            <summary>
            Fires OptionGroupChanging event.
            </summary>
        </member>
        <member name="M:DevComponents.DotNetBar.ButtonItem.OnClick">
            <summary>
            Occurs just before Click event is fired.
            </summary>
        </member>
        <member name="M:DevComponents.DotNetBar.ButtonItem.OnDisplayedChanged">
            <summary>
            Gets or sets the current font for the button.
            </summary>
        </member>
        <member name="E:DevComponents.DotNetBar.ButtonItem.CheckedChanged">
            <summary>
            Occurs when Checked property has changed.
            </summary>
        </member>
        <member name="E:DevComponents.DotNetBar.ButtonItem.OptionGroupChanging">
            <summary>
            Occurs before an item in option group is checked and provides opportunity to cancel that.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.ButtonItem.ImagePosition">
            <summary>
            Gets/Sets the image position inside the button.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.ButtonItem.ButtonStyle">
            <summary>
            Gets/Sets the button style.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.ButtonItem.Icon">
            <summary>
            Specifies the Button icon. Icons support multiple image sizes and alpha blending.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.ButtonItem.Image">
            <summary>
            Specifies the Button image.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.ButtonItem.ImageIndex">
            <summary>
            Specifies the index of the image for the button if ImageList is used.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.ButtonItem.HoverImage">
            <summary>
            Specifies the image for the button when mouse is over the item.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.ButtonItem.HoverImageIndex">
            <summary>
            Specifies the index of the image for the button when mouse is over the item when ImageList is used.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.ButtonItem.PressedImage">
            <summary>
            Specifies the image for the button when mouse left button is pressed.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.ButtonItem.PressedImageIndex">
            <summary>
            Specifies the index of the image for the button when mouse left button is pressed and ImageList is used.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.ButtonItem.DisabledImage">
            <summary>
            Specifies the image for the button when items Enabled property is set to false.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.ButtonItem.DisabledImageIndex">
            <summary>
            Specifies the index of the image for the button when items Enabled property is set to false and ImageList is used.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.ButtonItem.ImageFixedSize">
            <summary>
            Sets fixed size of the image. Image will be scaled and painted it size specified.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.ButtonItem.Checked">
            <summary>
            Gets or set a value indicating whether the button is in the checked state.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.ButtonItem.AlternateShortCutText">
            <summary>
            Gets or set the alternative shortcut text.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.ButtonItem.OptionGroup">
            <summary>
            Gets or set the Group item belongs to. The groups allows a user to choose from mutually exclusive options within the group. The choice is reflected by Checked property.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.ButtonItem.ForeColor">
            <summary>
            Gets or sets the text color of the button.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.ButtonItem.HotForeColor">
            <summary>
            Gets or sets the text color of the button when mouse is over the item.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.ButtonItem.HotFontUnderline">
            <summary>
            Gets or sets whether the font used to draw the item text is underlined when mouse is over the item.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.ButtonItem.HotFontBold">
            <summary>
            Gets or sets whether the font used to draw the item text is bold when mouse is over the item.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.ButtonItem.FontBold">
            <summary>
            Gets or sets whether the font used to draw the item text is bold.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.ButtonItem.FontItalic">
            <summary>
            Gets or sets whether the font used to draw the item text is italic.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.ButtonItem.FontUnderline">
            <summary>
            Gets or sets whether the font used to draw the item text is underlined.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.ButtonItem.SubItemsExpandWidth">
            <summary>
            Gets or sets the width of the expand part of the button item.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.ButtonItem.SubItems">
            <summary>
            Returns the collection of sub items.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.ButtonItem.MenuVisibility">
            <summary>
            Indicates item's visiblity when on pop-up menu.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.ButtonItem.RecentlyUsed">
            <summary>
            Indicates whether item was recently used.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.ButtonItem.IsMouseOver">
            <summary>
            Indicates whether mouse is over the item.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.ButtonItem.IsMouseDown">
            <summary>
            Indicates whether mouse is pressed.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.ButtonItem.HotTrackingStyle">
            <summary>
            Indicates the way item is painting the picture when mouse is over it. Setting the value to Color will render the image in gray-scale when mouse is not over the item.
            </summary>
        </member>
        <member name="T:DevComponents.DotNetBar.ButtonItemEditor">
            <summary>
            Summary description for ComboItemsEditor.
            </summary>
        </member>
        <member name="T:DevComponents.DotNetBar.OptionGroupChangingEventArgs">
            <summary>
            Represents event arguments for OptionGroupChanging event.
            </summary>
        </member>
        <member name="F:DevComponents.DotNetBar.OptionGroupChangingEventArgs.Cancel">
            <summary>
            Set to true to cancel the checking on NewChecked button.
            </summary>
        </member>
        <member name="F:DevComponents.DotNetBar.OptionGroupChangingEventArgs.NewChecked">
            <summary>
            Button that will become checked if operation is not cancelled.
            </summary>
        </member>
        <member name="F:DevComponents.DotNetBar.OptionGroupChangingEventArgs.OldChecked">
            <summary>
            Button that is currently checked and which will be unchecked if operation is not cancelled.
            </summary>
        </member>
        <member name="M:DevComponents.DotNetBar.OptionGroupChangingEventArgs.#ctor(DevComponents.DotNetBar.ButtonItem,DevComponents.DotNetBar.ButtonItem)">
            <summary>
            Default constructor.
            </summary>
        </member>
        <member name="T:DevComponents.DotNetBar.ColorFunctions">
            <summary>
               Summary description for ColorFunctions.
            </summary>
        </member>
        <member name="T:DevComponents.DotNetBar.ColorScheme">
            <summary>
            Represents the Color scheme used by items on the Bar.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.ColorScheme.MenuBarBackground">
            <summary>
            Specifies the menu bar background color.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.ColorScheme.MenuBarBackground2">
            <summary>
            Specifies the target menu bar gradient background color.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.ColorScheme.MenuBarBackgroundGradientAngle">
            <summary>
            Specifies the gradient angle.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.ColorScheme.BarBackground">
            <summary>
            Specifies the background color for the bar when floating or when docked.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.ColorScheme.BarBackground2">
            <summary>
            Specifies the target gradient background color for the bar when floating or when docked.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.ColorScheme.BarBackgroundGradientAngle">
            <summary>
            Specifies the gradient angle.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.ColorScheme.BarCaptionBackground">
            <summary>
            Specifies the background color for the bar Caption.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.ColorScheme.BarCaptionText">
            <summary>
            Specifies the color for text of the Caption.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.ColorScheme.BarCaptionInactiveBackground">
            <summary>
            Specifies the Bar Caption inactive (lost focus) background color.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.ColorScheme.BarCaptionInactiveText">
            <summary>
            Specifies the Bar inactive (lost focus) text color.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.ColorScheme.BarPopupBackground">
            <summary>
            Specifies the background color for popup bars.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.ColorScheme.BarPopupBorder">
            <summary>
            Specifies the border color for popup bars.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.ColorScheme.BarDockedBorder">
            <summary>
            Specifies the border color for docked bars.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.ColorScheme.BarStripeColor">
            <summary>
            Specifies the color of the grab handle stripes.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.ColorScheme.BarFloatingBorder">
            <summary>
             Specifies the border color for floating bars.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.ColorScheme.ItemBackground">
            <summary>
            Specifies the item background color.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.ColorScheme.ItemBackground2">
            <summary>
            Specifies the target item background gradient color.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.ColorScheme.ItemBackgroundGradientAngle">
            <summary>
            Specifies the gradient angle.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.ColorScheme.ItemText">
            <summary>
            Specifies the item text color.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.ColorScheme.ItemDisabledBackground">
            <summary>
            Specifies the background color for the item that is disabled.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.ColorScheme.ItemDisabledText">
            <summary>
            Specifies the text color for the item that is disabled.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.ColorScheme.ItemHotBackground">
            <summary>
            Specifies the background color when mouse is over the item.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.ColorScheme.ItemHotBackground2">
            <summary>
            Specifies the target gradient background color when mouse is over the item.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.ColorScheme.ItemHotBackgroundGradientAngle">
            <summary>
            Specifies the gradient angle.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.ColorScheme.ItemHotText">
            <summary>
            Specifies the text color when mouse is over the item.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.ColorScheme.ItemHotBorder">
            <summary>
            Specifies the border color when mouse is over the item.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.ColorScheme.ItemPressedBackground">
            <summary>
            Specifies the background color when item is pressed.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.ColorScheme.ItemPressedBackground2">
            <summary>
            Specifies the target gradient background color when item is pressed.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.ColorScheme.ItemPressedBackgroundGradientAngle">
            <summary>
            Specifies the gradient angle.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.ColorScheme.ItemPressedText">
            <summary>
            Specifies the text color when item is pressed.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.ColorScheme.ItemPressedBorder">
            <summary>
            Specifies the border color when item is pressed.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.ColorScheme.ItemSeparator">
            <summary>
            Specifies the color for the item group separator.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.ColorScheme.ItemSeparatorShade">
            <summary>
            Specifies the color for the item group separator shade.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.ColorScheme.ItemExpandedShadow">
            <summary>
            Specifies the background color for the shadow of expanded item.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.ColorScheme.ItemExpandedBackground">
            <summary>
            Specifies the background color for the expanded item.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.ColorScheme.ItemExpandedBackground2">
            <summary>
            Specifies the target gradient background color for the expanded item.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.ColorScheme.ItemExpandedBackgroundGradientAngle">
            <summary>
            Specifies the gradient angle.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.ColorScheme.ItemExpandedText">
            <summary>
            Specifies the text color for the expanded item.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.ColorScheme.ItemExpandedBorder">
            <summary>
            Specifies the border color for the expanded item.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.ColorScheme.ItemCheckedBackground">
            <summary>
            Specifies the background color for the checked item.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.ColorScheme.ItemCheckedBackground2">
            <summary>
            Specifies the target gradient background color for the checked item.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.ColorScheme.ItemCheckedBackgroundGradientAngle">
            <summary>
            Specifies the gradient angle.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.ColorScheme.ItemCheckedBorder">
            <summary>
            Specifies the border color for the checked item.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.ColorScheme.ItemCheckedText">
            <summary>
            Specifies the text color for the checked item.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.ColorScheme.CustomizeBackground">
            <summary>
            Specifies the customize item background color. Applies to Office2003 style only.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.ColorScheme.CustomizeBackground2">
            <summary>
            Specifies the customize item target gradient background color. Applies to Office2003 style only.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.ColorScheme.CustomizeBackgroundGradientAngle">
            <summary>
            Specifies the customize item background color gradient angle. Applies to Office2003 style only.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.ColorScheme.CustomizeText">
            <summary>
            Specifies the customize item text color. Applies to Office2003 style only.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.ColorScheme.MenuBorder">
            <summary>
            Specifies the color of the menu border.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.ColorScheme.MenuBackground">
            <summary>
            Specifies the background color of the menu.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.ColorScheme.MenuBackground2">
            <summary>
            Specifies the target gradient background color of the menu.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.ColorScheme.MenuBackgroundGradientAngle">
            <summary>
            Specifies the angle of the gradient fill for the menu background.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.ColorScheme.MenuSide">
            <summary>
            Specifies the background color of the menu part (left side)  that is showing the images.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.ColorScheme.MenuSide2">
            <summary>
            Specifies the target gradient background color of the menu part (left side)  that is showing the images.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.ColorScheme.MenuSideGradientAngle">
            <summary>
            Specifies the angle of the gradient fill for the menu part (left side) that is showing the images.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.ColorScheme.MenuUnusedBackground">
            <summary>
            Specifies the background color for the items that were not recently used.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.ColorScheme.MenuUnusedSide">
            <summary>
            Specifies the side bar color for the items that were not recently used.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.ColorScheme.MenuUnusedSide2">
            <summary>
            Specifies the target gradient side bar color for the items that were not recently used.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.ColorScheme.MenuUnusedSideGradientAngle">
            <summary>
            Specifies the angle of the gradient fill for the menu part (left side) that is showing the images.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.ColorScheme.ItemDesignTimeBorder">
            <summary>
            Specifies the border color for focused design-time item.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.ColorScheme.PredefinedColorScheme">
            <summary>
            Gets or sets predefined color scheme. By default DotNetBar will automatically change and generate color scheme depending on system colors.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.ColorScheme.PanelBackground">
            <summary>
            Specifies the background color of the panel.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.ColorScheme.PanelBackground2">
            <summary>
            Specifies the target background gradient color of the panel.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.ColorScheme.PanelBackgroundGradientAngle">
            <summary>
            Specifies the angle of the gradient fill for the panel background.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.ColorScheme.PanelBorder">
            <summary>
            Specifies border color of the panel.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.ColorScheme.PanelText">
            <summary>
            Specifies color of the text on the panel.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.ColorScheme.ExplorerBarBackground">
            <summary>
            Specifies the background color of the explorer bar.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.ColorScheme.ExplorerBarBackground2">
            <summary>
            Specifies the target gradient background color of the explorer bar.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.ColorScheme.ExplorerBarBackgroundGradientAngle">
            <summary>
            Specifies the angle of the gradient fill for the explorer bar background.
            </summary>
        </member>
        <member name="T:DevComponents.DotNetBar.ePredefinedColorScheme">
            <summary>
            Specifies the type of predefined color scheme in ColorScheme object.
            </summary>
        </member>
        <member name="F:DevComponents.DotNetBar.ePredefinedColorScheme.AutoGenerated">
            <summary>
            Default value. DotNetBar will automatically change and generate color scheme depending on system colors.
            </summary>
        </member>
        <member name="F:DevComponents.DotNetBar.ePredefinedColorScheme.Blue2003">
            <summary>
            Blue Office 2003 Color Scheme. This setting specifies that this color scheme will be used regardless of system color setting on user machine.
            </summary>
        </member>
        <member name="F:DevComponents.DotNetBar.ePredefinedColorScheme.OliveGreen2003">
            <summary>
            Olive Green Office 2003 Color Scheme. This setting specifies that this color scheme will be used regardless of system color setting on user machine.
            </summary>
        </member>
        <member name="F:DevComponents.DotNetBar.ePredefinedColorScheme.Silver2003">
            <summary>
            Silver Office 2003 Color Scheme. This setting specifies that this color scheme will be used regardless of system color setting on user machine.
            </summary>
        </member>
        <member name="T:DevComponents.DotNetBar.eColorSchemePart">
            <summary>
                Specifies a color scheme member.
            </summary>
        </member>
        <member name="T:DevComponents.DotNetBar.ColorSchemeEditor">
            <summary>
            Summary description for ColorSchemeEditor.
            </summary>
        </member>
        <member name="F:DevComponents.DotNetBar.ColorSchemeEditor.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:DevComponents.DotNetBar.ColorSchemeEditor.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
        </member>
        <member name="M:DevComponents.DotNetBar.ColorSchemeEditor.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:DevComponents.DotNetBar.ColorSchemeVSEditor">
            <summary>
            Summary description for ColorSchemeVSEditor.
            </summary>
        </member>
        <member name="T:DevComponents.Editors.ComboBoxEx">
            <summary>
            Represents enhanced Windows combo box control.
            </summary>
        </member>
        <member name="M:DevComponents.Editors.ComboBoxEx.#ctor">
            <summary>
            Creates new instance of ComboBoxEx.
            </summary>
        </member>
        <member name="M:DevComponents.Editors.ComboBoxEx.Dispose(System.Boolean)">
            <summary> 
            Clean up any resources being used.
            </summary>
        </member>
        <member name="M:DevComponents.Editors.ComboBoxEx.LoadFonts">
            <summary>
            Loads all fonts available on system into the combo box.
            </summary>
        </member>
        <member name="M:DevComponents.Editors.ComboBoxEx.ReleaseFocus">
            <summary>
            Releases the focus from combo box. The control that last had focus will receive focus back when this method is called.
            </summary>
        </member>
        <member name="E:DevComponents.Editors.ComboBoxEx.DropDownChange">
            <summary>
            Occurs when drop down portion of combo box is shown or hidden.
            </summary>
        </member>
        <member name="P:DevComponents.Editors.ComboBoxEx.DefaultStyle">
            <summary>
            Gets or sets value indicating whether the enhanced appearance of combo box is disabled.
            </summary>
        </member>
        <member name="P:DevComponents.Editors.ComboBoxEx.ThemeAware">
            <summary>
            Gets or sets value indicating whether the combo box is draw using the Windows XP Theme manager when running on Windows XP or theme aware OS.
            </summary>
        </member>
        <member name="P:DevComponents.Editors.ComboBoxEx.DisableInternalDrawing">
            <summary>
            Disables internal drawing support for the List-box portion of Combo-box.
            </summary>
        </member>
        <member name="P:DevComponents.Editors.ComboBoxEx.PreventEnterBeep">
            <summary>
            Gets or sets whether combo box generates the audible alert when Enter key is pressed.
            </summary>
        </member>
        <member name="P:DevComponents.Editors.ComboBoxEx.Images">
            <summary>
            The ImageList control used by Combo box to draw images.
            </summary>
        </member>
        <member name="P:DevComponents.Editors.ComboBoxEx.Style">
            <summary>
            Determines the visual style applied to the combo box when shown.
            </summary>
        </member>
        <member name="P:DevComponents.Editors.ComboBoxEx.DropDownHeight">
            <summary>
            Specifies the height of the drop-down portion of combo box.
            </summary>
        </member>
        <member name="P:DevComponents.Editors.ComboBoxEx.DropDownHandle">
            <summary>
            Gets the window handle that the drop down list is bound to.
            </summary>
        </member>
        <member name="T:DevComponents.Editors.ComboBoxEx.OnDropDownChangeEventHandler">
            <summary>
            Represents the method that will handle the DropDownChange event.
            </summary>
        </member>
        <member name="T:DevComponents.DotNetBar.ComboBoxItem">
            <summary>
            Summary description for ComboBoxItem.
            </summary>
        </member>
        <member name="M:DevComponents.DotNetBar.ComboBoxItem.#ctor">
            <summary>
            Creates new instance of ComboBoxItem.
            </summary>
        </member>
        <member name="M:DevComponents.DotNetBar.ComboBoxItem.#ctor(System.String)">
            <summary>
            Creates new instance of ComboBoxItem and assigns item name.
            </summary>
            <param name="sName">Item Name.</param>
        </member>
        <member name="M:DevComponents.DotNetBar.ComboBoxItem.#ctor(System.String,System.String)">
            <summary>
            Creates new instance of ComboBoxItem and assigns item name and item text.
            </summary>
            <param name="sName">Item Name</param>
            <param name="ItemText">Item Text.</param>
        </member>
        <member name="M:DevComponents.DotNetBar.ComboBoxItem.ReleaseFocus">
            <summary>
            Overridden. Releases the input focus.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.ComboBoxItem.PreventEnterBeep">
            <summary>
            Gets or sets whether combo box generates the audible alert when Enter key is pressed.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.ComboBoxItem.ComboWidth">
            <summary>
            Indicates the Width of the combo box part of the item.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.ComboBoxItem.ComboBoxEx">
            <summary>
            Returns the reference to the inner combo box control.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.ComboBoxItem.AlwaysShowCaption">
            <summary>
            Indicates whether item caption is always shown.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.ComboBoxItem.Items">
            <summary>
            Gets an object representing the collection of the items contained in inner ComboBoxEx.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.ComboBoxItem.DropDownStyle">
            <summary>
            Gets or sets a value specifying the style of the combo box.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.ComboBoxItem.SelectionStart">
            <summary>
            Gets or sets the starting index of text selected in the combo box.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.ComboBoxItem.SelectionLength">
            <summary>
            Gets or sets the number of characters selected in the editable portion of the combo box.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.ComboBoxItem.SelectedText">
            <summary>
            Gets or sets the text that is selected in the editable portion of a combo box.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.ComboBoxItem.SelectedItem">
            <summary>
            Gets or sets currently selected item in the combo box.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.ComboBoxItem.SelectedIndex">
            <summary>
            Gets or sets the index specifying the currently selected item.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.ComboBoxItem.FontCombo">
            <summary>
            Gets or sets the value indicating whether the item automatically loads all the fonts available into the combo box.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.ComboBoxItem.ItemHeight">
            <summary>
            Gets or sets the height of an item in the combo box.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.ComboBoxItem.MenuVisibility">
            <summary>
            Indicates item's visiblity when on pop-up menu.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.ComboBoxItem.RecentlyUsed">
            <summary>
            Gets or sets the value that indicates whether the item was recently used.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.ComboBoxItem.ControlText">
            <summary>
            Overridden. Gets or sets the text associated with this item.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.ComboBoxItem.ThemeAware">
            <summary>
            Specifies whether combo box is drawn using themes when running on OS that supports themes like Windows XP
            </summary>
        </member>
        <member name="T:DevComponents.Editors.ComboItem">
            <summary>
            Summary description for ComboItem.
            </summary>
        </member>
        <member name="M:DevComponents.Editors.ComboItem.#ctor">
            <summary>
            Creates new instance of ComboItem.
            </summary>
        </member>
        <member name="M:DevComponents.Editors.ComboItem.ToString">
            <summary>
            Overridden. Returns a human-readable string representation of this object.
            </summary>
            <returns>A string that represents this object.</returns>
        </member>
        <member name="P:DevComponents.Editors.ComboItem.Text">
            <summary>
            Gets or sets the text associated with this item.
            </summary>
        </member>
        <member name="P:DevComponents.Editors.ComboItem.ImageIndex">
            <summary>
            Gets or sets the index value of the image assigned to the item.
            </summary>
        </member>
        <member name="P:DevComponents.Editors.ComboItem.TextAlignment">
            <summary>
            Gets or sets the text alignment..
            </summary>
        </member>
        <member name="P:DevComponents.Editors.ComboItem.TextLineAlignment">
            <summary>
            Gets or sets the line alignment for the item.
            </summary>
        </member>
        <member name="P:DevComponents.Editors.ComboItem.TextFormat">
            <summary>
            Gets or sets the value that encapsulates text layout information (such as alignment, orientation, tab stops, and clipping) and display manipulations.
            </summary>
        </member>
        <member name="P:DevComponents.Editors.ComboItem.ImagePosition">
            <summary>
            Gets or sets the image horizontal image position.
            </summary>
        </member>
        <member name="P:DevComponents.Editors.ComboItem.FontName">
            <summary>
            Gets or sets the font name used to draw the item text.
            </summary>
        </member>
        <member name="P:DevComponents.Editors.ComboItem.ForeColor">
            <summary>
            Gets or sets the text color.
            </summary>
        </member>
        <member name="P:DevComponents.Editors.ComboItem.BackColor">
            <summary>
            Gets or sets the background color of the item.
            </summary>
        </member>
        <member name="P:DevComponents.Editors.ComboItem.FontStyle">
            <summary>
            Specifies style information applied to text.
            </summary>
        </member>
        <member name="P:DevComponents.Editors.ComboItem.FontSize">
            <summary>
            Gets the em-size of this Font object in design units.
            </summary>
        </member>
        <member name="P:DevComponents.Editors.ComboItem.Image">
            <summary>
            Gets or sets the image assigned to this item.
            </summary>
        </member>
        <member name="P:DevComponents.Editors.ComboItem.Tag">
            <summary>
            Gets or sets an object that contains data to associate with the item.
            </summary>
        </member>
        <member name="T:DevComponents.Editors.ComboItemsEditor">
            <summary>
            Summary description for ComboItemsEditor.
            </summary>
        </member>
        <member name="T:DevComponents.DotNetBar.CompositeImage">
            <summary>
            Serves as integration of regular Image class and Icon class
            </summary>
        </member>
        <member name="T:DevComponents.DotNetBar.ContextExMenuTypeEditor">
            <summary>
            Summary description for ContextExMenuTypeEditor.
            </summary>
        </member>
        <member name="T:DevComponents.DotNetBar.ContextMenusCollection">
            <summary>
            Summary description for Popups.
            </summary>
        </member>
        <member name="T:DevComponents.DotNetBar.ControlContainerItem">
            <summary>
            Summary description for ControlContainerItem.
            </summary>
        </member>
        <member name="M:DevComponents.DotNetBar.ControlContainerItem.#ctor">
            <summary>
            Creates new instance of ControlContainerItem and assigns item name.
            </summary>
        </member>
        <member name="M:DevComponents.DotNetBar.ControlContainerItem.#ctor(System.String)">
            <summary>
            Creates new instance of ControlContainerItem and assigns item name.
            </summary>
            <param name="sName">Item name.</param>
        </member>
        <member name="M:DevComponents.DotNetBar.ControlContainerItem.#ctor(System.String,System.String)">
            <summary>
            Creates new instance of ControlContainerItem and assigns item name and item text.
            </summary>
            <param name="sName">Item name.</param>
            <param name="ItemText">Item text.</param>
        </member>
        <member name="M:DevComponents.DotNetBar.ControlContainerItem.Copy">
            <summary>
            Overriden. Returns the copy of the ControlContainerItem.
            </summary>
            <returns>Copy of the ControlContainerItem.</returns>
        </member>
        <member name="M:DevComponents.DotNetBar.ControlContainerItem.Paint(DevComponents.DotNetBar.ItemPaintArgs)">
            <summary>
            Overriden. Draws the item.
            </summary>
            <param name="g">Target Graphics object.</param>
        </member>
        <member name="M:DevComponents.DotNetBar.ControlContainerItem.RecalcSize">
            <summary>
            Overriden. Recalculates the size of the item.
            </summary>
        </member>
        <member name="M:DevComponents.DotNetBar.ControlContainerItem.OnExternalSizeChange">
            <summary>
            Called when size of the item is changed externaly.
            </summary>
        </member>
        <member name="M:DevComponents.DotNetBar.ControlContainerItem.GetFont">
            <summary>
            Returns the Font object to be used for drawing the item text.
            </summary>
            <returns>Font object.</returns>
        </member>
        <member name="E:DevComponents.DotNetBar.ControlContainerItem.ContainerLoadControl">
            <summary>
            Occurs when container control needs to be assigned to the item.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.ControlContainerItem.MenuVisibility">
            <summary>
            Indicates item's visiblity when on pop-up menu.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.ControlContainerItem.RecentlyUsed">
            <summary>
            Indicates whether item was recently used.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.ControlContainerItem.Tooltip">
            <summary>
            Gets/Sets infromational text (tooltip) for the item.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.ControlContainerItem.Control">
            <summary>
            Gets or sets the reference to the contained control.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.ControlContainerItem.AllowItemResize">
            <summary>
            Specifies whether contained control can be automatically resized to fill the item container.
            </summary>
        </member>
        <member name="T:DevComponents.DotNetBar.CustomizeItem">
            <summary>
               Summary description for CustomizeItem.
            </summary>
        </member>
        <member name="M:DevComponents.DotNetBar.CustomizeItem.#ctor">
            <summary>
            Creates new instance of CustomizeItem object.
            </summary>
        </member>
        <member name="M:DevComponents.DotNetBar.CustomizeItem.Copy">
            <summary>
            Returns copy of CustomizeItem item
            </summary>
        </member>
        <member name="M:DevComponents.DotNetBar.CustomizeItem.OnContainerChanged(System.Object)">
            <summary>
            Called when item container has changed. If you override this method you must call the base implementation to allow default processing to occur.
            </summary>
            <param name="objOldContainer">Previous container of the item.</param>
        </member>
        <member name="M:DevComponents.DotNetBar.CustomizeItem.OnTooltip(System.Boolean)">
            <summary>
            Occurs when tooltip is about to be shown or hidden.
            </summary>
            <param name="bShow">Specifies whether tooltip is shown or hidden.</param>
        </member>
        <member name="M:DevComponents.DotNetBar.CustomizeItem.Paint(DevComponents.DotNetBar.ItemPaintArgs)">
            <summary>
            Overriden. Draws the item.
            </summary>
            <param name="g">Target Graphics object.</param>
        </member>
        <member name="M:DevComponents.DotNetBar.CustomizeItem.RecalcSize">
            <summary>
            Overriden. Recalculates the size of the item.
            </summary>
        </member>
        <member name="M:DevComponents.DotNetBar.CustomizeItem.Refresh">
            <summary>
            Forces the repaint the item.
            </summary>
        </member>
        <member name="M:DevComponents.DotNetBar.CustomizeItem.GetFont">
            <summary>
            Returns the Font object to be used for drawing the item text.
            </summary>
            <returns>Font object.</returns>
        </member>
        <member name="P:DevComponents.DotNetBar.CustomizeItem.Visible">
            <summary>
            Gets or sets a value indicating whether the item is visible.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.CustomizeItem.CustomizeItemVisible">
            <summary>
            Gets or sets whether Customize menu item is visible.
            </summary>
        </member>
        <member name="T:DevComponents.DotNetBar.Design.DefinitionPreviewControl">
            <summary>
            Summary description for DefinitionPreviewControl.
            </summary>
        </member>
        <member name="M:DevComponents.DotNetBar.Design.DefinitionPreviewControl.Dispose(System.Boolean)">
            <summary> 
            Clean up any resources being used.
            </summary>
        </member>
        <member name="M:DevComponents.DotNetBar.Design.DefinitionPreviewControl.InitializeComponent">
            <summary> 
            Required method for Designer support - do not modify 
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:DevComponents.DotNetBar.DesignTimeDte">
            <summary>
            Summary description for DesignTimeDte.
            </summary>
        </member>
        <member name="T:DevComponents.DotNetBar.DisplayMoreItem">
            <summary>
            System item that displays the items that could not fit inside the container on popup menu or toolbar.
            </summary>
        </member>
        <member name="M:DevComponents.DotNetBar.DisplayMoreItem.#ctor">
            <summary>
            Create new instance of DisplayMoreItem object.
            </summary>
        </member>
        <member name="M:DevComponents.DotNetBar.DisplayMoreItem.Copy">
            <summary>
            Returns copy of DisplayMoreItem item
            </summary>
        </member>
        <member name="M:DevComponents.DotNetBar.DisplayMoreItem.OnContainerChanged(System.Object)">
            <summary>
            Called when item container has changed. If you override this method you must call the base implementation to allow default processing to occur.
            </summary>
            <param name="objOldContainer">Previous container of the item.</param>
        </member>
        <member name="M:DevComponents.DotNetBar.DisplayMoreItem.Paint(DevComponents.DotNetBar.ItemPaintArgs)">
            <summary>
            Overriden. Draws the item.
            </summary>
            <param name="g">Target Graphics object.</param>
        </member>
        <member name="M:DevComponents.DotNetBar.DisplayMoreItem.RecalcSize">
            <summary>
            Overriden. Recalculates the size of the item.
            </summary>
        </member>
        <member name="M:DevComponents.DotNetBar.DisplayMoreItem.Popup(System.Drawing.Point)">
            <summary>
            Overridden. Displays the sub-items on popup.
            </summary>
            <param name="p">Popup location.</param>
        </member>
        <member name="M:DevComponents.DotNetBar.DisplayMoreItem.Popup(System.Int32,System.Int32)">
            <summary>
            Overridden. Displays the sub-items on popup.
            </summary>
            <param name="x">Horizontal coordinate in pixels of the upper left corner of a popup.</param>
            <param name="y">Vertical coordinate in pixels of the upper left corner of a popup.</param>
        </member>
        <member name="M:DevComponents.DotNetBar.DisplayMoreItem.PopupBar(System.Int32,System.Int32)">
            <summary>
            Overridden. Displays the sub-items on popup toolbar.
            </summary>
            <param name="x">Horizontal coordinate in pixels of the upper left corner of a popup.</param>
            <param name="y">Vertical coordinate in pixels of the upper left corner of a popup.</param>
        </member>
        <member name="M:DevComponents.DotNetBar.DisplayMoreItem.PopupMenu(System.Int32,System.Int32)">
            <summary>
            Overridden. Displays the sub-items on popup menu.
            </summary>
            <param name="x">Horizontal coordinate in pixels of the upper left corner of a popup.</param>
            <param name="y">Vertical coordinate in pixels of the upper left corner of a popup.</param>
        </member>
        <member name="M:DevComponents.DotNetBar.DisplayMoreItem.ClosePopup">
            <summary>
            Overridden. Close the popup window if open.
            </summary>
        </member>
        <member name="M:DevComponents.DotNetBar.DisplayMoreItem.Refresh">
            <summary>
            Forces the repaint the item.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.DisplayMoreItem.FixedSize">
            <summary>
            Returns the fixed size of the item.
            </summary>
        </member>
        <member name="T:DevComponents.DotNetBar.DockContainerItem">
            <summary>
            Item container for dockable windows.
            </summary>
        </member>
        <member name="M:DevComponents.DotNetBar.DockContainerItem.#ctor">
            <summary>
            Creates new instance of ControlContainerItem and assigns item name.
            </summary>
        </member>
        <member name="M:DevComponents.DotNetBar.DockContainerItem.#ctor(System.String)">
            <summary>
            Creates new instance of ControlContainerItem and assigns item name.
            </summary>
            <param name="sName">Item name.</param>
        </member>
        <member name="M:DevComponents.DotNetBar.DockContainerItem.#ctor(System.String,System.String)">
            <summary>
            Creates new instance of ControlContainerItem and assigns item name and item text.
            </summary>
            <param name="sName">Item name.</param>
            <param name="ItemText">Item text.</param>
        </member>
        <member name="M:DevComponents.DotNetBar.DockContainerItem.Copy">
            <summary>
            Overriden. Returns the copy of the ControlContainerItem.
            </summary>
            <returns>Copy of the ControlContainerItem.</returns>
        </member>
        <member name="M:DevComponents.DotNetBar.DockContainerItem.Paint(DevComponents.DotNetBar.ItemPaintArgs)">
            <summary>
            Overriden. Draws the item.
            </summary>
            <param name="g">Target Graphics object.</param>
        </member>
        <member name="M:DevComponents.DotNetBar.DockContainerItem.RecalcSize">
            <summary>
            Overriden. Recalculates the size of the item.
            </summary>
        </member>
        <member name="M:DevComponents.DotNetBar.DockContainerItem.GetFont">
            <summary>
            Returns the Font object to be used for drawing the item text.
            </summary>
            <returns>Font object.</returns>
        </member>
        <member name="M:DevComponents.DotNetBar.DockContainerItem.OnAfterItemRemoved(DevComponents.DotNetBar.BaseItem)">
            <summary>
            Occurs after an item has been removed.
            </summary>
            <param name="item">Item being removed.</param>
        </member>
        <member name="M:DevComponents.DotNetBar.DockContainerItem.OnTextChanged">
            <summary>
            Occurs after text has changed.
            </summary>
        </member>
        <member name="E:DevComponents.DotNetBar.DockContainerItem.ContainerLoadControl">
            <summary>
            Occurs when container control needs to be assigned to the item.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.DockContainerItem.Control">
            <summary>
            Gets or sets the reference to the contained control.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.DockContainerItem.Visible">
            <summary>
            Gets or sets a value indicating whether the item is visible.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.DockContainerItem.Image">
            <summary>
            Specifies the Tab image. Image specified here is used only on Tab when there are multiple dock containers on Bar.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.DockContainerItem.ImageIndex">
            <summary>
            Specifies the index of the Tab image if ImageList is used. Image specified here is used only on Tab when there are multiple dock containers on Bar.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.DockContainerItem.Icon">
            <summary>
            Specifies the Button icon. Icons support multiple image sizes and alpha blending.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.DockContainerItem.Width">
            <summary>
            Gets or sets the width of the item in pixels.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.DockContainerItem.Height">
            <summary>
            Gets or sets the height of the item in pixels.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.DockContainerItem.MinimumSize">
            <summary>
            Gets or sets the minimum size of the item.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.DockContainerItem.DefaultFloatingSize">
            <summary>
            Gets or sets the default floating size of the Bar that is containing this item.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.DockContainerItem.MinFormClientSize">
            <summary>
            Gets or sets the minimum size of the form client area that is tried to maintain when dockable window is resized.
            </summary>
        </member>
        <member name="T:DevComponents.DotNetBar.DockingHint">
            <summary>
            Summary description for DockingHint.
            </summary>
        </member>
        <member name="F:DevComponents.DotNetBar.DockingHint.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:DevComponents.DotNetBar.DockingHint.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
        </member>
        <member name="M:DevComponents.DotNetBar.DockingHint.UpdateControlRegion">
            <summary>
            Update control region based on hint side
            </summary>
        </member>
        <member name="M:DevComponents.DotNetBar.DockingHint.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:DevComponents.DotNetBar.DockSiteInfo">
            <summary>
            Represent the docking information for an control.
            </summary>
        </member>
        <member name="F:DevComponents.DotNetBar.DockSiteInfo.DockSide">
            <summary>
            Control dock side.
            </summary>
        </member>
        <member name="F:DevComponents.DotNetBar.DockSiteInfo.objDockSite">
            <summary>
            Control dock site.
            </summary>
        </member>
        <member name="F:DevComponents.DotNetBar.DockSiteInfo.DockOffset">
            <summary>
            Docking offset.
            </summary>
        </member>
        <member name="F:DevComponents.DotNetBar.DockSiteInfo.DockLine">
            <summary>
            Docking line.
            </summary>
        </member>
        <member name="F:DevComponents.DotNetBar.DockSiteInfo.DockedWidth">
            <summary>
            Docked control width.
            </summary>
        </member>
        <member name="F:DevComponents.DotNetBar.DockSiteInfo.DockedHeight">
            <summary>
            Docked control height.
            </summary>
        </member>
        <member name="F:DevComponents.DotNetBar.DockSiteInfo.InsertPosition">
            <summary>
            Control position.
            </summary>
        </member>
        <member name="F:DevComponents.DotNetBar.DockSiteInfo.UseOutline">
            <summary>
            Indicates whether to use outline or not
            </summary>
        </member>
        <member name="T:DevComponents.DotNetBar.DockSite">
            <summary>
               Dock Sites are created by DotNetBar control on each edge of the
               DotNetBar container control and are used for docking purposes.
               If Dock Site does not contain any controls it will be invisible.
            </summary>
        </member>
        <member name="M:DevComponents.DotNetBar.DockSite.#ctor(System.Windows.Forms.DockStyle)">
            <summary>
            Creates new instance of DockSite object with specified dock style.
            </summary>
            <param name="DockSide">Specifies the position and manner in which a site is docked.</param>
        </member>
        <member name="M:DevComponents.DotNetBar.DockSite.#ctor">
            <summary>
            Creates new instance of DockSite object.
            </summary>
        </member>
        <member name="M:DevComponents.DotNetBar.DockSite.AddBar(System.Windows.Forms.Control)">
            <summary>
            Docks the bar to the dock site.
            </summary>
            <param name="objBar">Bar to dock.</param>
        </member>
        <member name="M:DevComponents.DotNetBar.DockSite.AddBar(System.Windows.Forms.Control,System.Int32)">
            <summary>
            Dockes the Bar to dock site at specified position.
            </summary>
            <param name="objBar">Bar to dock.</param>
            <param name="iInsertAtPosition">Bar insert position.</param>
        </member>
        <member name="M:DevComponents.DotNetBar.DockSite.RecalcLayout">
            <summary>
            Relayouts all docked controls in the site.
            </summary>
        </member>
        <member name="M:DevComponents.DotNetBar.DockSite.GetDockSiteInfo(DevComponents.DotNetBar.IDockInfo,System.Int32,System.Int32)">
            <summary>
            Returns the docking information for current position.
            </summary>
            <param name="pDock">Controls docking provider.</param>
            <param name="x">Horizontal assumed docking position.</param>
            <param name="y">Vertical assumed docking position.</param>
            <returns>Docking information.</returns>
        </member>
        <!-- Badly formed XML comment ignored for member "M:DevComponents.DotNetBar.DockSite.GetBarDockRectangle(DevComponents.DotNetBar.Bar,DevComponents.DotNetBar.DockSiteInfo@)" -->
        <member name="M:DevComponents.DotNetBar.DockSite.RemoveBar(System.Windows.Forms.Control)">
            <summary>
            Undocks the control from the site.
            </summary>
            <param name="objBar">Control to undock.</param>
        </member>
        <member name="P:DevComponents.DotNetBar.DockSite.BackgroundImagePosition">
            <summary>
            Specifies background image position when container is larger than image.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.DockSite.BackgroundImageAlpha">
            <summary>
            Specifies the transparency of background image.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.DockSite.BackColor2">
            <summary>
            Gets or sets the target gradient background color.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.DockSite.BackColorGradientAngle">
            <summary>
            Gets or sets gradient fill angle.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.DockSite.Controls">
            <summary>
            Gets the collection of controls contained within the control.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.DockSite.Dock">
            <summary>
            Specifies the position and manner in which a site is docked.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.DockSite.Owner">
            <summary>
            Gets the reference to the DotNetBarManager that uses this dock site.
            </summary>
        </member>
        <member name="T:DevComponents.DotNetBar.DockSiteDesigner">
            <summary>
            Summary description for DockSiteDesigner.
            </summary>
        </member>
        <member name="T:DevComponents.DotNetBar.Design.DotNetBarDesigner">
            <summary>
            Summary description for Form1.
            </summary>
        </member>
        <member name="M:DevComponents.DotNetBar.Design.DotNetBarDesigner.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
        </member>
        <member name="M:DevComponents.DotNetBar.Design.DotNetBarDesigner.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Design.DotNetBarDesigner.ExternalManager">
            <summary>
            Gets or sets the DotNetBar manager that is being designed by this designer.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Design.DotNetBarDesigner.ExternalBar">
            <summary>
            Gets or sets the external bar that is designed by this designer.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Design.DotNetBarDesigner.DesignerServices">
            <summary>
            Gets or sets design-time designer services used to interact with design-time environment.
            </summary>
        </member>
        <member name="T:DevComponents.DotNetBar.DotNetBarManager">
            <summary>
            Represent the menu, toolbar and popup menu structure for the form.
            </summary>
        </member>
        <member name="M:DevComponents.DotNetBar.DotNetBarManager.#ctor">
            <summary>
            Creates new instance of DotNetBarManager.
            </summary>
        </member>
        <member name="M:DevComponents.DotNetBar.DotNetBarManager.#ctor(System.ComponentModel.IContainer)">
            <summary>
            Creates new instance of DotNetBarManager.
            </summary>
            <param name="cont">Container.</param>
        </member>
        <member name="M:DevComponents.DotNetBar.DotNetBarManager.GetItemBar(DevComponents.DotNetBar.BaseItem)">
            <summary>
            Returns the Bar object that contains the item.
            </summary>
        </member>
        <member name="M:DevComponents.DotNetBar.DotNetBarManager.Dispose(System.Boolean)">
            <summary>
               Clean up any resources being used.
            </summary>
        </member>
        <member name="M:DevComponents.DotNetBar.DotNetBarManager.RemoveBar(DevComponents.DotNetBar.Bar)">
            <summary>
            Use to remove bar from DotNetBar control. Bar will be undocked if it is docked and
            removed from all internal collections.
            </summary>
            <param name="bar">Bar to remove.</param>
        </member>
        <member name="M:DevComponents.DotNetBar.DotNetBarManager.ForceDefinitionLoad">
            <summary>
            Forces the loading of the definition specified in DefinitionName property.
            By default definition is loaded after parent form handle has been created and form is loaded.
            However, under certain circumstances you might need DotNetBar to load definition right away so
            you can access bars and items. We recommend moving the code to Form Load event and leaving the loading process for DotNetBar definition as is.
            </summary>
        </member>
        <member name="M:DevComponents.DotNetBar.DotNetBarManager.LoadDefinition(System.String)">
            <summary>
            Loads DotNetBar definition from file.
            </summary>
            <param name="FileName">File that contains DotNetBar defintion.</param>
        </member>
        <member name="M:DevComponents.DotNetBar.DotNetBarManager.SaveDefinition(System.String)">
            <summary>
            Saves current DotNetBar definition and state to the file.
            </summary>
            <param name="FileName">File name.</param>
        </member>
        <member name="M:DevComponents.DotNetBar.DotNetBarManager.LoadLayout(System.String)">
            <summary>
            Loads DotNetBar layout from file.
            </summary>
            <param name="FileName">File that contains DotNetBar defintion.</param>
        </member>
        <member name="M:DevComponents.DotNetBar.DotNetBarManager.SaveLayout(System.String)">
            <summary>
            Saves current DotNetBar layout to the file.
            </summary>
            <param name="FileName">File name.</param>
        </member>
        <member name="M:DevComponents.DotNetBar.DotNetBarManager.Customize">
            <summary>
            Invokes the DotNetBar Customize dialog.
            </summary>
        </member>
        <member name="M:DevComponents.DotNetBar.DotNetBarManager.Customize(DevComponents.DotNetBar.DotNetBarManagerDesigner)">
            <summary>
            Invokes the DotNetBar Customize dialog.
            </summary>
        </member>
        <member name="M:DevComponents.DotNetBar.DotNetBarManager.GetItems(System.String)">
            <summary>
            Returns the collection of items with the specified name.
            </summary>
            <param name="ItemName">Item name to look for.</param>
            <returns></returns>
        </member>
        <member name="M:DevComponents.DotNetBar.DotNetBarManager.GetItems(System.String,System.Boolean)">
            <summary>
            Returns the collection of items with the specified name. This method searchs for items on all Bars, Items collection and ContextMenus collection.
            The order of search is as follows. All Bars from Bars collections are searced, then Items collection and then ContextMenus collection.
            </summary>
            <param name="ItemName">Item name to look for.</param>
            <param name="FullSearch">Specifies that search will be performed through all DotNetBar collections.</param>
            <returns></returns>
        </member>
        <member name="M:DevComponents.DotNetBar.DotNetBarManager.GetItems(System.String,System.Type)">
            <summary>
            Returns the collection of items with the specified name and type.
            </summary>
            <param name="ItemName">Item name to look for.</param>
            <param name="itemType">Item type to look for.</param>
            <returns></returns>
        </member>
        <member name="M:DevComponents.DotNetBar.DotNetBarManager.GetItems(System.String,System.Type,System.Boolean)">
            <summary>
            Returns the collection of items with the specified name and type. This method will searchs for items on all Bars, Items collection and ContextMenus collection.
            The order of search is as follows. All Bars from Bars collections are searced, then Items collection and then ContextMenus collection.
            </summary>
            <param name="ItemName">Item name to look for.</param>
            <param name="itemType">Item type to look for.</param>
            <param name="FullSearch">Specifies that full search (through all collections) will be performed.</param>
            <returns></returns>
        </member>
        <member name="M:DevComponents.DotNetBar.DotNetBarManager.GetItem(System.String)">
            <summary>
            Returns the first item that matches specified name.
            </summary>
            <param name="ItemName">Item name to look for.</param>
            <returns></returns>
        </member>
        <member name="M:DevComponents.DotNetBar.DotNetBarManager.GetItem(System.String,System.Boolean)">
            <summary>
            Returns the first item that matches specified name with the option to indicate full search of all collections.
            The order of search is as follows. All Bars from Bars collections are searced, then Items collection and then ContextMenus collection.
            </summary>
            <param name="ItemName">Item name to look for.</param>
            <param name="FullSearch">Specifies that all collection will be searched.</param>
            <returns></returns>
        </member>
        <member name="M:DevComponents.DotNetBar.DotNetBarManager.BeginModalDisplay">
            <summary>
            Called before modal dialog is displayed using ShowModal() method.
            </summary>
        </member>
        <member name="M:DevComponents.DotNetBar.DotNetBarManager.EndModalDisplay">
            <summary>
            Called after modal dialog is closed.
            </summary>
        </member>
        <member name="M:DevComponents.DotNetBar.DotNetBarManager.CustomizeClosing">
            <summary>
            You must call this procedure if you are implementing custom customize dialog box after your dialog box is closed.
            </summary>
        </member>
        <member name="M:DevComponents.DotNetBar.DotNetBarManager.RegisterPopup(DevComponents.DotNetBar.PopupItem)">
            <summary>
            Registers popup item with DotNetBar. Use this function carefully. The registration is required only if Popup item is created completely from code and it is not added to any DotNetBarManager collection.
            </summary>
            <param name="objPopup"></param>
        </member>
        <member name="M:DevComponents.DotNetBar.DotNetBarManager.UnregisterPopup(DevComponents.DotNetBar.PopupItem)">
            <summary>
            Un-registers specified popup. See RegisterPopup for more information.
            </summary>
            <param name="objPopup"></param>
        </member>
        <member name="M:DevComponents.DotNetBar.DotNetBarManager.ResetUsageData">
            <summary>
            Resets all usage data collected by DotNetBar in relation to the Personalized menus.
            </summary>
        </member>
        <member name="E:DevComponents.DotNetBar.DotNetBarManager.CustomizeContextMenu">
            <summary>
            Occurs just before customize popup menu is shown.
            </summary>
        </member>
        <member name="E:DevComponents.DotNetBar.DotNetBarManager.ItemClick">
            <summary>
            Occurs when Item is clicked.
            </summary>
        </member>
        <member name="E:DevComponents.DotNetBar.DotNetBarManager.PopupContainerLoad">
            <summary>
            Occurs when popup of type container is loading.
            </summary>
        </member>
        <member name="E:DevComponents.DotNetBar.DotNetBarManager.PopupContainerUnload">
            <summary>
            Occurs when popup of type container is unloading.
            </summary>
        </member>
        <member name="E:DevComponents.DotNetBar.DotNetBarManager.PopupOpen">
            <summary>
            Occurs when popup item is about to open.
            </summary>
        </member>
        <member name="E:DevComponents.DotNetBar.DotNetBarManager.PopupClose">
            <summary>
            Occurs when popup item is closing.
            </summary>
        </member>
        <member name="E:DevComponents.DotNetBar.DotNetBarManager.PopupShowing">
            <summary>
            Occurs just before popup window is shown.
            </summary>
        </member>
        <member name="E:DevComponents.DotNetBar.DotNetBarManager.ExpandedChange">
            <summary>
            Occurs when Item Expanded property has changed.
            </summary>
        </member>
        <member name="E:DevComponents.DotNetBar.DotNetBarManager.BarDock">
            <summary>
            Occurs when Bar is docked.
            </summary>
        </member>
        <member name="E:DevComponents.DotNetBar.DotNetBarManager.BarUndock">
            <summary>
            Occurs when Bar is Undocked.
            </summary>
        </member>
        <member name="E:DevComponents.DotNetBar.DotNetBarManager.BeforeDockTabDisplay">
            <summary>
            Occurs before dock tab is displayed.
            </summary>
        </member>
        <member name="E:DevComponents.DotNetBar.DotNetBarManager.AutoHideChanged">
            <summary>
            Occurs when Bar auto-hide state has changed.
            </summary>
        </member>
        <member name="E:DevComponents.DotNetBar.DotNetBarManager.MouseDown">
            <summary>
            Occurs when mouse button is pressed.
            </summary>
        </member>
        <member name="E:DevComponents.DotNetBar.DotNetBarManager.MouseUp">
            <summary>
            Occurs when mouse button is released.
            </summary>
        </member>
        <member name="E:DevComponents.DotNetBar.DotNetBarManager.MouseEnter">
            <summary>
            Occurs when mouse enters the item.
            </summary>
        </member>
        <member name="E:DevComponents.DotNetBar.DotNetBarManager.MouseLeave">
            <summary>
            Occurs when mouse leaves the item.
            </summary>
        </member>
        <member name="E:DevComponents.DotNetBar.DotNetBarManager.MouseMove">
            <summary>
            Occurs when mouse moves over the item.
            </summary>
        </member>
        <member name="E:DevComponents.DotNetBar.DotNetBarManager.MouseHover">
            <summary>
            Occurs when mouse remains still inside an item for an amount of time.
            </summary>
        </member>
        <member name="E:DevComponents.DotNetBar.DotNetBarManager.LostFocus">
            <summary>
            Occurs when item loses input focus.
            </summary>
        </member>
        <member name="E:DevComponents.DotNetBar.DotNetBarManager.GotFocus">
            <summary>
            Occurs when item receives input focus.
            </summary>
        </member>
        <member name="E:DevComponents.DotNetBar.DotNetBarManager.UserCustomize">
            <summary>
            Occurs when user changes the item position, removes the item, adds new item or creates new bar.
            </summary>
        </member>
        <member name="E:DevComponents.DotNetBar.DotNetBarManager.DefinitionLoaded">
            <summary>
            Occurs after DotNetBar definition is loaded.
            </summary>
        </member>
        <member name="E:DevComponents.DotNetBar.DotNetBarManager.ResetDefinition">
            <summary>
            Occurs when users wants to reset the DotNetBar to default state.
            </summary>
        </member>
        <member name="E:DevComponents.DotNetBar.DotNetBarManager.ItemRemoved">
            <summary>
            Occurs after an Item is removed from SubItemsCollection.
            </summary>
        </member>
        <member name="E:DevComponents.DotNetBar.DotNetBarManager.ItemAdded">
            <summary>
            Occurs after an Item has been added to the SubItemsCollection.
            </summary>
        </member>
        <member name="E:DevComponents.DotNetBar.DotNetBarManager.ContainerLoadControl">
            <summary>
            Occurs when ControlContainerControl is created and contained control is needed.
            </summary>
        </member>
        <member name="E:DevComponents.DotNetBar.DotNetBarManager.ItemTextChanged">
            <summary>
            Occurs when Text property of an Item has changed.
            </summary>
        </member>
        <member name="E:DevComponents.DotNetBar.DotNetBarManager.EnterCustomize">
            <summary>
            Occurs when Customize Dialog is about to be shown.
            </summary>
        </member>
        <member name="E:DevComponents.DotNetBar.DotNetBarManager.ExitCustomize">
            <summary>
            Occurs when Customize Dialog is closed.
            </summary>
        </member>
        <member name="E:DevComponents.DotNetBar.DotNetBarManager.ContainerControlSerialize">
            <summary>
            Use this event if you want to serialize the hosted control state directly into the DotNetBar definition file.
            </summary>
        </member>
        <member name="E:DevComponents.DotNetBar.DotNetBarManager.ContainerControlDeserialize">
            <summary>
            Use this event if you want to deserialize the hosted control state directly from the DotNetBar definition file.
            </summary>
        </member>
        <member name="E:DevComponents.DotNetBar.DotNetBarManager.DockTabChange">
            <summary>
            Occurs when current Dock tab has changed.
            </summary>
        </member>
        <member name="E:DevComponents.DotNetBar.DotNetBarManager.BarClosing">
            <summary>
            Occurs when Bar is about to be closed as a result of user clicking the Close button on the bar.
            </summary>
        </member>
        <member name="E:DevComponents.DotNetBar.DotNetBarManager.AutoHideDisplay">
            <summary>
            Occurs when Bar in auto-hide state is about to be displayed.
            </summary>
        </member>
        <member name="E:DevComponents.DotNetBar.DotNetBarManager.CustomizeStartItemDrag">
            <summary>
            Occurs when user starts to drag the item when customize dialog is open.
            </summary>
        </member>
        <member name="E:DevComponents.DotNetBar.DotNetBarManager.BarTearOff">
            <summary>
            Occurs when users Tears-off the Tab from the Bar and new Bar is created as result of that action.
            </summary>
        </member>
        <member name="E:DevComponents.DotNetBar.DotNetBarManager.LocalizeString">
            <summary>
            Occurs when DotNetBar is looking for translated text for one of the internal text that are
            displayed on menus, toolbars and customize forms. You need to set Handled=true if you want
            your custom text to be used instead of the built-in system value.
            </summary>
        </member>
        <member name="E:DevComponents.DotNetBar.DotNetBarManager.OptionGroupChanging">
            <summary>
            Occurs before an item in option group is checked and provides opportunity to cancel that.
            </summary>
        </member>
        <member name="E:DevComponents.DotNetBar.DotNetBarManager.ToolTipShowing">
            <summary>
            Occurs before tooltip for an item is shown. Sender could be the BaseItem or derived class for which tooltip is being displayed or it could be a ToolTip object itself it tooltip is not displayed for any item in particular.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.DotNetBarManager.ParentForm">
            <summary>
            Gets or sets the form DotNetBarManager is attached to.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.DotNetBarManager.ParentUserControl">
            <summary>
            Gets or sets the user control DotNetBarManager is parented to when on user control and providing popups only.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.DotNetBarManager.IsDisposed">
            <summary>
                Gets whether component has been disposed.
            </summary>
            <value>
            </value>
            <remarks>
                Disposed will return true after Dispose method has been executed.
            </remarks>
        </member>
        <member name="P:DevComponents.DotNetBar.DotNetBarManager.DisposeGCCollect">
            <summary>
            Gets or sets whether GC.Collect() is called when this component is disposed.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.DotNetBarManager.DockingHintsEnabled">
            <summary>
            Indicates whether DotNetBar provides docking hints for easy docking of bars.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.DotNetBarManager.Bars">
            <summary>
            Gets the collection of the Bar objects associated with DotNetBarManager.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.DotNetBarManager.IsDefinitionLoaded">
            <summary>
            Gets whether definition is loaded.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.DotNetBarManager.Items">
            <summary>
            Gets the collection of all items that are used for end-user design-time customization.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.DotNetBarManager.ContextMenus">
            <summary>
            Gets the collection of all popup menus managed by DotNetBarManager.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.DotNetBarManager.DispatchShortcuts">
            <summary>
            Indicates whether shortucts handled by items are dispatched to the next handler or control.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.DotNetBarManager.AutoDispatchShortcuts">
            <summary>
            Gets or sets the collection of shortcut keys that are automatically dispatched to the control that has focus even if they are handled and used by one of the items. This gives you fine control over which shortcuts are passed through the system and which ones are marked as handled by DotNetBar.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.DotNetBarManager.ShowResetButton">
            <summary>
            Indicates whether Reset buttons is shown that allows end-user to reset the toolbar state.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.DotNetBarManager.Images">
            <summary>
            ImageList for images used on Items. Images specified here will always be used on menu-items and are by default used on all Bars.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.DotNetBarManager.ImagesMedium">
            <summary>
            ImageList for medium-sized images used on Items.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.DotNetBarManager.ImagesLarge">
            <summary>
            ImageList for large-sized images used on Items.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.DotNetBarManager.SuspendLayout">
            <summary>
            Suspends the bar layout for all bars.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.DotNetBarManager.MenuDropShadow">
            <summary>
            Specifes whether drop shadow is displayed for Menus and pop-up Bars. OfficeXP Style only.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.DotNetBarManager.AlphaBlendShadow">
            <summary>
            Specifes whether to use Alpha-Blending shadows for pop-up items if supported by target OS. Disabling Alpha-Blended shadows can improve performance.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.DotNetBarManager.UseHook">
            <summary>
            Gets or sets whether hooks are used for internal DotNetBar system functionality. Using hooks is recommended only if DotNetBar is used in hybrid environments like Visual Studio designers or IE.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.DotNetBarManager.Definition">
            <summary>
            Gets or sets the DotNetBar definition string.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.DotNetBarManager.LayoutDefinition">
            <summary>
            Gets or sets the DotNetBar layout string.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.DotNetBarManager.UseCustomCustomizeDialog">
            <summary>
            Specifies that custom customize dialog will be used. Use EnterCustomize event to show your custom dialog box.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.DotNetBarManager.TopDockSite">
            <summary>
            Gets or sets the Top dock site used by DotNetBarManager.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.DotNetBarManager.BottomDockSite">
            <summary>
            Gets or sets the Bottom dock site used by DotNetBarManager.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.DotNetBarManager.LeftDockSite">
            <summary>
            Gets or sets the Left dock site used by DotNetBarManager.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.DotNetBarManager.RightDockSite">
            <summary>
            Gets or sets the Right dock site used by DotNetBarManager.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.DotNetBarManager.ThemeAware">
            <summary>
            Specifies whether bars are drawn using Themes when running on OS that supports themes like Windows XP.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.DotNetBarManager.Style">
            <summary>
            Sets the style of all items in DotNetBar Manager.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.DotNetBarManager.AlwaysShowFullMenus">
            <summary>
            Indicates whether the Personalized menu setting is ignored and full menus are always shown.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.DotNetBarManager.AlwaysDisplayKeyAccelerators">
            <summary>
            Gets or sets whether accelerator letters for menu or toolbar commands are underlined regardless of
            current Windows settings. Accelerator keys allow easy access to menu commands by using
            Alt + choosen key (letter). Default value is false which indicates that system setting is used
            to determine whether accelerator letters are underlined. Setting this property to true
            will always display accelerator letter underlined.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.DotNetBarManager.IsThemeActive">
            <summary>
            Returns whether theme support is enabled on the OS that supports themes like Windows XP.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.DotNetBarManager.AllowUserBarCustomize">
            <summary>
            Indicates whether the CustomizeItem (allows toolbar customization) is added for new Bars end users are creating.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.DotNetBarManager.IgnoreF10Key">
            <summary>
            Gets or sets whether DotNetBar ignores the F10 key which when pressed sets the focus to menu bar
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.DotNetBarManager.ShowFullMenusOnHover">
            <summary>
            Indicates whether the items that are not recenly used are shown after mouse hovers over the expand button.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.DotNetBarManager.ShowToolTips">
            <summary>
            Indicates whether Tooltips are shown on Bars and menus.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.DotNetBarManager.ShowShortcutKeysInToolTips">
            <summary>
            Indicates whether item shortcut is displayed in Tooltips.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.DotNetBarManager.PopupAnimation">
            <summary>
            Specifies the pop-up animation style.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.DotNetBarManager.MdiSystemItemVisible">
            <summary>
            Specifies whether the MDI system buttons are displayed in menu bar when MDI Child window is maximized.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.DotNetBarManager.ShowCustomizeContextMenu">
            <summary>
            Gets or sets whether customize context menu is shown on all bars or dock sites.
            </summary>
        </member>
        <member name="T:DevComponents.DotNetBar.DotNetBarManager.CustomizeContextMenuEventHandler">
            <summary>
            
            </summary>
        </member>
        <member name="T:DevComponents.DotNetBar.DotNetBarManager.ItemRemovedEventHandler">
            <summary>
            Represents the method that will handle the ItemRemoved event.
            </summary>
        </member>
        <member name="T:DevComponents.DotNetBar.DotNetBarManager.DockTabChangeEventHandler">
            <summary>
            Defines the delegate for DockTabChange event
            </summary>
        </member>
        <member name="T:DevComponents.DotNetBar.DotNetBarManager.BarClosingEventHandler">
            <summary>
            Defines the delegate for BarClosing event
            </summary>
        </member>
        <member name="T:DevComponents.DotNetBar.DotNetBarManager.AutoHideDisplayEventHandler">
            <summary>
            Defines the delegate for BarAutoHideDisplay event
            </summary>
        </member>
        <member name="T:DevComponents.DotNetBar.DotNetBarManager.LocalizeStringEventHandler">
            <summary>
            Represents the method that will handle the LocalizeString event.
            </summary>
        </member>
        <member name="T:DevComponents.DotNetBar.LocalizeEventArgs">
            <summary>
            Event arguments for LocalizeString event.
            </summary>
        </member>
        <member name="F:DevComponents.DotNetBar.LocalizeEventArgs.Handled">
            <summary>
            Indicates that event has been handled and that LocalizedValue should be used.
            </summary>
        </member>
        <member name="F:DevComponents.DotNetBar.LocalizeEventArgs.Key">
            <summary>
            Indicates the string key for the text that needs to be localized.
            </summary>
        </member>
        <member name="F:DevComponents.DotNetBar.LocalizeEventArgs.LocalizedValue">
            <summary>
            Indicates the localized text value. If you are performing custom string localization
            you need to set this value to the translated text for current locale and you need to set
            Handled property to true.
            </summary>
        </member>
        <member name="M:DevComponents.DotNetBar.LocalizeEventArgs.#ctor">
            <summary>
            Default constructor.
            </summary>
        </member>
        <member name="T:DevComponents.DotNetBar.DotNetBarManagerDesigner">
            <summary>
            Summary description for DotNetBarDesigner.
            </summary>
        </member>
        <member name="T:DevComponents.DotNetBar.DotNetBarStreamer">
            <summary>
            Summary description for DotNetBarStreamer.
            </summary>
        </member>
        <member name="T:DevComponents.DotNetBar.eDotNetBarStyle">
            <summary>
            Specifies the appearance of a item.
            </summary>
        </member>
        <member name="T:DevComponents.DotNetBar.eBarState">
            <summary>
            Specifies the Bar state.
            </summary>
        </member>
        <member name="T:DevComponents.DotNetBar.eGrabHandleStyle">
            <summary>
            Specifies the Bar grab handle style.
            </summary>
        </member>
        <member name="T:DevComponents.DotNetBar.eOrientation">
            <summary>
            Specifies the Orientation of the item within container.
            </summary>
        </member>
        <member name="T:DevComponents.DotNetBar.eSupportedOrientation">
            <summary>
            Specifies the supported orientations by the item.
            </summary>
        </member>
        <member name="T:DevComponents.DotNetBar.eBorderType">
            <summary>
            Specifies the docked Bar border type.
            </summary>
        </member>
        <member name="T:DevComponents.DotNetBar.eAlignment">
            <summary>
            Specifes vertical alignment.
            </summary>
        </member>
        <member name="T:DevComponents.DotNetBar.eItemAlignment">
            <summary>
            Specifies item alignment.
            </summary>
        </member>
        <member name="T:DevComponents.DotNetBar.ePopupType">
            <summary>
            Specifies the popup type.
            </summary>
        </member>
        <member name="T:DevComponents.DotNetBar.eDockSide">
            <summary>
            Specifies the dock side.
            </summary>
        </member>
        <member name="T:DevComponents.DotNetBar.eShortcut">
            <summary>
            Specifies the item shortcut.
            </summary>
        </member>
        <member name="T:DevComponents.DotNetBar.eMenuVisibility">
            <summary>
            Specifies the item menu visibility.
            </summary>
        </member>
        <member name="T:DevComponents.DotNetBar.ePersonalizedMenus">
            <summary>
            Specifies the item behavior personalized menus.
            </summary>
        </member>
        <member name="T:DevComponents.DotNetBar.ePopupAnimation">
            <summary>
            Specifies the popup animation.
            </summary>
        </member>
        <member name="T:DevComponents.DotNetBar.eButtonStyle">
            <summary>
            Specifies ButtonItem style.
            </summary>
        </member>
        <member name="T:DevComponents.DotNetBar.eImagePosition">
            <summary>
            Specifies the image position.
            </summary>
        </member>
        <member name="T:DevComponents.DotNetBar.eHotTrackingStyle">
            <summary>
            Specifies the hot tracking style for buttons.
            </summary>
        </member>
        <member name="T:DevComponents.DotNetBar.eMenuDropShadow">
            <summary>
            Specifies the menu drop shadow.
            </summary>
        </member>
        <member name="T:DevComponents.DotNetBar.eBarImageSize">
            <summary>
            Specifies the image size for the items on the Bar.
            </summary>
        </member>
        <member name="T:DevComponents.DotNetBar.eBorderSide">
            <summary>
            Specifies the sides of a rectangle to apply a border to.
            </summary>
        </member>
        <member name="F:DevComponents.DotNetBar.eBorderSide.None">
            <summary>
            No Border.
            </summary>
        </member>
        <member name="F:DevComponents.DotNetBar.eBorderSide.Left">
            <summary>
            Border on the Left edge.
            </summary>
        </member>
        <member name="F:DevComponents.DotNetBar.eBorderSide.Right">
            <summary>
            Border on the Right edge.
            </summary>
        </member>
        <member name="F:DevComponents.DotNetBar.eBorderSide.Top">
            <summary>
            Border on the Top edge.
            </summary>
        </member>
        <member name="F:DevComponents.DotNetBar.eBorderSide.Bottom">
            <summary>
            Border on the Bottom edge.
            </summary>
        </member>
        <member name="F:DevComponents.DotNetBar.eBorderSide.All">
            <summary>
            Border on all 4 sides.
            </summary>
        </member>
        <member name="T:DevComponents.DotNetBar.eSideBarAppearance">
            <summary>
            Specifies appearance type of the Side Bar control.
            </summary>
        </member>
        <member name="F:DevComponents.DotNetBar.eSideBarAppearance.Traditional">
            <summary>
            Traditional Side Bar appearance with 3D panels.
            </summary>
        </member>
        <member name="F:DevComponents.DotNetBar.eSideBarAppearance.Flat">
            <summary>
            Improved Flat Side Bar appearance with extended appearance options.
            </summary>
        </member>
        <member name="T:DevComponents.DotNetBar.eSideBarColorScheme">
            <summary>
            Specifies predefined side bar color scheme.
            </summary>
        </member>
        <member name="T:DevComponents.DotNetBar.ePopupSide">
            <summary>
            Specifies the side popup is displayed in relation to it's parent.
            </summary>
        </member>
        <member name="T:DevComponents.DotNetBar.eSideBarLayoutType">
            <summary>
            Indicates layout type used for items within side bar panel.
            </summary>
        </member>
        <member name="F:DevComponents.DotNetBar.eSideBarLayoutType.Default">
            <summary>
            Default layout all items arranged in one column.
            </summary>
        </member>
        <member name="F:DevComponents.DotNetBar.eSideBarLayoutType.MultiColumn">
            <summary>
            Items arranged in multiple columns determined by the width of the panel.
            </summary>
        </member>
        <member name="T:DevComponents.DotNetBar.eTabItemColor">
            <summary>
            Indicates color scheme assigned to the tab item.
            </summary>
        </member>
        <member name="T:DevComponents.DotNetBar.ExplorerBar">
            <summary>
            Represents the Outlook like Explorer-bar Control.
            </summary>
        </member>
        <member name="M:DevComponents.DotNetBar.ExplorerBar.#ctor">
            <summary>
            Creates new instance of side bar control.
            </summary>
        </member>
        <member name="M:DevComponents.DotNetBar.ExplorerBar.Dispose(System.Boolean)">
            <summary> 
            Clean up any resources being used.
            </summary>
        </member>
        <member name="M:DevComponents.DotNetBar.ExplorerBar.ResetBackgroundStyle">
            <summary>
            Resets background style to default value.
            </summary>
        </member>
        <member name="M:DevComponents.DotNetBar.ExplorerBar.RecalcLayout">
            <summary>
            Applies any layout changes and repaint the control.
            </summary>
        </member>
        <member name="M:DevComponents.DotNetBar.ExplorerBar.GetItems(System.String)">
            <summary>
            Returns the collection of items with the specified name.
            </summary>
            <param name="ItemName">Item name to look for.</param>
            <returns></returns>
        </member>
        <member name="M:DevComponents.DotNetBar.ExplorerBar.GetItems(System.String,System.Type)">
            <summary>
            Returns the collection of items with the specified name and type.
            </summary>
            <param name="ItemName">Item name to look for.</param>
            <param name="itemType">Item type to look for.</param>
            <returns></returns>
        </member>
        <member name="M:DevComponents.DotNetBar.ExplorerBar.GetItem(System.String)">
            <summary>
            Returns the first item that matches specified name.
            </summary>
            <param name="ItemName">Item name to look for.</param>
            <returns></returns>
        </member>
        <member name="M:DevComponents.DotNetBar.ExplorerBar.EnsureVisible(DevComponents.DotNetBar.BaseItem)">
            <summary>
            Ensures that item is displayed on the screen. Item needs to have it's Visible property set to true. This method will expand the group if needed or it will scroll control to display an item.
            </summary>
            <param name="item">Item to display.</param>
        </member>
        <member name="M:DevComponents.DotNetBar.ExplorerBar.HitTest(System.Int32,System.Int32)">
            <summary>
            Returns the item located at specific client coordinates.
            </summary>
            <param name="clientX">X Coordinate</param>
            <param name="clientY">Y Coordinate</param>
            <returns></returns>
        </member>
        <member name="M:DevComponents.DotNetBar.ExplorerBar.DevComponents#DotNetBar#IOwner#Customize">
            <summary>
            Invokes the DotNetBar Customize dialog.
            </summary>
        </member>
        <member name="M:DevComponents.DotNetBar.ExplorerBar.LoadDefinition(System.String)">
            <summary>
            Loads the Side bar definition from file.
            </summary>
            <param name="FileName">Definition file name.</param>
        </member>
        <member name="M:DevComponents.DotNetBar.ExplorerBar.SaveDefinition(System.String)">
            <summary>
            Saves the Side bar definition to file.
            </summary>
            <param name="FileName">Definition file name.</param>
        </member>
        <member name="E:DevComponents.DotNetBar.ExplorerBar.ItemClick">
            <summary>
            Occurs when Item is clicked.
            </summary>
        </member>
        <member name="E:DevComponents.DotNetBar.ExplorerBar.PopupContainerLoad">
            <summary>
            Occurs when popup of type container is loading.
            </summary>
        </member>
        <member name="E:DevComponents.DotNetBar.ExplorerBar.PopupContainerUnload">
            <summary>
            Occurs when popup of type container is unloading.
            </summary>
        </member>
        <member name="E:DevComponents.DotNetBar.ExplorerBar.PopupOpen">
            <summary>
            Occurs when popup item is about to open.
            </summary>
        </member>
        <member name="E:DevComponents.DotNetBar.ExplorerBar.PopupClose">
            <summary>
            Occurs when popup item is closing.
            </summary>
        </member>
        <member name="E:DevComponents.DotNetBar.ExplorerBar.PopupShowing">
            <summary>
            Occurs just before popup window is shown.
            </summary>
        </member>
        <member name="E:DevComponents.DotNetBar.ExplorerBar.ExpandedChange">
            <summary>
            Occurs when Item Expanded property has changed.
            </summary>
        </member>
        <member name="E:DevComponents.DotNetBar.ExplorerBar.MouseDown">
            <summary>
            Occurs when mouse button is pressed.
            </summary>
        </member>
        <member name="E:DevComponents.DotNetBar.ExplorerBar.MouseUp">
            <summary>
            Occurs when mouse button is released.
            </summary>
        </member>
        <member name="E:DevComponents.DotNetBar.ExplorerBar.MouseEnter">
            <summary>
            Occurs when mouse enters the item.
            </summary>
        </member>
        <member name="E:DevComponents.DotNetBar.ExplorerBar.MouseLeave">
            <summary>
            Occurs when mouse leaves the item.
            </summary>
        </member>
        <member name="E:DevComponents.DotNetBar.ExplorerBar.MouseMove">
            <summary>
            Occurs when mouse moves over the item.
            </summary>
        </member>
        <member name="E:DevComponents.DotNetBar.ExplorerBar.MouseHover">
            <summary>
            Occurs when mouse remains still inside an item for an amount of time.
            </summary>
        </member>
        <member name="E:DevComponents.DotNetBar.ExplorerBar.LostFocus">
            <summary>
            Occurs when item loses input focus.
            </summary>
        </member>
        <member name="E:DevComponents.DotNetBar.ExplorerBar.GotFocus">
            <summary>
            Occurs when item receives input focus.
            </summary>
        </member>
        <member name="E:DevComponents.DotNetBar.ExplorerBar.UserCustomize">
            <summary>
            Occurs when user changes the item position, removes the item, adds new item or creates new bar.
            </summary>
        </member>
        <member name="E:DevComponents.DotNetBar.ExplorerBar.ItemRemoved">
            <summary>
            Occurs after an Item is removed from SubItemsCollection.
            </summary>
        </member>
        <member name="E:DevComponents.DotNetBar.ExplorerBar.ItemAdded">
            <summary>
            Occurs after an Item has been added to the SubItemsCollection.
            </summary>
        </member>
        <member name="E:DevComponents.DotNetBar.ExplorerBar.ContainerLoadControl">
            <summary>
            Occurs when ControlContainerControl is created and contained control is needed.
            </summary>
        </member>
        <member name="E:DevComponents.DotNetBar.ExplorerBar.ItemTextChanged">
            <summary>
            Occurs when Text property of an Item has changed.
            </summary>
        </member>
        <member name="E:DevComponents.DotNetBar.ExplorerBar.ContainerControlSerialize">
            <summary>
            Use this event if you want to serialize the hosted control state directly into the DotNetBar definition file.
            </summary>
        </member>
        <member name="E:DevComponents.DotNetBar.ExplorerBar.ContainerControlDeserialize">
            <summary>
            Use this event if you want to deserialize the hosted control state directly from the DotNetBar definition file.
            </summary>
        </member>
        <member name="E:DevComponents.DotNetBar.ExplorerBar.DefinitionLoaded">
            <summary>
            Occurs after DotNetBar definition is loaded.
            </summary>
        </member>
        <member name="E:DevComponents.DotNetBar.ExplorerBar.OptionGroupChanging">
            <summary>
            Occurs before an item in option group is checked and provides opportunity to cancel that.
            </summary>
        </member>
        <member name="E:DevComponents.DotNetBar.ExplorerBar.ToolTipShowing">
            <summary>
            Occurs before tooltip for an item is shown. Sender could be the BaseItem or derived class for which tooltip is being displayed or it could be a ToolTip object itself it tooltip is not displayed for any item in particular.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.ExplorerBar.ThemeAware">
            <summary>
            Specifies whether ExplorerBar is drawn using Themes when running on OS that supports themes like Windows XP.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.ExplorerBar.BackgroundStyle">
            <summary>
            Specifies the background style of the Explorer Bar.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.ExplorerBar.GroupSpacing">
            <summary>
            Gets or sets the vertical spacing between the group items.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.ExplorerBar.Groups">
            <summary>
            Returns the collection of Explorer Bar Groups.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.ExplorerBar.DevComponents#DotNetBar#IOwner#ParentForm">
            <summary>
            Gets or sets the form ExplorerBar is attached to.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.ExplorerBar.ContentMargin">
            <summary>
            Gets or sets the margin in pixels between the explorer bar groups and the edge of the control.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.ExplorerBar.AllowUserCustomize">
            <summary>
            Gets or sets whether end-user can rearrange the items inside the panels.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.ExplorerBar.AnimationEnabled">
            <summary>
            Gets or sets whether animation is enabled.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.ExplorerBar.UseNativeDragDrop">
            <summary>
            Gets or sets whether native .NET Drag and Drop is used by side-bar to perform drag and drop operations. AllowDrop must be set to true to allow drop of the items on control.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.ExplorerBar.AllowExternalDrop">
            <summary>
            Gets or sets whether external ButtonItem object is accepted in drag and drop operation. UseNativeDragDrop must be set to true in order for this property to be effective.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.ExplorerBar.StockStyle">
            <summary>
            Applies the stock style to the object.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.ExplorerBar.Images">
            <summary>
            ImageList for images used on Items. Images specified here will always be used on menu-items and are by default used on all Bars.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.ExplorerBar.GroupImages">
            <summary>
            ImageList for images displayed on the Group Item.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.ExplorerBar.DevComponents#DotNetBar#IOwner#ImagesLarge">
            <summary>
            ImageList for large-sized images used on Items.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.ExplorerBar.ShowToolTips">
            <summary>
            Indicates whether Tooltips are shown on Bars and menus.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.ExplorerBar.ShowShortcutKeysInToolTips">
            <summary>
            Indicates whether item shortcut is displayed in Tooltips.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.ExplorerBar.DevComponents#DotNetBar#IOwner#ShowResetButton">
            <summary>
            Indicates whether Reset buttons is shown that allows end-user to reset the toolbar state.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.ExplorerBar.ItemsContainer">
            <summary>
            Returns the reference to the container that containing the sub-items.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.ExplorerBar.Definition">
            <summary>
            Gets/Sets Bar definition as XML string.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.ExplorerBar.DispatchShortcuts">
            <summary>
            Indicates whether shortucts handled by items are dispatched to the next handler or control.
            </summary>
        </member>
        <member name="T:DevComponents.DotNetBar.ExplorerBar.ItemRemovedEventHandler">
            <summary>
            Represents the method that will handle the ItemRemoved event.
            </summary>
        </member>
        <member name="T:DevComponents.DotNetBar.ExplorerBarPanelsEditor">
            <summary>
            Summary description for ComboItemsEditor.
            </summary>
        </member>
        <member name="T:DevComponents.DotNetBar.ExplorerBarContainerItem">
            <summary>
            Provides layout for Explorer-Bar control.
            </summary>
        </member>
        <member name="M:DevComponents.DotNetBar.ExplorerBarContainerItem.#ctor">
            <summary>
            Creates new instance of ExplorerBarContainerItem class.
            </summary>
        </member>
        <member name="M:DevComponents.DotNetBar.ExplorerBarContainerItem.Copy">
            <summary>
            Returns copy of ExplorerBarContainerItem item
            </summary>
        </member>
        <member name="M:DevComponents.DotNetBar.ExplorerBarContainerItem.RecalcSize">
            <summary>
            Recalculates the size of the item
            </summary>
        </member>
        <member name="M:DevComponents.DotNetBar.ExplorerBarContainerItem.Paint(DevComponents.DotNetBar.ItemPaintArgs)">
            <summary>
            Paints this base container
            </summary>
        </member>
        <member name="M:DevComponents.DotNetBar.ExplorerBarContainerItem.InternalMouseDown(System.Windows.Forms.MouseEventArgs)">
            <summary>
            Occurs when the mouse pointer is over the item and a mouse button is pressed. This is used by internal implementation only.
            </summary>
        </member>
        <member name="M:DevComponents.DotNetBar.ExplorerBarContainerItem.InternalMouseUp(System.Windows.Forms.MouseEventArgs)">
            <summary>
            Occurs when the mouse pointer is over the item and a mouse button is released. This is used by internal implementation only.
            </summary>
        </member>
        <member name="M:DevComponents.DotNetBar.ExplorerBarContainerItem.FocusNextItem">
            <summary>
            Sets input focus to next visible item in Explorer Bar.
            </summary>
            <returns>True if focus was set to next visible item otherwise false.</returns>
        </member>
        <member name="M:DevComponents.DotNetBar.ExplorerBarContainerItem.FocusPreviousItem">
            <summary>
            Sets input focus to previous visible item in Explorer Bar.
            </summary>
            <returns>True if focus was set to previous visible item otherwise false.</returns>
        </member>
        <member name="P:DevComponents.DotNetBar.ExplorerBarContainerItem.Expanded">
            <summary>
            Gets or sets a value indicating whether the item is expanded or not. For Popup items this would indicate whether the item is popped up or not.
            </summary>
        </member>
        <member name="T:DevComponents.DotNetBar.ExplorerBarDesigner">
            <summary>
            Summary description for ExplorerBarDesigner.
            </summary>
        </member>
        <member name="T:DevComponents.DotNetBar.ExplorerBarGroupItem">
            <summary>
            Represents the Explorer-Bar Group item.
            </summary>
        </member>
        <member name="M:DevComponents.DotNetBar.ExplorerBarGroupItem.#ctor">
            <summary>
            Creates new instance of ExplorerBarGroupItem.
            </summary>
        </member>
        <member name="M:DevComponents.DotNetBar.ExplorerBarGroupItem.#ctor(System.String)">
            <summary>
            Creates new instance of ExplorerBarGroupItem and assigns the name to it.
            </summary>
            <param name="sItemName">Item name.</param>
        </member>
        <member name="M:DevComponents.DotNetBar.ExplorerBarGroupItem.#ctor(System.String,System.String)">
            <summary>
            Creates new instance of ExplorerBarGroupItem and assigns the name and text to it.
            </summary>
            <param name="sItemName">Item name.</param>
            <param name="ItemText">item text.</param>
        </member>
        <member name="M:DevComponents.DotNetBar.ExplorerBarGroupItem.Copy">
            <summary>
            Returns copy of ExplorerBarGroupItem item.
            </summary>
        </member>
        <member name="M:DevComponents.DotNetBar.ExplorerBarGroupItem.GetFont">
            <summary>
            Returns the Font object to be used for drawing the item text.
            </summary>
            <returns>Font object.</returns>
        </member>
        <member name="M:DevComponents.DotNetBar.ExplorerBarGroupItem.InternalMouseMove(System.Windows.Forms.MouseEventArgs)">
            <summary>
            Occurs when the mouse pointer is moved over the item. This is used by internal implementation only.
            </summary>
        </member>
        <member name="M:DevComponents.DotNetBar.ExplorerBarGroupItem.InternalMouseDown(System.Windows.Forms.MouseEventArgs)">
            <summary>
            Occurs when the mouse pointer is over the item and a mouse button is pressed. This is used by internal implementation only.
            </summary>
        </member>
        <member name="M:DevComponents.DotNetBar.ExplorerBarGroupItem.InternalClick(System.Windows.Forms.MouseButtons,System.Drawing.Point)">
            <summary>
            Occurs when the item is clicked. This is used by internal implementation only.
            </summary>
        </member>
        <member name="M:DevComponents.DotNetBar.ExplorerBarGroupItem.OnVisibleChanged(System.Boolean)">
            <summary>
            Called when Visibility of the items has changed.
            </summary>
            <param name="newValue">New Visible state.</param>
        </member>
        <member name="M:DevComponents.DotNetBar.ExplorerBarGroupItem.Serialize(System.Xml.XmlElement)">
            <summary>
            Overloaded. Serializes the item and all sub-items into the XmlElement.
            </summary>
            <param name="ThisItem">XmlElement to serialize the item to.</param>
        </member>
        <member name="M:DevComponents.DotNetBar.ExplorerBarGroupItem.Deserialize(System.Xml.XmlElement)">
            <summary>
            Overloaded. Deserializes the Item from the XmlElement.
            </summary>
            <param name="ItemXmlSource">Source XmlElement.</param>
        </member>
        <member name="M:DevComponents.DotNetBar.ExplorerBarGroupItem.ShowToolTip">
            <summary>
            Shows tooltip for this item.
            </summary>
        </member>
        <member name="M:DevComponents.DotNetBar.ExplorerBarGroupItem.Refresh">
            <summary>
            Forces the repaint the item.
            </summary>
        </member>
        <member name="M:DevComponents.DotNetBar.ExplorerBarGroupItem.DevComponents#DotNetBar#IDesignTimeProvider#GetInsertPosition(System.Drawing.Point,DevComponents.DotNetBar.BaseItem)">
            <summary>
            Must be called by any sub item that implements the image when image has changed
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.ExplorerBarGroupItem.ThemeAware">
            <summary>
            Specifies whether item is drawn using Themes when running on OS that supports themes like Windows XP.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.ExplorerBarGroupItem.ExpandButtonVisible">
            <summary>
            Gets or sets whether expand button is visible.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.ExplorerBarGroupItem.Expanded">
            <summary>
            Gets or sets a value indicating whether the item is expanded or not. For Popup items this would indicate whether the item is popped up or not.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.ExplorerBarGroupItem.BackgroundStyle">
            <summary>
            Gets or sets the item background style.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.ExplorerBarGroupItem.HeaderExpands">
            <summary>
            Gets or sets whether clicking the header of the control expands the item.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.ExplorerBarGroupItem.StockStyle">
            <summary>
            Applies the stock style to the object.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.ExplorerBarGroupItem.Style">
            <summary>
            Applies new visual style to this the item and all of its sub-items.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.ExplorerBarGroupItem.ExpandBorderColor">
            <summary>
            Gets or sets expand button border color.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.ExplorerBarGroupItem.ExpandBackColor">
            <summary>
            Gets or sets expand button back color.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.ExplorerBarGroupItem.ExpandForeColor">
            <summary>
            Gets or sets expand button fore color.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.ExplorerBarGroupItem.ExpandHotBorderColor">
            <summary>
            Gets or sets hot expand button border color.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.ExplorerBarGroupItem.ExpandHotBackColor">
            <summary>
            Gets or sets hot expand button back color.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.ExplorerBarGroupItem.ExpandHotForeColor">
            <summary>
            Gets or sets hot expand button fore color.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.ExplorerBarGroupItem.PanelRect">
            <summary>
            Gets the rectangle of the panel item Button.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.ExplorerBarGroupItem.Image">
            <summary>
            Specifies the image.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.ExplorerBarGroupItem.XPSpecialGroup">
            <summary>
            Indicates whether XP themed special group colors are used for drawing.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.ExplorerBarGroupItem.ImageIndex">
            <summary>
            Specifies the index of the image if ImageList is used.
            </summary>
        </member>
        <member name="T:DevComponents.DotNetBar.ExplorerBarGroupItemEditor">
            <summary>
            Summary description for ComboItemsEditor.
            </summary>
        </member>
        <member name="T:DevComponents.DotNetBar.frmCustomize">
            <summary>
            	Summary description for frmCustomize.
            </summary>
        </member>
        <member name="F:DevComponents.DotNetBar.frmCustomize.components">
            <summary>
            	Required designer variable.
            </summary>
        </member>
        <member name="M:DevComponents.DotNetBar.frmCustomize.Dispose(System.Boolean)">
            <summary>
            	Clean up any resources being used.
            </summary>
        </member>
        <member name="M:DevComponents.DotNetBar.frmCustomize.InitializeComponent">
            <summary>
            	Required method for Designer support - do not modify
            	the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:DevComponents.DotNetBar.GenericItemContainer">
            <summary>
               Summary description for GenericItemContainer.
            </summary>
        </member>
        <member name="M:DevComponents.DotNetBar.GenericItemContainer.Copy">
            <summary>
            Returns copy of GenericItemContainer item
            </summary>
        </member>
        <member name="M:DevComponents.DotNetBar.GenericItemContainer.Paint(DevComponents.DotNetBar.ItemPaintArgs)">
            <summary>
            Paints this base container
            </summary>
        </member>
        <member name="M:DevComponents.DotNetBar.GenericItemContainer.RecalcSizeToolbar">
            <summary>
            Recalculate Size of this item
            </summary>
        </member>
        <member name="M:DevComponents.DotNetBar.GenericItemContainer.SubItemSizeChanged(DevComponents.DotNetBar.BaseItem)">
            <summary>
            This must be called by child item to let the parent know that its size
            has been changed.
            </summary>
        </member>
        <member name="M:DevComponents.DotNetBar.GenericItemContainer.InternalMouseUp(System.Windows.Forms.MouseEventArgs)">
            <summary>
            Occurs when the mouse pointer is over the item and a mouse button is released. This is used by internal implementation only.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.GenericItemContainer.WrapItems">
            <summary>
            Set/Get does container wraps item into the new line when they exceed the container size
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.GenericItemContainer.MoreItemsOnMenu">
            <summary>
            Specifies whether to display more items on popup menu or Bar.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.GenericItemContainer.SystemContainer">
            <summary>
            Gets or sets whether container is system container used internally by DotNetBar.
            </summary>
        </member>
        <member name="T:DevComponents.DotNetBar.Hook">
            <summary>
            Summary description for Hook.
            </summary>
        </member>
        <member name="T:DevComponents.DotNetBar.HTMLHelp">
            <summary>
            Summary description for HTMLHelp.
            </summary>
        </member>
        <member name="T:DevComponents.DotNetBar.ItemPaintArgs">
            <summary>
            Summary description for ItemPaintArgs.
            </summary>
        </member>
        <member name="T:DevComponents.DotNetBar.Items">
            <summary>
            	Holds reference to all unique items in the DotNetBar.
            </summary>
        </member>
        <member name="T:DevComponents.DotNetBar.ItemsListBox">
            <summary>
            	
            </summary>
        </member>
        <member name="T:DevComponents.DotNetBar.ItemStyle">
            <summary>
            Represent an style for the item.
            </summary>
        </member>
        <member name="M:DevComponents.DotNetBar.ItemStyle.#ctor">
            <summary>
            Default Constructor
            </summary>
        </member>
        <member name="M:DevComponents.DotNetBar.ItemStyle.Clone">
            <summary>
            Makes a copy of the ItemStyle object.
            </summary>
            <returns>New Instance of a ItemStyle object</returns>
        </member>
        <member name="M:DevComponents.DotNetBar.ItemStyle.Paint(System.Drawing.Graphics,System.Drawing.Rectangle,System.String,System.Drawing.Rectangle,System.Drawing.Font)">
            <summary>
            Paints the style.
            </summary>
            <param name="g">Graphics object</param>
            <param name="r">Target area</param>
            <param name="text">Text</param>
            <param name="textRect">Text area</param>
            <param name="font">Text Font</param>
        </member>
        <member name="M:DevComponents.DotNetBar.ItemStyle.Paint(System.Drawing.Graphics,System.Drawing.Rectangle,System.String,System.Drawing.Rectangle,System.Drawing.Font,System.Drawing.Point[])">
            <summary>
            Paints the style
            </summary>
            <param name="g">Graphics object</param>
            <param name="r">Target Area</param>
            <param name="text">Text</param>
            <param name="textRect">Text area</param>
            <param name="font">Text Font</param>
            <param name="borderShape">Border Type</param>
        </member>
        <member name="M:DevComponents.DotNetBar.ItemStyle.Paint(System.Drawing.Graphics,System.Drawing.Rectangle)">
            <summary>
            Paints the style
            </summary>
            <param name="g">Graphics object</param>
            <param name="r">Target Area</param>
        </member>
        <member name="M:DevComponents.DotNetBar.ItemStyle.PaintText(System.Drawing.Graphics,System.String,System.Drawing.Rectangle,System.Drawing.Font)">
            <summary>
            Paints the style text only.
            </summary>
            <param name="g">Graphics object</param>
            <param name="text">Text</param>
            <param name="textRect">Text area</param>
            <param name="font">Font</param>
        </member>
        <member name="P:DevComponents.DotNetBar.ItemStyle.BackColor1">
            <summary>
            Gets or sets a background color or starting color for gradient background.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.ItemStyle.BackColor2">
            <summary>
            Gets or sets a background color or ending color for gradient background.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.ItemStyle.ForeColor">
            <summary>
            Gets or sets a text color.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.ItemStyle.GradientAngle">
            <summary>
            Gets or sets the gradient angle.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.ItemStyle.Font">
            <summary>
            Gets or sets the style Font
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.ItemStyle.WordWrap">
            <summary>
            Gets or sets a value that determines whether text is displayed in multiple lines or one long line.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.ItemStyle.Alignment">
            <summary>
            Specifies alignment of the text.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.ItemStyle.LineAlignment">
            <summary>
            Specifies alignment of the text.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.ItemStyle.TextTrimming">
            <summary>
            Specifies how to trim characters when text does not fit.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.ItemStyle.BackgroundImage">
            <summary>
            Specifies background image.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.ItemStyle.BackgroundImagePosition">
            <summary>
            Specifies background image position when container is larger than image.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.ItemStyle.BackgroundImageAlpha">
            <summary>
            Specifies the transparency of background image.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.ItemStyle.Border">
            <summary>
            Gets or sets the border type.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.ItemStyle.BorderDashStyle">
            <summary>
            Gets or sets dash style for single line border type.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.ItemStyle.BorderSide">
            <summary>
            Gets or sets the border sides that are displayed.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.ItemStyle.BorderColor">
            <summary>
            Gets or sets the border color.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.ItemStyle.BorderWidth">
            <summary>
            Gets or sets the line tickness of single line border.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.ItemStyle.MarginLeft">
            <summary>
            Gets or sets the left text margin.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.ItemStyle.MarginRight">
            <summary>
            Gets or sets the right text margin.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.ItemStyle.MarginTop">
            <summary>
            Gets or sets the top text margin.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.ItemStyle.MarginBottom">
            <summary>
            Gets or sets the bottom text margin.
            </summary>
        </member>
        <member name="T:DevComponents.DotNetBar.ColorEx">
            <summary>
            ColorEx object that provides the transparency setting ability.
            </summary>
        </member>
        <member name="M:DevComponents.DotNetBar.ColorEx.#ctor(System.Drawing.Color)">
            <summary>
            Constructor with Color Initialization.
            </summary>
            <param name="color">Color object</param>
        </member>
        <member name="M:DevComponents.DotNetBar.ColorEx.#ctor(System.Drawing.Color,System.Byte)">
            <summary>
            Constructor with Color and Transparency Initialization.
            </summary>
            <param name="color">Color object</param>
            <param name="opacity">Transparency</param>
        </member>
        <member name="M:DevComponents.DotNetBar.ColorEx.GetCompositeColor">
            <summary>
            Returns the color object with the transparency set.
            </summary>
            <returns>Color object</returns>
        </member>
        <member name="P:DevComponents.DotNetBar.ColorEx.Color">
            <summary>
            Gets or sets the Color object which does not include transparency.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.ColorEx.Alpha">
            <summary>
            Indicates the transparency for the color.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.ColorEx.ColorSchemePart">
            <summary>
                Specifies that color derived from system colors which is part of DotNetBar Color Scheme object is used.
                Colors derived from system colors are automatically refreshed when
                system colors are changed.
            </summary>
            <remarks>
                We recommend using this property to specify color rather than setting color directly.
                Using colors that are derived from system colors improves uniform look of your application
                and visual integration into user environment.
            </remarks>
        </member>
        <member name="P:DevComponents.DotNetBar.ColorEx.Empty">
            <summary>
            Returns empty ColorEx object.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.ColorEx.IsEmpty">
            <summary>
            Indicates whether object contain any color.
            </summary>
        </member>
        <member name="T:DevComponents.DotNetBar.LabelItem">
            <summary>
            Summary description for LabelItem.
            </summary>
        </member>
        <member name="M:DevComponents.DotNetBar.LabelItem.OnStyleChanged">
            <summary>
            Occurs after item visual style has changed.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.LabelItem.BorderType">
            <summary>
            Gets or sets the type of the border drawn around the label.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.LabelItem.BackColor">
            <summary>
            Gets or sets the background color of the label.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.LabelItem.ForeColor">
            <summary>
            Gets or sets the text color.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.LabelItem.SingleLineColor">
            <summary>
            Gets or sets the border line color when border is single line.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.LabelItem.TextAlignment">
            <summary>
            Gets or sets the text alignment.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.LabelItem.TextLineAlignment">
            <summary>
            Gets or sets the text line alignment.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.LabelItem.Font">
            <summary>
            Gets or sets the label font.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.LabelItem.PaddingLeft">
            <summary>
            Gets or sets the left padding in pixels.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.LabelItem.PaddingRight">
            <summary>
            Gets or sets the right padding in pixels.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.LabelItem.PaddingTop">
            <summary>
            Gets or sets the top padding in pixels.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.LabelItem.PaddingBottom">
            <summary>
            Gets or sets the bottom padding in pixels.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.LabelItem.Width">
            <summary>
            Gets or sets the width of the label in pixels.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.LabelItem.Height">
            <summary>
            Gets or sets the height of the label.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.LabelItem.DividerStyle">
            <summary>
            Gets or sets whether the label is drawn as a divider label.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.LabelItem.WordWrap">
            <summary>
            Gets or sets a value that determines whether text is displayed in multiple lines or one long line.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.LabelItem.Text">
            <summary>
            Gets or sets the text associated with this item.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.LabelItem.Icon">
            <summary>
            Specifies the label icon. Icons support alpha blending.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.LabelItem.Image">
            <summary>
            Specifies label image.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.LabelItem.ImageIndex">
            <summary>
            Specifies the index of the image for the label if ImageList is used.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.LabelItem.ImagePosition">
            <summary>
            Gets/Sets the image position inside the label.
            </summary>
        </member>
        <member name="T:DevComponents.DotNetBar.MDISystemItem">
            <summary>
            Summary description for MDISystemItem.
            </summary>
        </member>
        <member name="M:DevComponents.DotNetBar.MDISystemItem.Copy">
            <summary>
            Returns copy of CustomizeItem item
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.MDISystemItem.IsSystemIcon">
            <summary>
            MDI System Item can render itself as either Simple icon with system drop down menu or set of
            system buttons Minimize, Restore and Close. This item is rendered on the Bar that is designated as
            Menu bar and when bar is used on MDI form and MDI Child form is maximized.
            </summary>
        </member>
        <member name="T:DevComponents.DotNetBar.MdiWindowListItem">
            <summary>
            Summary description for MdiWindowListItem.
            </summary>
        </member>
        <member name="M:DevComponents.DotNetBar.MdiWindowListItem.RefreshButtonIcons">
            <summary>
            Refresh the MDI Child form Icons that are displayed on window list items.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.MdiWindowListItem.ShowWindowIcons">
            <summary>
            Gets or sets whether the MDI Child Window Icons are displayed on items.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.MdiWindowListItem.MaxCaptionLength">
            <summary>
            Gets or sets maximum form caption length that will be displayed on each item. If caption length exceeds given value ... characters are added.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.MdiWindowListItem.MdiNoFormActivateFlicker">
            <summary>
            Gets or sets whether flicker associated with switching maximized Mdi child forms is attempted to eliminate. You should set this property to false if you encounter any painting problems with your Mdi child forms.
            </summary>
        </member>
        <member name="T:DevComponents.DotNetBar.MenuPanel">
            <summary>
               Summary description for PopupWindow.
            </summary>
        </member>
        <member name="M:DevComponents.DotNetBar.MenuPanel.ItemAtLocation(System.Int32,System.Int32)">
            <summary>
            Return Sub Item at specified location
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.MenuPanel.ShowToolTips">
            <summary>
            Indicates whether Tooltips are shown on Bars and menus.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.MenuPanel.SideBar">
            <summary>
            Sets,Gets the side bar image structure.
            </summary>
        </member>
        <member name="T:DevComponents.DotNetBar.MessageHandler">
            <summary>
            Summary description for MessageHandler.
            </summary>
        </member>
        <member name="T:DevComponents.DotNetBar.NativeFunctions">
            <summary>
               Summary description for NativeFunctions.
            </summary>
        </member>
        <member name="T:DevComponents.DotNetBar.NavigationBar">
            <summary>
            Represents Outlook 2003 like Navigation Bar.
            </summary>
        </member>
        <member name="M:DevComponents.DotNetBar.NavigationBar.#ctor">
            <summary>
            Default constructor.
            </summary>
        </member>
        <member name="M:DevComponents.DotNetBar.NavigationBar.SetDesignTimeDefaults">
            <summary>
            Applies design-time defaults to control.
            </summary>
        </member>
        <member name="M:DevComponents.DotNetBar.NavigationBar.ShowMoreButtons">
            <summary>
            Increases the size of the navigation bar if possible by showing more buttons on the top.
            </summary>
        </member>
        <member name="M:DevComponents.DotNetBar.NavigationBar.ShowFewerButtons">
            <summary>
            Reduces the size of the navigation bar if possible by showing fewer buttons on the top.
            </summary>
        </member>
        <member name="M:DevComponents.DotNetBar.NavigationBar.SaveLayout(System.String)">
            <summary>
            Saves current visual layout of navigation bar control to XML based file.
            </summary>
            <param name="fileName">File name to save layout to.</param>
        </member>
        <member name="M:DevComponents.DotNetBar.NavigationBar.SaveLayout(System.Xml.XmlElement)">
            <summary>
            Saves current visual layout of navigation bar control to XmlElement.
            </summary>
            <param name="xmlParent">XmlElement object that will act as a parent for the layout definition. Exact same element should be passed into the LoadLayout method to load the layout.</param>
        </member>
        <member name="M:DevComponents.DotNetBar.NavigationBar.LoadLayout(System.String)">
            <summary>
            Loads navigation bar layout that was saved using SaveLayout method. Note that this method must be called after all items are created and added to the control.
            </summary>
            <param name="fileName">File to load layout from.</param>
        </member>
        <member name="M:DevComponents.DotNetBar.NavigationBar.LoadLayout(System.Xml.XmlElement)">
            <summary>
            Loads navigation bar layout that was saved using SaveLayout method. Note that this method must be called after all items are created and added to the control.
            </summary>
            <param name="xmlParent">Parent XML element that is used to load layout from. Note that this must be the same element that was passed into the SaveLayout method.</param>
        </member>
        <member name="P:DevComponents.DotNetBar.NavigationBar.Items">
            <summary>
            Returns collection of items on a bar.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.NavigationBar.ConfigureItemVisible">
            <summary>
            Gets or sets whether Configure Buttons button is visible.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.NavigationBar.ConfigureShowHideVisible">
            <summary>
            Gets or sets whether Show More Buttons and Show Fewer Buttons menu items are visible on Configure buttons menu.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.NavigationBar.ConfigureNavOptionsVisible">
            <summary>
            Gets or sets whether Navigation Pane Options menu item is visible on Configure buttons menu.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.NavigationBar.ConfigureAddRemoveVisible">
            <summary>
            Gets or sets whether Navigation Pane Add/Remove Buttons menu item is visible on Configure buttons menu.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.NavigationBar.ItemPaddingTop">
            <summary>
            Gets or sets the padding in pixels at the top portion of the item. Height of each item will be increased by padding amount.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.NavigationBar.ItemPaddingBottom">
            <summary>
            Gets or sets the padding in pixels for bottom portion of the item. Height of each item will be increased by padding amount.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.NavigationBar.ItemsContainer">
            <summary>
            Returns items container.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.NavigationBar.CheckedButton">
            <summary>
            Returns reference to currently checked button.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.NavigationBar.AutoSizeButtonImage">
            <summary>
            Gets or sets whether images are automatically resized to size specified in ImageSizeSummaryLine when button is on the bottom summary line of navigation bar.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.NavigationBar.ImageSizeSummaryLine">
            <summary>
            Gets or sets size of the image that will be use to resize images to when button button is on the bottom summary line of navigation bar and AutoSizeButtonImage=true.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.NavigationBar.LayoutDefinition">
            <summary>
            Gets or sets the navigation bar definition string.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.NavigationBar.SplitterVisible">
            <summary>
            Indicates whether splitter on top of the navigation bar is visible. When activated splitter will let user change the height of the
            control to show fewer or more buttons. It is recommeded to have navigation bar docked to bottom (Dock=Bottom) to maintain
            proper layout.
            </summary>
        </member>
        <member name="T:DevComponents.DotNetBar.NavigationBarContainer">
            <summary>
            Container control for Navigation Bar.
            </summary>
        </member>
        <member name="M:DevComponents.DotNetBar.NavigationBarContainer.#ctor">
            <summary>
            Creates new instance of NavigationBarContainer.
            </summary>
        </member>
        <member name="M:DevComponents.DotNetBar.NavigationBarContainer.#ctor(System.String)">
            <summary>
            Creates new instance of SideBarPanelItem and assigns the name to it.
            </summary>
            <param name="sItemName">Item name.</param>
        </member>
        <member name="M:DevComponents.DotNetBar.NavigationBarContainer.#ctor(System.String,System.String)">
            <summary>
            Creates new instance of SideBarPanelItem and assigns the name and text to it.
            </summary>
            <param name="sItemName">Item name.</param>
            <param name="ItemText">item text.</param>
        </member>
        <member name="M:DevComponents.DotNetBar.NavigationBarContainer.Copy">
            <summary>
            Returns copy of SideBarPanelItem item.
            </summary>
        </member>
        <member name="M:DevComponents.DotNetBar.NavigationBarContainer.RecalcSize">
            <summary>
            Recalculates size of this container.
            </summary>
        </member>
        <member name="M:DevComponents.DotNetBar.NavigationBarContainer.ShowMoreButtons">
            <summary>
            Increases the size of the navigation bar if possible by showing more buttons on the top.
            </summary>
        </member>
        <member name="M:DevComponents.DotNetBar.NavigationBarContainer.ShowFewerButtons">
            <summary>
            Reduces the size of the navigation bar if possible by showing fewer buttons on the top.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.NavigationBarContainer.Expanded">
            <summary>
            Gets or sets a value indicating whether the item is expanded or not. For Popup items this would indicate whether the item is popped up or not.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.NavigationBarContainer.ConfigureItemVisible">
            <summary>
            Gets or sets whether Configure Buttons button is visible.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.NavigationBarContainer.ConfigureShowHideVisible">
            <summary>
            Gets or sets whether Show More Buttons and Show Fewer Buttons menu items are visible on Configure buttons menu.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.NavigationBarContainer.ConfigureNavOptionsVisible">
            <summary>
            Gets or sets whether Navigation Pane Options menu item is visible on Configure buttons menu.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.NavigationBarContainer.ConfigureAddRemoveVisible">
            <summary>
            Gets or sets whether Navigation Pane Add/Remove Buttons menu item is visible on Configure buttons menu.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.NavigationBarContainer.ItemPaddingTop">
            <summary>
            Gets or sets the padding in pixels at the top portion of the item. Height of each item will be increased by padding amount.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.NavigationBarContainer.ItemPaddingBottom">
            <summary>
            Gets or sets the padding in pixels for bottom portion of the item. Height of each item will be increased by padding amount.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.NavigationBarContainer.AutoSizeButtonImage">
            <summary>
            Gets or sets whether images are automatically resized to size specified in ImageSizeSummaryLine when button is on the bottom summary line of navigation bar.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.NavigationBarContainer.ImageSizeSummaryLine">
            <summary>
            Gets or sets size of the image that will be use to resize images to when button button is on the bottom summary line of navigation bar and AutoSizeButtonImage=true.
            </summary>
        </member>
        <member name="T:DevComponents.DotNetBar.NavigationBarDesigner">
            <summary>
            Provides design time support for NavigationBar control.
            </summary>
        </member>
        <member name="M:DevComponents.DotNetBar.NavigationBarDesigner.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="T:DevComponents.DotNetBar.PanelChangingEventHandler">
            <summary>
            Delegate for OptionGroupChanging event.
            </summary>
        </member>
        <member name="T:DevComponents.DotNetBar.NavigationPane">
            <summary>
            Represents Outlook 2003 style navigation pane control.
            </summary>
        </member>
        <member name="F:DevComponents.DotNetBar.NavigationPane.components">
            <summary> 
            Required designer variable.
            </summary>
        </member>
        <member name="M:DevComponents.DotNetBar.NavigationPane.Dispose(System.Boolean)">
            <summary> 
            Clean up any resources being used.
            </summary>
        </member>
        <member name="M:DevComponents.DotNetBar.NavigationPane.RecalcLayout">
            <summary>
            Applies any layout changes and repaint the control.
            </summary>
        </member>
        <member name="M:DevComponents.DotNetBar.NavigationPane.GetPanel(DevComponents.DotNetBar.ButtonItem)">
            <summary>
            Returns Panel associated with button on navigation bar or null if panel cannot be found.
            </summary>
            <param name="item">Button on navigation bar.</param>
            <returns></returns>
        </member>
        <member name="M:DevComponents.DotNetBar.NavigationPane.ResumeLayout(System.Boolean)">
            <summary>
            Resumes normal layout logic. Optionally forces an immediate layout of pending layout requests.
            </summary>
        </member>
        <member name="M:DevComponents.DotNetBar.NavigationPane.ShowMoreButtons">
            <summary>
            Increases the size of the navigation bar if possible by showing more buttons on the top.
            </summary>
        </member>
        <member name="M:DevComponents.DotNetBar.NavigationPane.ShowFewerButtons">
            <summary>
            Reduces the size of the navigation bar if possible by showing fewer buttons on the top.
            </summary>
        </member>
        <member name="M:DevComponents.DotNetBar.NavigationPane.SaveLayout(System.String)">
            <summary>
            Saves current visual layout of navigation bar control to XML based file.
            </summary>
            <param name="fileName">File name to save layout to.</param>
        </member>
        <member name="M:DevComponents.DotNetBar.NavigationPane.SaveLayout(System.Xml.XmlElement)">
            <summary>
            Saves current visual layout of navigation bar control to XmlElement.
            </summary>
            <param name="xmlParent">XmlElement object that will act as a parent for the layout definition. Exact same element should be passed into the LoadLayout method to load the layout.</param>
        </member>
        <member name="M:DevComponents.DotNetBar.NavigationPane.LoadLayout(System.String)">
            <summary>
            Loads navigation bar layout that was saved using SaveLayout method. Note that this method must be called after all items are created and added to the control.
            </summary>
            <param name="fileName">File to load layout from.</param>
        </member>
        <member name="M:DevComponents.DotNetBar.NavigationPane.LoadLayout(System.Xml.XmlElement)">
            <summary>
            Loads navigation bar layout that was saved using SaveLayout method. Note that this method must be called after all items are created and added to the control.
            </summary>
            <param name="xmlParent">Parent XML element that is used to load layout from. Note that this must be the same element that was passed into the SaveLayout method.</param>
        </member>
        <member name="M:DevComponents.DotNetBar.NavigationPane.InitializeComponent">
            <summary> 
            Required method for Designer support - do not modify 
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="E:DevComponents.DotNetBar.NavigationPane.ItemClick">
            <summary>
            Occurs when Item is clicked.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.NavigationPane.Items">
            <summary>
            Returns collection containing buttons on navigation bar.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.NavigationPane.NavigationBarHeight">
            <summary>
            Gets or sets the height of the navigation bar part of the navigation pane control.
            Navigation Bar height is automatically calculated based on the content.
            Setting this property suggests desired height to navigation bar.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.NavigationPane.NavigationBar">
            <summary>
            Returns reference to internal NavigationBar control.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.NavigationPane.ImageSizeSummaryLine">
            <summary>
            Gets or sets size of the image that will be use to resize images to when button button is on the bottom summary line of navigation bar and AutoSizeButtonImage=true.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.NavigationPane.ConfigureItemVisible">
            <summary>
            Gets or sets whether Configure Buttons button is visible.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.NavigationPane.ConfigureShowHideVisible">
            <summary>
            Gets or sets whether Show More Buttons and Show Fewer Buttons menu items are visible on Configure buttons menu.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.NavigationPane.ConfigureNavOptionsVisible">
            <summary>
            Gets or sets whether Navigation Pane Options menu item is visible on Configure buttons menu.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.NavigationPane.ConfigureAddRemoveVisible">
            <summary>
            Gets or sets whether Navigation Pane Add/Remove Buttons menu item is visible on Configure buttons menu.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.NavigationPane.CheckedButton">
            <summary>
            Returns reference to currently checked button.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.NavigationPane.SelectedPanel">
            <summary>
            Returns reference to currently selected panel. Panels are automatically switched when buttons are checked.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.NavigationPane.Images">
            <summary>
            ImageList for images used on Items.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.NavigationPane.TitlePanel">
            <summary>
            Returns reference to the PanelEx that is used to display title.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.NavigationPane.ItemPaddingTop">
            <summary>
            Gets or sets the padding in pixels at the top portion of the item. Height of each item will be increased by padding amount.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.NavigationPane.ItemPaddingBottom">
            <summary>
            Gets or sets the padding in pixels for bottom portion of the item. Height of each item will be increased by padding amount.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.NavigationPane.AutoSizeButtonImage">
            <summary>
            Gets or sets whether images are automatically resized to size specified in ImageSizeSummaryLine when button is on the bottom summary line of navigation bar.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.NavigationPane.LayoutDefinition">
            <summary>
            Gets or sets the navigation bar definition string.
            </summary>
        </member>
        <member name="T:DevComponents.DotNetBar.PanelChangingEventArgs">
            <summary>
            Represents event arguments for PanelChanging event.
            </summary>
        </member>
        <member name="F:DevComponents.DotNetBar.PanelChangingEventArgs.Cancel">
            <summary>
            Set to true to cancel changing of the panel.
            </summary>
        </member>
        <member name="F:DevComponents.DotNetBar.PanelChangingEventArgs.NewPanel">
            <summary>
            Panel that will be selected if operation is not cancelled.
            </summary>
        </member>
        <member name="F:DevComponents.DotNetBar.PanelChangingEventArgs.OldPanel">
            <summary>
            Panel that is currently selected and which will be de-selected if operation is not cancelled.
            </summary>
        </member>
        <member name="M:DevComponents.DotNetBar.PanelChangingEventArgs.#ctor(DevComponents.DotNetBar.NavigationPanePanel,DevComponents.DotNetBar.NavigationPanePanel)">
            <summary>
            Default constructor.
            </summary>
        </member>
        <member name="T:DevComponents.DotNetBar.NavigationPaneDesigner">
            <summary>
            Summary description for NavigationPaneDesigner.
            </summary>
        </member>
        <member name="M:DevComponents.DotNetBar.NavigationPaneDesigner.OtherComponentRemoving(System.Object,System.ComponentModel.Design.ComponentEventArgs)">
            <summary>
            Triggered when some other component on the form is removed.
            </summary>
        </member>
        <member name="T:DevComponents.DotNetBar.NavigationPanePanel">
            <summary>
            Represents Panel on Navigation Pane control.
            </summary>
        </member>
        <member name="T:DevComponents.DotNetBar.PanelEx">
            <summary>
            Represents graphical panel control with support for different visual styles and gradients.
            </summary>
        </member>
        <member name="M:DevComponents.DotNetBar.PanelEx.#ctor">
            <summary>
                Default constructor.
            </summary>
        </member>
        <member name="M:DevComponents.DotNetBar.PanelEx.ResetStyle">
            <summary>
                Resets the style to it's default value.
            </summary>
        </member>
        <member name="M:DevComponents.DotNetBar.PanelEx.ResetStyleMouseOver">
            <summary>
                Resets the style to it's default value.
            </summary>
        </member>
        <member name="M:DevComponents.DotNetBar.PanelEx.ResetStyleMouseDown">
            <summary>
                Resets the style to it's default value.
            </summary>
        </member>
        <member name="M:DevComponents.DotNetBar.PanelEx.ApplyPanelStyle">
            <summary>
                Applies predefined Panel color scheme to the control.
            </summary>
        </member>
        <member name="M:DevComponents.DotNetBar.PanelEx.ApplyButtonStyle">
            <summary>
                Applies predefined Button color scheme to the control.
            </summary>
        </member>
        <member name="M:DevComponents.DotNetBar.PanelEx.ApplyLabelStyle">
            <summary>
                Applies predefined Label color scheme to the control.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.PanelEx.ColorScheme">
            <summary>
            Gets or sets Bar Color Scheme.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.PanelEx.Text">
            <summary>
              Gets or sets the text displayed on panel.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.PanelEx.ShowFocusRectangle">
            <summary>
            Gets or sets whether focus rectangle is displayed when control has focus.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.PanelEx.Style">
            <summary>
            Gets or sets the panel style.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.PanelEx.StyleMouseOver">
            <summary>
            Gets or sets the panel style when mouse hovers over the panel.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.PanelEx.StyleMouseDown">
            <summary>
            Gets or sets the panel style when mouse button is pressed on the panel.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.PanelEx.ColorSchemeStyle">
            <summary>
                Gets or sets color scheme style.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.PanelEx.TextDockConstrained">
            <summary>
            Gets or sets whether text rectangle painted on panel is considering docked controls inside the panel. 
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.PanelEx.ClientTextRectangle">
            <summary>
            Gets the text rectangle.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.NavigationPanePanel.ParentItem">
            <summary>
            Gets or sets button associated with the pane on the panel when hosted on NavigationPane control.
            </summary>
        </member>
        <member name="T:DevComponents.DotNetBar.NavigationPanePanelDesigner">
            <summary>
            Designer for Navigation Pane Panel.
            </summary>
        </member>
        <member name="T:DevComponents.DotNetBar.PanelExDesigner">
            <summary>
            Summary description for PanelExDesigner.
            </summary>
        </member>
        <member name="T:DevComponents.DotNetBar.NavPaneOptions">
            <summary>
            Summary description for NavPaneOptions.
            </summary>
        </member>
        <member name="F:DevComponents.DotNetBar.NavPaneOptions.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:DevComponents.DotNetBar.NavPaneOptions.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
        </member>
        <member name="M:DevComponents.DotNetBar.NavPaneOptions.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:DevComponents.DotNetBar.PopupContainer">
            <summary>
            Use as a popup container for DotNetBar objects.
            </summary>
        </member>
        <member name="T:DevComponents.DotNetBar.PopupContainerControl">
            <summary>
            Summary description for PopupContainer.
            </summary>
        </member>
        <member name="T:DevComponents.DotNetBar.PopupShadow">
            <summary>
            Summary description for PopupShadow.
            </summary>
        </member>
        <member name="T:DevComponents.DotNetBar.ProgressBarItem">
            <summary>
            Represents a progress bar item.
            </summary>
        </member>
        <member name="M:DevComponents.DotNetBar.ProgressBarItem.#ctor">
            <summary>
            Creates new instance of ProgressBarItem.
            </summary>
        </member>
        <member name="M:DevComponents.DotNetBar.ProgressBarItem.#ctor(System.String)">
            <summary>
            Creates new instance of ProgressBarItem and assigns the name to it.
            </summary>
            <param name="sItemName">Item name.</param>
        </member>
        <member name="M:DevComponents.DotNetBar.ProgressBarItem.#ctor(System.String,System.String)">
            <summary>
            Creates new instance of ProgressBarItem and assigns the name and text to it.
            </summary>
            <param name="sItemName">Item name.</param>
            <param name="ItemText">item text.</param>
        </member>
        <member name="M:DevComponents.DotNetBar.ProgressBarItem.Copy">
            <summary>
            Returns copy of the item.
            </summary>
        </member>
        <member name="M:DevComponents.DotNetBar.ProgressBarItem.CopyToItem(DevComponents.DotNetBar.BaseItem)">
            <summary>
            Copies the ButtonItem specific properties to new instance of the item.
            </summary>
            <param name="copy">New ButtonItem instance.</param>
        </member>
        <member name="M:DevComponents.DotNetBar.ProgressBarItem.Paint(DevComponents.DotNetBar.ItemPaintArgs)">
            <summary>
            Overriden. Draws the item.
            </summary>
            <param name="g">Target Graphics object.</param>
        </member>
        <member name="M:DevComponents.DotNetBar.ProgressBarItem.RecalcSize">
            <summary>
            Overriden. Recalculates the size of the item.
            </summary>
        </member>
        <member name="M:DevComponents.DotNetBar.ProgressBarItem.ResetBackgroundStyle">
            <summary>
            Resets the background style to it's default values.
            </summary>
        </member>
        <member name="M:DevComponents.DotNetBar.ProgressBarItem.OnStyleChanged">
            <summary>
            Occurs after item visual style has changed.
            </summary>
        </member>
        <member name="M:DevComponents.DotNetBar.ProgressBarItem.PerformStep">
            <summary>
            Advances the current position of the progress bar by the amount of the Step property.
            </summary>
        </member>
        <member name="M:DevComponents.DotNetBar.ProgressBarItem.Increment(System.Int32)">
            <summary>
            Advances the current position of the progress bar by the specified amount.
            </summary>
            <param name="value">The amount by which to increment the progress bar's current position. </param>
        </member>
        <member name="M:DevComponents.DotNetBar.ProgressBarItem.Deserialize(System.Xml.XmlElement)">
            <summary>
            Overloaded. Deserializes the Item from the XmlElement.
            </summary>
            <param name="ItemXmlSource">Source XmlElement.</param>
        </member>
        <member name="M:DevComponents.DotNetBar.ProgressBarItem.Serialize(System.Xml.XmlElement)">
            <summary>
            Overloaded. Serializes the item and all sub-items into the XmlElement.
            </summary>
            <param name="ThisItem">XmlElement to serialize the item to.</param>
        </member>
        <member name="P:DevComponents.DotNetBar.ProgressBarItem.BackgroundStyle">
            <summary>
            Gets or sets the item background style.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.ProgressBarItem.Maximum">
            <summary>
            Gets or sets the maximum value of the range of the control.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.ProgressBarItem.Minimum">
            <summary>
            Gets or sets the minimum value of the range of the control.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.ProgressBarItem.Value">
            <summary>
            Gets or sets the current position of the progress bar.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.ProgressBarItem.Step">
            <summary>
            Gets or sets the amount by which a call to the PerformStep method increases the current position of the progress bar.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.ProgressBarItem.TextVisible">
            <summary>
            Gets or sets whether the text inside the progress bar is displayed.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.ProgressBarItem.Width">
            <summary>
            Gets or sets the width of the item in pixels. 0 value indicates the auto-sizing item based on the text contained in it.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.ProgressBarItem.Height">
            <summary>
            Gets or sets the height of the label. 0 value indicates the auto-sizing item based on the text height.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.ProgressBarItem.ChunkColor">
            <summary>
            Gets or sets the color of the progress chunk.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.ProgressBarItem.ChunkColor2">
            <summary>
            Gets or sets the target gradient color of the progress chunk.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.ProgressBarItem.ChunkGradientAngle">
            <summary>
            Gets or sets the gradient angle of the progress chunk.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.ProgressBarItem.MenuVisibility">
            <summary>
            Indicates item's visiblity when on pop-up menu.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.ProgressBarItem.RecentlyUsed">
            <summary>
            Indicates whether item was recently used.
            </summary>
        </member>
        <member name="T:DevComponents.DotNetBar.RemindForm">
            <summary>
            Summary description for RemindForm.
            </summary>
        </member>
        <member name="M:DevComponents.DotNetBar.RemindForm.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
        </member>
        <member name="M:DevComponents.DotNetBar.RemindForm.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:DevComponents.DotNetBar.ScrollButton">
            <summary>
            Summary description for ScrollButton.
            </summary>
        </member>
        <member name="M:DevComponents.DotNetBar.ScrollButton.Dispose(System.Boolean)">
            <summary> 
            Clean up any resources being used.
            </summary>
        </member>
        <member name="T:DevComponents.DotNetBar.ShortcutsCollection">
            <summary>
            	Summary description for ShortcutList.
            </summary>
        </member>
        <member name="T:DevComponents.DotNetBar.ShortcutsDesigner">
            <summary>
            Summary description for ShortcutsDesigner.
            </summary>
        </member>
        <member name="T:DevComponents.DotNetBar.SideBar">
            <summary>
            Represents the Outlook like Side-bar Control.
            </summary>
        </member>
        <member name="M:DevComponents.DotNetBar.SideBar.#ctor">
            <summary>
            Creates new instance of side bar control.
            </summary>
        </member>
        <member name="M:DevComponents.DotNetBar.SideBar.Dispose(System.Boolean)">
            <summary> 
            Clean up any resources being used.
            </summary>
        </member>
        <member name="M:DevComponents.DotNetBar.SideBar.GetItems(System.String)">
            <summary>
            Returns the collection of items with the specified name.
            </summary>
            <param name="ItemName">Item name to look for.</param>
            <returns></returns>
        </member>
        <member name="M:DevComponents.DotNetBar.SideBar.GetItems(System.String,System.Type)">
            <summary>
            Returns the collection of items with the specified name and type.
            </summary>
            <param name="ItemName">Item name to look for.</param>
            <param name="itemType">Item type to look for.</param>
            <returns></returns>
        </member>
        <member name="M:DevComponents.DotNetBar.SideBar.GetItem(System.String)">
            <summary>
            Returns the first item that matches specified name.
            </summary>
            <param name="ItemName">Item name to look for.</param>
            <returns></returns>
        </member>
        <member name="M:DevComponents.DotNetBar.SideBar.DevComponents#DotNetBar#IOwner#Customize">
            <summary>
            Invokes the DotNetBar Customize dialog.
            </summary>
        </member>
        <member name="M:DevComponents.DotNetBar.SideBar.LoadDefinition(System.String)">
            <summary>
            Loads the Side bar definition from file.
            </summary>
            <param name="FileName">Definition file name.</param>
        </member>
        <member name="M:DevComponents.DotNetBar.SideBar.SaveDefinition(System.String)">
            <summary>
            Saves the Side bar definition to file.
            </summary>
            <param name="FileName">Definition file name.</param>
        </member>
        <member name="E:DevComponents.DotNetBar.SideBar.ItemClick">
            <summary>
            Occurs when Item is clicked.
            </summary>
        </member>
        <member name="E:DevComponents.DotNetBar.SideBar.PopupContainerLoad">
            <summary>
            Occurs when popup of type container is loading.
            </summary>
        </member>
        <member name="E:DevComponents.DotNetBar.SideBar.PopupContainerUnload">
            <summary>
            Occurs when popup of type container is unloading.
            </summary>
        </member>
        <member name="E:DevComponents.DotNetBar.SideBar.PopupOpen">
            <summary>
            Occurs when popup item is about to open.
            </summary>
        </member>
        <member name="E:DevComponents.DotNetBar.SideBar.PopupClose">
            <summary>
            Occurs when popup item is closing.
            </summary>
        </member>
        <member name="E:DevComponents.DotNetBar.SideBar.PopupShowing">
            <summary>
            Occurs just before popup window is shown.
            </summary>
        </member>
        <member name="E:DevComponents.DotNetBar.SideBar.ExpandedChange">
            <summary>
            Occurs when Item Expanded property has changed.
            </summary>
        </member>
        <member name="E:DevComponents.DotNetBar.SideBar.MouseDown">
            <summary>
            Occurs when mouse button is pressed.
            </summary>
        </member>
        <member name="E:DevComponents.DotNetBar.SideBar.MouseUp">
            <summary>
            Occurs when mouse button is released.
            </summary>
        </member>
        <member name="E:DevComponents.DotNetBar.SideBar.MouseEnter">
            <summary>
            Occurs when mouse enters the item.
            </summary>
        </member>
        <member name="E:DevComponents.DotNetBar.SideBar.MouseLeave">
            <summary>
            Occurs when mouse leaves the item.
            </summary>
        </member>
        <member name="E:DevComponents.DotNetBar.SideBar.MouseMove">
            <summary>
            Occurs when mouse moves over the item.
            </summary>
        </member>
        <member name="E:DevComponents.DotNetBar.SideBar.MouseHover">
            <summary>
            Occurs when mouse remains still inside an item for an amount of time.
            </summary>
        </member>
        <member name="E:DevComponents.DotNetBar.SideBar.LostFocus">
            <summary>
            Occurs when item loses input focus.
            </summary>
        </member>
        <member name="E:DevComponents.DotNetBar.SideBar.GotFocus">
            <summary>
            Occurs when item receives input focus.
            </summary>
        </member>
        <member name="E:DevComponents.DotNetBar.SideBar.UserCustomize">
            <summary>
            Occurs when user changes the item position, removes the item, adds new item or creates new bar.
            </summary>
        </member>
        <member name="E:DevComponents.DotNetBar.SideBar.ItemRemoved">
            <summary>
            Occurs after an Item is removed from SubItemsCollection.
            </summary>
        </member>
        <member name="E:DevComponents.DotNetBar.SideBar.ItemAdded">
            <summary>
            Occurs after an Item has been added to the SubItemsCollection.
            </summary>
        </member>
        <member name="E:DevComponents.DotNetBar.SideBar.ContainerLoadControl">
            <summary>
            Occurs when ControlContainerControl is created and contained control is needed.
            </summary>
        </member>
        <member name="E:DevComponents.DotNetBar.SideBar.ItemTextChanged">
            <summary>
            Occurs when Text property of an Item has changed.
            </summary>
        </member>
        <member name="E:DevComponents.DotNetBar.SideBar.ContainerControlSerialize">
            <summary>
            Use this event if you want to serialize the hosted control state directly into the DotNetBar definition file.
            </summary>
        </member>
        <member name="E:DevComponents.DotNetBar.SideBar.ContainerControlDeserialize">
            <summary>
            Use this event if you want to deserialize the hosted control state directly from the DotNetBar definition file.
            </summary>
        </member>
        <member name="E:DevComponents.DotNetBar.SideBar.DefinitionLoaded">
            <summary>
            Occurs after DotNetBar definition is loaded.
            </summary>
        </member>
        <member name="E:DevComponents.DotNetBar.SideBar.OptionGroupChanging">
            <summary>
            Occurs before an item in option group is checked and provides opportunity to cancel that.
            </summary>
        </member>
        <member name="E:DevComponents.DotNetBar.SideBar.ToolTipShowing">
            <summary>
            Occurs before tooltip for an item is shown. Sender could be the BaseItem or derived class for which tooltip is being displayed or it could be a ToolTip object itself it tooltip is not displayed for any item in particular.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.SideBar.Appearance">
            <summary>
            Gets or sets visual appearance for the control.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.SideBar.UsingSystemColors">
            <summary>
                Gets or sets whether flat side bar is using system colors.
            </summary>
            <remarks>
                This property is used internally by side bar to determine whether to reset color scheme based on system colors.
                If you want side bar to use system colors you need to set PredefinedColorScheme property.
            </remarks>
        </member>
        <member name="P:DevComponents.DotNetBar.SideBar.ColorScheme">
            <summary>
            Gets or sets Bar Color Scheme.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.SideBar.Style">
            <summary>
            Gets/Sets the visual style of the SideBar.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.SideBar.ThemeAware">
            <summary>
            Specifies whether SideBar is drawn using Themes when running on OS that supports themes like Windows XP.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.SideBar.Panels">
            <summary>
            Returns the collection of side-bar Panels.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.SideBar.ExpandedPanel">
            <summary>
            Gets or sets the expanded panel. Only one panel can be expanded at a time.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.SideBar.DevComponents#DotNetBar#IOwner#ParentForm">
            <summary>
            Gets or sets the form SideBar is attached to.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.SideBar.AllowUserCustomize">
            <summary>
            Gets or sets whether end-user can rearrange the items inside the panels.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.SideBar.UseNativeDragDrop">
            <summary>
            Gets or sets whether native .NET Drag and Drop is used by side-bar to perform drag and drop operations. AllowDrop must be set to true to allow drop of the items on control.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.SideBar.AllowExternalDrop">
            <summary>
            Gets or sets whether external ButtonItem object is accepted in drag and drop operation. UseNativeDragDrop must be set to true in order for this property to be effective.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.SideBar.Images">
            <summary>
            ImageList for images used on Items. Images specified here will always be used on menu-items and are by default used on all Bars.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.SideBar.ImagesMedium">
            <summary>
            ImageList for medium-sized images used on Items.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.SideBar.ImagesLarge">
            <summary>
            ImageList for large-sized images used on Items.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.SideBar.ShowToolTips">
            <summary>
            Indicates whether Tooltips are shown on Bars and menus.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.SideBar.ShowShortcutKeysInToolTips">
            <summary>
            Indicates whether item shortcut is displayed in Tooltips.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.SideBar.DevComponents#DotNetBar#IOwner#ShowResetButton">
            <summary>
            Indicates whether Reset buttons is shown that allows end-user to reset the toolbar state.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.SideBar.ItemsContainer">
            <summary>
            Returns the reference to the container that containing the sub-items.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.SideBar.BorderStyle">
            <summary>
            Gets/Sets border style when Bar is docked.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.SideBar.Definition">
            <summary>
            Gets/Sets Bar definition as XML string.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.SideBar.DispatchShortcuts">
            <summary>
            Indicates whether shortucts handled by items are dispatched to the next handler or control.
            </summary>
        </member>
        <member name="T:DevComponents.DotNetBar.SideBar.ItemRemovedEventHandler">
            <summary>
            Represents the method that will handle the ItemRemoved event.
            </summary>
        </member>
        <member name="T:DevComponents.DotNetBar.SideBarPanelsEditor">
            <summary>
            Summary description for ComboItemsEditor.
            </summary>
        </member>
        <member name="T:DevComponents.DotNetBar.SideBarColorSchemePicker">
            <summary>
            Summary description for SideBarColorSchemePicker.
            </summary>
        </member>
        <member name="F:DevComponents.DotNetBar.SideBarColorSchemePicker.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:DevComponents.DotNetBar.SideBarColorSchemePicker.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
        </member>
        <member name="M:DevComponents.DotNetBar.SideBarColorSchemePicker.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:DevComponents.DotNetBar.SideBarContainerItem">
            <summary>
            Provides layout for Side-Bar control.
            </summary>
        </member>
        <member name="M:DevComponents.DotNetBar.SideBarContainerItem.#ctor">
            <summary>
            Creates new instance of SideBarContainerItem class.
            </summary>
        </member>
        <member name="M:DevComponents.DotNetBar.SideBarContainerItem.Copy">
            <summary>
            Returns copy of SideBarContainerItem item
            </summary>
        </member>
        <member name="M:DevComponents.DotNetBar.SideBarContainerItem.RecalcSize">
            <summary>
            Recalculates the size of the item
            </summary>
        </member>
        <member name="M:DevComponents.DotNetBar.SideBarContainerItem.Paint(DevComponents.DotNetBar.ItemPaintArgs)">
            <summary>
            Paints this base container
            </summary>
        </member>
        <member name="M:DevComponents.DotNetBar.SideBarContainerItem.OnSubItemExpandChange(DevComponents.DotNetBar.BaseItem)">
            <summary>
            Occurs when sub item expanded state has changed.
            </summary>
            <param name="item">Sub item affected.</param>
        </member>
        <member name="M:DevComponents.DotNetBar.SideBarContainerItem.InternalMouseDown(System.Windows.Forms.MouseEventArgs)">
            <summary>
            Occurs when the mouse pointer is over the item and a mouse button is pressed. This is used by internal implementation only.
            </summary>
        </member>
        <member name="M:DevComponents.DotNetBar.SideBarContainerItem.FocusNextItem">
            <summary>
            Sets input focus to next visible item in Explorer Bar.
            </summary>
            <returns>True if focus was set to next visible item otherwise false.</returns>
        </member>
        <member name="M:DevComponents.DotNetBar.SideBarContainerItem.FocusPreviousItem">
            <summary>
            Sets input focus to previous visible item in Explorer Bar.
            </summary>
            <returns>True if focus was set to previous visible item otherwise false.</returns>
        </member>
        <member name="P:DevComponents.DotNetBar.SideBarContainerItem.Expanded">
            <summary>
            Gets or sets a value indicating whether the item is expanded or not. For Popup items this would indicate whether the item is popped up or not.
            </summary>
        </member>
        <member name="T:DevComponents.DotNetBar.SideBarDesigner">
            <summary>
            Summary description for SideBarDesigner.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.SideBarDesigner.Appearance">
            <summary>
            Gets or sets visual appearance for the control.
            </summary>
        </member>
        <member name="T:DevComponents.DotNetBar.SideBarPanelControlHost">
            <summary>
            Summary description for SideBarPanelControl.
            </summary>
        </member>
        <member name="T:DevComponents.DotNetBar.SideBarPanelItem">
            <summary>
            Represents the Side-Bar Panel item.
            </summary>
        </member>
        <member name="M:DevComponents.DotNetBar.SideBarPanelItem.#ctor">
            <summary>
            Creates new instance of SideBarPanelItem.
            </summary>
        </member>
        <member name="M:DevComponents.DotNetBar.SideBarPanelItem.#ctor(System.String)">
            <summary>
            Creates new instance of SideBarPanelItem and assigns the name to it.
            </summary>
            <param name="sItemName">Item name.</param>
        </member>
        <member name="M:DevComponents.DotNetBar.SideBarPanelItem.#ctor(System.String,System.String)">
            <summary>
            Creates new instance of SideBarPanelItem and assigns the name and text to it.
            </summary>
            <param name="sItemName">Item name.</param>
            <param name="ItemText">item text.</param>
        </member>
        <member name="M:DevComponents.DotNetBar.SideBarPanelItem.Copy">
            <summary>
            Returns copy of SideBarPanelItem item.
            </summary>
        </member>
        <member name="M:DevComponents.DotNetBar.SideBarPanelItem.GetFont">
            <summary>
            Returns the Font object to be used for drawing the item text.
            </summary>
            <returns>Font object.</returns>
        </member>
        <member name="M:DevComponents.DotNetBar.SideBarPanelItem.InternalMouseMove(System.Windows.Forms.MouseEventArgs)">
            <summary>
            Occurs when the mouse pointer is moved over the item. This is used by internal implementation only.
            </summary>
        </member>
        <member name="M:DevComponents.DotNetBar.SideBarPanelItem.InternalMouseDown(System.Windows.Forms.MouseEventArgs)">
            <summary>
            Occurs when the mouse pointer is over the item and a mouse button is pressed. This is used by internal implementation only.
            </summary>
        </member>
        <member name="M:DevComponents.DotNetBar.SideBarPanelItem.InternalClick(System.Windows.Forms.MouseButtons,System.Drawing.Point)">
            <summary>
            Occurs when the item is clicked. This is used by internal implementation only.
            </summary>
        </member>
        <member name="M:DevComponents.DotNetBar.SideBarPanelItem.Serialize(System.Xml.XmlElement)">
            <summary>
            Overloaded. Serializes the item and all sub-items into the XmlElement.
            </summary>
            <param name="ThisItem">XmlElement to serialize the item to.</param>
        </member>
        <member name="M:DevComponents.DotNetBar.SideBarPanelItem.Deserialize(System.Xml.XmlElement)">
            <summary>
            Overloaded. Deserializes the Item from the XmlElement.
            </summary>
            <param name="ItemXmlSource">Source XmlElement.</param>
        </member>
        <member name="M:DevComponents.DotNetBar.SideBarPanelItem.ShowToolTip">
            <summary>
            Shows tooltip for this item.
            </summary>
        </member>
        <member name="M:DevComponents.DotNetBar.SideBarPanelItem.Refresh">
            <summary>
            Forces the repaint the item.
            </summary>
        </member>
        <member name="M:DevComponents.DotNetBar.SideBarPanelItem.DevComponents#DotNetBar#IDesignTimeProvider#GetInsertPosition(System.Drawing.Point,DevComponents.DotNetBar.BaseItem)">
            <summary>
            Must be called by any sub item that implements the image when image has changed
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.SideBarPanelItem.LayoutType">
            <summary>
            Gets or sets the layout type for the items. Default layout orders items in a single column. Multi-column layout will order
            items in multiple colums based on the width of the control.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.SideBarPanelItem.Text">
            <summary>
            Gets or sets the text associated with this item.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.SideBarPanelItem.BackgroundStyle">
            <summary>
            Gets or sets the item background style.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.SideBarPanelItem.HeaderStyle">
            <summary>
            Gets or sets the item header style. Applies only when SideBar.Appearance is set to Flat.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.SideBarPanelItem.HeaderHotStyle">
            <summary>
            Gets or sets the item header style when mouse is over the header. Applies only when SideBar.Appearance is set to Flat.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.SideBarPanelItem.HeaderMouseDownStyle">
            <summary>
            Gets or sets the item header style when left mouse button is pressed on header. Applies only when SideBar.Appearance is set to Flat.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.SideBarPanelItem.HeaderSideStyle">
            <summary>
            Gets or sets the item header side style. Applies only when SideBar.Appearance is set to Flat.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.SideBarPanelItem.HeaderSideHotStyle">
            <summary>
            Gets or sets the item header side style when mouse is over the header. Applies only when SideBar.Appearance is set to Flat.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.SideBarPanelItem.HeaderSideMouseDownStyle">
            <summary>
            Gets or sets the item header side style when left mouse button is pressed on header. Applies only when SideBar.Appearance is set to Flat.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.SideBarPanelItem.HotFontBold">
            <summary>
            Gets or sets whether the font used to draw the item text is bold when mouse is over the item.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.SideBarPanelItem.HotFontUnderline">
            <summary>
            Gets or sets whether the font used to draw the item text is underlined when mouse is over the item.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.SideBarPanelItem.HotForeColor">
            <summary>
            Gets or sets the text color of the button when mouse is over the item.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.SideBarPanelItem.ForeColor">
            <summary>
            Gets or sets the text color of the button.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.SideBarPanelItem.ItemImageSize">
            <summary>
            Gets/Sets the Image size for all sub-items on the Bar.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.SideBarPanelItem.PanelRect">
            <summary>
            Gets the rectangle of the panel item Button.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.SideBarPanelItem.TopItemIndex">
            <summary>
            Gets or sets the index of the first visible item on the panel.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.SideBarPanelItem.WordWrap">
            <summary>
            Gets or sets a value that determines whether text is displayed in multiple lines or one long line.
            This setting applies to the buttons inside Panel as well.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.SideBarPanelItem.EnableScrollButtons">
            <summary>
                Gets or sets whether scroll buttons are displayed when content of the panel exceeds it's height.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.SideBarPanelItem.Icon">
            <summary>
            Specifies the Button icon. Icons support multiple image sizes and alpha blending.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.SideBarPanelItem.Image">
            <summary>
            Specifies the Button image.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.SideBarPanelItem.ImageIndex">
            <summary>
            Specifies the index of the image for the button if ImageList is used.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.SideBarPanelItem.HoverImage">
            <summary>
            Specifies the image for the button when mouse is over the item.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.SideBarPanelItem.HoverImageIndex">
            <summary>
            Specifies the index of the image for the button when mouse is over the item when ImageList is used.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.SideBarPanelItem.PressedImage">
            <summary>
            Specifies the image for the button when mouse left button is pressed.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.SideBarPanelItem.PressedImageIndex">
            <summary>
            Specifies the index of the image for the button when mouse left button is pressed and ImageList is used.
            </summary>
        </member>
        <member name="T:DevComponents.DotNetBar.SideBarPanelItemEditor">
            <summary>
            Summary description for ComboItemsEditor.
            </summary>
        </member>
        <member name="T:DevComponents.DotNetBar.Design.SplitterOffice2003">
            <summary>
            Summary description for SplitterOffice2003.
            </summary>
        </member>
        <member name="T:DevComponents.DotNetBar.SubItemsCollection">
            <summary>
            Summary description for SubItemsCollection.
            </summary>
        </member>
        <member name="T:DevComponents.DotNetBar.TabColorScheme">
            <summary>
            Represents the class that defines colors for a tab control.
            </summary>
        </member>
        <member name="M:DevComponents.DotNetBar.TabColorScheme.#ctor">
            <summary>
            Default constructor.
            </summary>
        </member>
        <member name="M:DevComponents.DotNetBar.TabColorScheme.#ctor(DevComponents.DotNetBar.eTabStripStyle)">
            <summary>
            Default contructor that accepts style.
            </summary>
        </member>
        <member name="M:DevComponents.DotNetBar.TabColorScheme.Refresh">
            <summary>
            Refreshes colors stored in the color scheme. This method is used for example to refresh the color after system display colors have changed.
            </summary>
        </member>
        <member name="M:DevComponents.DotNetBar.TabColorScheme.GenerateFlatColorScheme">
            <summary>
            Generates color scheme for flat style.
            </summary>
        </member>
        <member name="M:DevComponents.DotNetBar.TabColorScheme.GenerateOffice2003ColorScheme">
            <summary>
            Generates color scheme for Office 2003 style.
            </summary>
        </member>
        <member name="M:DevComponents.DotNetBar.TabColorScheme.GenerateThemedColorScheme">
            <summary>
            Generates Windows XP Themed color scheme.
            </summary>
        </member>
        <member name="M:DevComponents.DotNetBar.TabColorScheme.GenerateOneNoteColorScheme">
            <summary>
            Generates OneNote style color scheme.
            </summary>
        </member>
        <member name="M:DevComponents.DotNetBar.TabColorScheme.ResetChangedFlag">
            <summary>
            Resets changed flag for all color properties.
            </summary>
        </member>
        <member name="M:DevComponents.DotNetBar.TabColorScheme.ApplyPredefinedColor(DevComponents.DotNetBar.TabItem,DevComponents.DotNetBar.eTabItemColor)">
            <summary>
            Applies predefinied tab item color scheme to the tab.
            </summary>
            <param name="item">Tab item to apply color to.</param>
            <param name="c">Predefined color to apply</param>
        </member>
        <member name="P:DevComponents.DotNetBar.TabColorScheme.Style">
            <summary>
            Gets or sets the style that color scheme represents.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.TabColorScheme.SchemeChanged">
            <summary>
            Indicates whether any of the colors has changed.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.TabColorScheme.TabBackground">
            <summary>
            Specifies the background color of the tab control.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.TabColorScheme.TabBackground2">
            <summary>
            Specifies the target gradient background color of the tab control.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.TabColorScheme.TabBackgroundGradientAngle">
            <summary>
            Specifies the gradient angle.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.TabColorScheme.TabBorder">
            <summary>
            Specifies the border color of the tab control.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.TabColorScheme.TabPanelBackground">
            <summary>
            Specifies the background color of the tab panel.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.TabColorScheme.TabPanelBackground2">
            <summary>
            Specifies the target gradient background color of the tab panel.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.TabColorScheme.TabPanelBackgroundGradientAngle">
            <summary>
            Specifies the gradient angle.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.TabColorScheme.TabPanelBorder">
            <summary>
            Specifies the border color of the tab panel.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.TabColorScheme.TabItemBorder">
            <summary>
            Specifies the border color of the tab item.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.TabColorScheme.TabItemBorderLight">
            <summary>
            Specifies the light border color of the tab item.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.TabColorScheme.TabItemBorderDark">
            <summary>
            Specifies the dark border color of the tab item.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.TabColorScheme.TabItemBackground">
            <summary>
            Specifies the background color of the tab item.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.TabColorScheme.TabItemBackground2">
            <summary>
            Specifies the target gradient background color of the tab item.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.TabColorScheme.TabItemBackgroundGradientAngle">
            <summary>
            Specifies the gradient angle.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.TabColorScheme.TabItemText">
            <summary>
            Specifies the text of the tab item.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.TabColorScheme.TabItemHotBorder">
            <summary>
            Specifies the border color of the tab item when mouse is over it.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.TabColorScheme.TabItemHotBorderLight">
            <summary>
            Specifies the light border color of the tab item when mouse is over it.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.TabColorScheme.TabItemHotBorderDark">
            <summary>
            Specifies the dark border color of the tab item when mouse is over it.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.TabColorScheme.TabItemHotBackground">
            <summary>
            Specifies the background color of the tab item when mouse is over it.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.TabColorScheme.TabItemHotBackground2">
            <summary>
            Specifies the target gradient background color of the tab item when mouse is over it.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.TabColorScheme.TabItemHotBackgroundGradientAngle">
            <summary>
            Specifies the gradient angle.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.TabColorScheme.TabItemHotText">
            <summary>
            Specifies the text color of the tab item when mouse is over it.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.TabColorScheme.TabItemSelectedBorder">
            <summary>
            Specifies the border color of the tab item when selected.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.TabColorScheme.TabItemSelectedBorderLight">
            <summary>
            Specifies the light border color of the tab item when selected.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.TabColorScheme.TabItemSelectedBorderDark">
            <summary>
            Specifies the dark border color of the tab item when selected.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.TabColorScheme.TabItemSelectedBackground">
            <summary>
            Specifies the background color of the tab item when selected.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.TabColorScheme.TabItemSelectedBackground2">
            <summary>
            Specifies the target gradient background color of the tab item when selected.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.TabColorScheme.TabItemSelectedBackgroundGradientAngle">
            <summary>
            Specifies the gradient angle.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.TabColorScheme.TabItemSelectedText">
            <summary>
            Specifies the text color of the tab item when selected.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.TabColorScheme.TabItemSeparator">
            <summary>
            Specifies the tab item separator color.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.TabColorScheme.TabItemSeparatorShade">
            <summary>
            Specifies the tab item separator shadow color.
            </summary>
        </member>
        <member name="T:DevComponents.DotNetBar.TabControl">
            <summary>
            Summary description for TabControl.
            </summary>
        </member>
        <member name="F:DevComponents.DotNetBar.TabControl.components">
            <summary> 
            Required designer variable.
            </summary>
        </member>
        <member name="M:DevComponents.DotNetBar.TabControl.Dispose(System.Boolean)">
            <summary> 
            Clean up any resources being used.
            </summary>
        </member>
        <member name="M:DevComponents.DotNetBar.TabControl.InitializeComponent">
            <summary> 
            Required method for Designer support - do not modify 
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="M:DevComponents.DotNetBar.TabControl.ApplyDefaultPanelStyle(DevComponents.DotNetBar.TabControlPanel)">
            <summary>
            Applies default tab colors to the panel
            </summary>
            <param name="panel">Panel to apply colors to.</param>
        </member>
        <member name="M:DevComponents.DotNetBar.TabControl.ResumeLayout(System.Boolean)">
            <summary>
            Resumes normal layout logic. Optionally forces an immediate layout of pending layout requests.
            </summary>
        </member>
        <member name="M:DevComponents.DotNetBar.TabControl.SelectPreviousTab">
            <summary>
                Selectes previous visible tab. Returns true if previous tab was found for selection.
            </summary>
        </member>
        <member name="M:DevComponents.DotNetBar.TabControl.SelectNextTab">
            <summary>
                Selectes next visible tab. Returns true if next tab was found for selection.
            </summary>
        </member>
        <member name="M:DevComponents.DotNetBar.TabControl.ResetColorScheme">
            <summary>
            Resets color scheme to default value.
            </summary>
        </member>
        <member name="E:DevComponents.DotNetBar.TabControl.SelectedTabChanged">
            <summary>
            Occurs when selected tab changes.
            </summary>
        </member>
        <member name="E:DevComponents.DotNetBar.TabControl.TabMoved">
            <summary>
            Occurs when tab is dragged by user.
            </summary>
        </member>
        <member name="E:DevComponents.DotNetBar.TabControl.NavigateBack">
            <summary>
            Occurs when the user navigates back using the back arrow.
            </summary>
        </member>
        <member name="E:DevComponents.DotNetBar.TabControl.NavigateForward">
            <summary>
            Occurs when the user navigates forward using the forward arrow.
            </summary>
        </member>
        <member name="E:DevComponents.DotNetBar.TabControl.TabItemClose">
            <summary>
            Occurs when tab item is closing.
            </summary>
        </member>
        <member name="E:DevComponents.DotNetBar.TabControl.TabItemOpen">
            <summary>
            Occurs when tab item is added to the tabs collection.
            </summary>
        </member>
        <member name="E:DevComponents.DotNetBar.TabControl.BeforeTabDisplay">
            <summary>
            Occurs before control or item attached to the tab is displayed.
            </summary>
        </member>
        <member name="E:DevComponents.DotNetBar.TabControl.TabRemoved">
            <summary>
            Occurs after tab item has been removed from tabs collection.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.TabControl.Tabs">
            <summary>
            Gets the collection of all tabs.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.TabControl.TabStrip">
            <summary>
            Returns reference to interal tab strip control.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.TabControl.BackColor">
            <summary>
            Gets or sets the background color.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.TabControl.Animate">
            <summary>
            Gets or sets whether the tab scrolling is animanted.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.TabControl.AutoHideSystemBox">
            <summary>
            Gets or sets whether system box that enables scrolling and closing of the tabs is automatically hidden when tab items size does not exceed the size of the control.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.TabControl.CanReorderTabs">
            <summary>
            Specifes whether end-user can reorder the tabs.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.TabControl.CloseButtonVisible">
            <summary>
            Gets or sets whether the Close button that closes the active tab is visible.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.TabControl.DisplaySelectedTextOnly">
            <summary>
            Gets or sets whether only selected tab is displaying it's text.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.TabControl.ImageList">
            <summary>
            Gets or sets the image list used by tab items.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.TabControl.ScrollOffset">
            <summary>
            Gets or sets scrolling offset of the first tab. You can use this property to programmatically scroll the tab strip.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.TabControl.Style">
            <summary>
            Gets or sets Tab Control style. Theme style is supported only on themed OS and only for bottom or top aligned tabs.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.TabControl.TabScrollAutoRepeat">
            <summary>
            Gets or sets whether tabs are scrolled continuously while mouse is pressed over the scroll tab button.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.TabControl.TabScrollRepeatInterval">
            <summary>
            Gets or sets the auto-repeat interval for the tab scrolling while mouse button is kept pressed over the scroll tab button.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.TabControl.ColorScheme">
            <summary>
            Gets or sets Tab Color Scheme.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.TabControl.TabAlignment">
            <summary>
            Gets or sets the tab alignment within the Tab-Strip control.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.TabControl.SelectedTab">
            <summary>
            Gets or sets the selected tab.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.TabControl.ShowFocusRectangle">
            <summary>
            Gets or sets whether focus rectangle is displayed on the tab when tab has input focus.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.TabControl.SelectedTabIndex">
            <summary>
            Gets or sets the index of selected tab. The tab with this index will be by default always selected when tab control is first displayed.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.TabControl.SelectedPanel">
            <summary>
            Gets or sets selected tab panel.
            </summary>
        </member>
        <member name="T:DevComponents.DotNetBar.TabControlDesigner">
            <summary>
            Summary description for TabControlDesigner.
            </summary>
        </member>
        <member name="T:DevComponents.DotNetBar.TabStripDesigner">
            <summary>
            Summary description for TabStripDesigner.
            </summary>
        </member>
        <member name="F:DevComponents.DotNetBar.TabStripDesigner.m_SelectItem">
            <summary>
            Selection support for items on container.
            </summary>
        </member>
        <member name="T:DevComponents.DotNetBar.TabControlPanel">
            <summary>
            Represents Panel for the Tab Control.
            </summary>
        </member>
        <member name="M:DevComponents.DotNetBar.TabControlPanel.#ctor">
            <summary>
            Default constructor.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.TabControlPanel.TabItem">
            <summary>
            Gets or sets TabItem that this panel is attached to.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.TabControlPanel.UseCustomStyle">
            <summary>
            Indicates whether style of the panel is managed by tab control automatically.
            Set this to true if you would like to control style of the panel.
            </summary>
        </member>
        <member name="T:DevComponents.DotNetBar.TabControlPanelDesigner">
            <summary>
            Designer for Tab Control Panel.
            </summary>
        </member>
        <member name="T:DevComponents.DotNetBar.TabItem">
            <summary>
            Represents the Tab on the Tab-Strip control.
            </summary>
        </member>
        <member name="M:DevComponents.DotNetBar.TabItem.#ctor(System.ComponentModel.IContainer)">
            <summary>
            Default constructor.
            </summary>
            <param name="container">Container object.</param>
        </member>
        <member name="M:DevComponents.DotNetBar.TabItem.#ctor">
            <summary>
            Default constructor.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.TabItem.ImageIndex">
            <summary>
            Gets or sets the tab Image index.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.TabItem.Image">
            <summary>
            Gets or sets the tab image.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.TabItem.Icon">
            <summary>
            Gets or sets the tab icon. Icon has same functionality as Image except that it support Alpha blending.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.TabItem.Text">
            <summary>
            Gets or sets the text displayed on the tab.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.TabItem.Visible">
            <summary>
            Gets or sets whether tab is visible.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.TabItem.DisplayRectangle">
            <summary>
            Gets the display bounds of the tab.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.TabItem.AttachedControl">
            <summary>
            Gets or sets the control that is attached to this tab. When tab is selected the control Visible property is set to true and when tab is unselected the control Visible property is set to false.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.TabItem.BackColor">
            <summary>
            Gets or sets the background color of the tab when inactive.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.TabItem.BackColor2">
            <summary>
            Gets or sets the target gradient background color of the tab when inactive.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.TabItem.BackColorGradientAngle">
            <summary>
            Gets or sets the gradient angle.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.TabItem.LightBorderColor">
            <summary>
            Gets or sets the light border color when tab is inactive.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.TabItem.DarkBorderColor">
            <summary>
            Gets or sets the dark border color when tab is inactive.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.TabItem.BorderColor">
            <summary>
            Gets or sets the border color when tab is inactive.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.TabItem.TextColor">
            <summary>
            Gets or sets the text color when tab is inactive.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.TabItem.Name">
            <summary>
            Gets or sets name of the tab item that can be used to identify item from the code.
            </summary>
        </member>
        <member name="T:DevComponents.DotNetBar.TabsCollection">
            <summary>
            Summary description for TabsCollection.
            </summary>
        </member>
        <member name="T:DevComponents.DotNetBar.eTabStripAlignment">
            <summary>
            Specifies the tab alignment inside the Tab-Strip control.
            </summary>
        </member>
        <member name="F:DevComponents.DotNetBar.eTabStripAlignment.Left">
            <summary>
            Tabs are left aligned.
            </summary>
        </member>
        <member name="F:DevComponents.DotNetBar.eTabStripAlignment.Right">
            <summary>
            Tabs are right aligned.
            </summary>
        </member>
        <member name="F:DevComponents.DotNetBar.eTabStripAlignment.Top">
            <summary>
            Tabs are top aligned.
            </summary>
        </member>
        <member name="F:DevComponents.DotNetBar.eTabStripAlignment.Bottom">
            <summary>
            Tabs are bottom aligned.
            </summary>
        </member>
        <member name="T:DevComponents.DotNetBar.eTabStripStyle">
            <summary>
            Indicates tab strip style.
            </summary>
        </member>
        <member name="F:DevComponents.DotNetBar.eTabStripStyle.Flat">
            <summary>
            Default VS.NET like flat style.
            </summary>
        </member>
        <member name="F:DevComponents.DotNetBar.eTabStripStyle.Themed">
            <summary>
            Windows XP themed style
            </summary>
        </member>
        <member name="F:DevComponents.DotNetBar.eTabStripStyle.Office2003">
            <summary>
            Office 2003 like style.
            </summary>
        </member>
        <member name="F:DevComponents.DotNetBar.eTabStripStyle.OneNote">
            <summary>
            OneNote like style.
            </summary>
        </member>
        <member name="T:DevComponents.DotNetBar.TabStrip">
            <summary>
            Represents Tab-Strip control.
            </summary>
        </member>
        <member name="M:DevComponents.DotNetBar.TabStrip.#ctor">
            <summary>
            Default constructor.
            </summary>
        </member>
        <member name="M:DevComponents.DotNetBar.TabStrip.SelectPreviousTab">
            <summary>
                Selectes previous visible tab. Returns true if previous tab was found for selection.
            </summary>
        </member>
        <member name="M:DevComponents.DotNetBar.TabStrip.SelectNextTab">
            <summary>
                Selectes next visible tab. Returns true if next tab was found for selection.
            </summary>
        </member>
        <member name="M:DevComponents.DotNetBar.TabStrip.EnsureVisible(DevComponents.DotNetBar.TabItem)">
            <summary>
            Ensures that the tab is visible, scrolling the tab-strip view as necessary.
            </summary>
            <param name="tab">Tab to make visible.</param>
        </member>
        <member name="M:DevComponents.DotNetBar.TabStrip.Dispose(System.Boolean)">
            <summary> 
            Clean up any resources being used.
            </summary>
        </member>
        <member name="M:DevComponents.DotNetBar.TabStrip.ResetColorScheme">
            <summary>
            Resets color scheme to default value.
            </summary>
        </member>
        <member name="M:DevComponents.DotNetBar.TabStrip.HitTest(System.Int32,System.Int32)">
            <summary>
            Returns tab item that contais specified coordinates.
            </summary>
            <param name="x">X - coordinate to hit test</param>
            <param name="y">Y - coordinate to hit test</param>
            <returns></returns>
        </member>
        <member name="E:DevComponents.DotNetBar.TabStrip.SelectedTabChanged">
            <summary>
            Occurs when selected tab changes.
            </summary>
        </member>
        <member name="E:DevComponents.DotNetBar.TabStrip.TabMoved">
            <summary>
            Occurs when tab is dragged by user.
            </summary>
        </member>
        <member name="E:DevComponents.DotNetBar.TabStrip.NavigateBack">
            <summary>
            Occurs when the user navigates back using the back arrow.
            </summary>
        </member>
        <member name="E:DevComponents.DotNetBar.TabStrip.NavigateForward">
            <summary>
            Occurs when the user navigates forward using the forward arrow.
            </summary>
        </member>
        <member name="E:DevComponents.DotNetBar.TabStrip.TabItemClose">
            <summary>
            Occurs when tab item is closing.
            </summary>
        </member>
        <member name="E:DevComponents.DotNetBar.TabStrip.TabItemOpen">
            <summary>
            Occurs when tab item is added to the tabs collection.
            </summary>
        </member>
        <member name="E:DevComponents.DotNetBar.TabStrip.BeforeTabDisplay">
            <summary>
            Occurs before control or item attached to the tab is displayed.
            </summary>
        </member>
        <member name="E:DevComponents.DotNetBar.TabStrip.TabRemoved">
            <summary>
            Occurs after tab item has been removed from tabs collection.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.TabStrip.SelectedTabIndex">
            <summary>
            Gets or sets the index of currently selected tab.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.TabStrip.SelectedTab">
            <summary>
            Gets or sets the selected tab.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.TabStrip.TabScrollAutoRepeat">
            <summary>
            Gets or sets whether tabs are scrolled continuously while mouse is pressed over the scroll tab button.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.TabStrip.TabScrollRepeatInterval">
            <summary>
            Gets or sets the auto-repeat interval for the tab scrolling while mouse button is kept pressed over the scroll tab button.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.TabStrip.CloseButtonVisible">
            <summary>
            Gets or sets whether the Close button that closes the active tab is visible.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.TabStrip.Tabs">
            <summary>
            Gets the collection of all tabs.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.TabStrip.ImageList">
            <summary>
            Gets or sets the image list used by tab items.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.TabStrip.VariableTabWidth">
            <summary>
            Gets or sets whether tab size is adjusted to fit the available control size.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.TabStrip.ScrollOffset">
            <summary>
            Gets or sets scrolling offset of the first tab. You can use this property to programmatically scroll the tab strip.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.TabStrip.SelectedTabFont">
            <summary>
            Gets or sets the selected tab Font
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.TabStrip.TabAlignment">
            <summary>
            Gets or sets the tab alignment within the Tab-Strip control.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.TabStrip.CanReorderTabs">
            <summary>
            Specifes whether end-user can reorder the tabs.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.TabStrip.AutoHideSystemBox">
            <summary>
            Gets or sets whether system box that enables scrolling and closing of the tabs is automatically hidden when tab items size does not exceed the size of the control.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.TabStrip.BackColor">
            <summary>
            Gets or sets the background color.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.TabStrip.BackColor2">
            <summary>
            Gets or sets the target gradient background color.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.TabStrip.BackColorGradientAngle">
            <summary>
            Gets or sets the gradient angle.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.TabStrip.SelectedTabBackColor">
            <summary>
            Gets or sets the background color of the selected tab.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.TabStrip.SelectedTabBackColor2">
            <summary>
            Gets or sets the target gradient background color of the selected tab.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.TabStrip.SelectedTabGradientAngle">
            <summary>
            Gets or sets the gradient angle.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.TabStrip.SelectedTabBorderLightColor">
            <summary>
            Gets or sets the light border color of the selected tab.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.TabStrip.SelectedTabBorderDarkColor">
            <summary>
            Gets or sets the dark border color of the selected tab.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.TabStrip.SelectedTabTextColor">
            <summary>
            Gets or sets the text color of the selected tab.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.TabStrip.HotBackColor">
            <summary>
            Gets or sets the hot tab background color.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.TabStrip.HotBackColor2">
            <summary>
            Gets or sets the target gradient hot tab background color.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.TabStrip.HotBackColorGradientAngle">
            <summary>
            Gets or sets the gradient angle.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.TabStrip.HotBorderLightColor">
            <summary>
            Gets or sets the hot tab light border color.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.TabStrip.HotBorderDarkColor">
            <summary>
            Gets or sets the hot tab dark border color.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.TabStrip.HotTextColor">
            <summary>
            Gets or sets the text color when mouse is over the tab.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.TabStrip.SeparatorColor">
            <summary>
            Gets or sets the tab separator color.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.TabStrip.SeparatorShadeColor">
            <summary>
            Gets or sets the tab separator shading color.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.TabStrip.DisplaySelectedTextOnly">
            <summary>
            Gets or sets whether only selected tab is displaying it's text.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.TabStrip.Style">
            <summary>
            Gets or sets TabStrip style. Theme style is supported only on themed OS and only for bottom or top aligned tabs.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.TabStrip.ColorScheme">
            <summary>
            Gets or sets Tab Color Scheme.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.TabStrip.Animate">
            <summary>
            Gets or sets whether the tab scrolling is animanted.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.TabStrip.ShowFocusRectangle">
            <summary>
            Gets or sets whether focus rectangle is displayed when tab has input focus.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.TabStrip.MdiTabbedDocuments">
            <summary>
            Gets or sets whether Tab-Strip control provides Tabbed MDI Child form support.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.TabStrip.MaxMdiCaptionLength">
            <summary>
            Gets or sets the maximum number of characters that will be used as Tab text from Mdi Child caption.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.TabStrip.ShowMdiChildIcon">
            <summary>
            Gets or sets whether the Mdi Child Icon is displayed on Tab.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.TabStrip.MdiAutoHide">
            <summary>
            Gets or sets whether the Tab-strip is automatically hidden when there are not Mdi Child forms open.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.TabStrip.MdiNoFormActivateFlicker">
            <summary>
            Gets or sets whether flicker associated with switching maximized Mdi child forms is attempted to eliminate. You should set this property to false if you encounter any painting problems with your Mdi child forms.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.TabStrip.MdiForm">
            <summary>
            Gets or sets Mdi Container form for which Tab-Strip is providing Tabbed MDI Child support.
            </summary>
        </member>
        <member name="T:DevComponents.DotNetBar.TabStrip.SelectedTabChangedEventHandler">
            <summary>
            Event delegate for SelectedTabChanged event.
            </summary>
        </member>
        <member name="T:DevComponents.DotNetBar.TabStrip.TabMovedEventHandler">
            <summary>
            Event delegate for TabMoved event
            </summary>
        </member>
        <member name="T:DevComponents.DotNetBar.TabStrip.UserActionEventHandler">
            <summary>
            Event delegate for NavigateBack, NavigateForward and TabItemClose events.
            </summary>
        </member>
        <member name="T:DevComponents.DotNetBar.TabStripTabChangedEventArgs">
            <summary>
            Represents the event arguments for tab selection events.
            </summary>
        </member>
        <member name="F:DevComponents.DotNetBar.TabStripTabChangedEventArgs.OldTab">
            <summary>
            Currently selected tab.
            </summary>
        </member>
        <member name="F:DevComponents.DotNetBar.TabStripTabChangedEventArgs.NewTab">
            <summary>
            Tab being selected.
            </summary>
        </member>
        <member name="F:DevComponents.DotNetBar.TabStripTabChangedEventArgs.Cancel">
            <summary>
            Cancels the selection operation.
            </summary>
        </member>
        <member name="M:DevComponents.DotNetBar.TabStripTabChangedEventArgs.#ctor(DevComponents.DotNetBar.TabItem,DevComponents.DotNetBar.TabItem)">
            <summary>
            Default constructor.
            </summary>
            <param name="oldtab">Currently selected tab.</param>
            <param name="newtab">New selection.</param>
        </member>
        <member name="T:DevComponents.DotNetBar.TabStripTabMovedEventArgs">
            <summary>
            Represents the event arguments for tab moving events.
            </summary>
        </member>
        <member name="F:DevComponents.DotNetBar.TabStripTabMovedEventArgs.Tab">
            <summary>
            Tab being moved.
            </summary>
        </member>
        <member name="F:DevComponents.DotNetBar.TabStripTabMovedEventArgs.OldIndex">
            <summary>
            Moved from index.
            </summary>
        </member>
        <member name="F:DevComponents.DotNetBar.TabStripTabMovedEventArgs.NewIndex">
            <summary>
            Moving to index.
            </summary>
        </member>
        <member name="F:DevComponents.DotNetBar.TabStripTabMovedEventArgs.Cancel">
            <summary>
            Cancels the operation.
            </summary>
        </member>
        <member name="M:DevComponents.DotNetBar.TabStripTabMovedEventArgs.#ctor(DevComponents.DotNetBar.TabItem,System.Int32,System.Int32)">
            <summary>
            Default Constructor
            </summary>
            <param name="tab">Tab</param>
            <param name="oldindex">Old Index</param>
            <param name="newindex">New Index</param>
        </member>
        <member name="T:DevComponents.DotNetBar.TabStripActionEventArgs">
            <summary>
            Represents the event arguments for action events.
            </summary>
        </member>
        <member name="F:DevComponents.DotNetBar.TabStripActionEventArgs.Cancel">
            <summary>
            Cancels the operation.
            </summary>
        </member>
        <member name="M:DevComponents.DotNetBar.TabStripActionEventArgs.#ctor">
            <summary>
            Default Constructor.
            </summary>
        </member>
        <member name="T:DevComponents.DotNetBar.TabStripTabsEditor">
            <summary>
            Support for TabStrip tabs design-time editor.
            </summary>
        </member>
        <member name="M:DevComponents.DotNetBar.TabSystemBox.HideToolTip">
            <summary>
            Destroys tooltip window.
            </summary>
        </member>
        <member name="M:DevComponents.DotNetBar.TabSystemBox.ShowToolTip(System.String)">
            <summary>
            Shows tooltip for this item.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.TabSystemBox.ToolTipVisible">
            <summary>
            Gets whether tooltip is visible or not.
            </summary>
        </member>
        <member name="T:DevComponents.DotNetBar.TextBoxEx">
            <summary>
            Summary description for BarTextBox.
            </summary>
        </member>
        <member name="T:DevComponents.DotNetBar.TextBoxItem">
            <summary>
            	Summary description for TextBoxItem.
            </summary>
        </member>
        <member name="T:DevComponents.DotNetBar.Themes">
            <summary>
            Summary description for Themes.
            </summary>
        </member>
        <member name="T:DevComponents.DotNetBar.ToolbarName">
            <summary>
            Summary description for NewToolbar.
            </summary>
        </member>
        <member name="F:DevComponents.DotNetBar.ToolbarName.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:DevComponents.DotNetBar.ToolbarName.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
        </member>
        <member name="M:DevComponents.DotNetBar.ToolbarName.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:DevComponents.DotNetBar.ToolTip">
            <summary>
               Summary description for Tooltip.
            </summary>
        </member>
    </members>
</doc>
